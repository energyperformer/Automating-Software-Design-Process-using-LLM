Generate a UML use case diagram code for the description based on the following requirements in a proper syntatically way : {'entities': [('March 20, 2002', 'DATE'), ('1', 'CARDINAL'), ('Standard Co-Emulation Modeling \nInterface', 'ORG'), ('SCE-MI', 'ORG'), ('John Stickley', 'PERSON'), ('Duaine Pryor', 'PERSON'), ('SCE', 'ORG'), ('2001', 'DATE'), ('Ikos Systems, Inc.', 'ORG'), ('NDA', 'ORG'), ('SCE', 'ORG'), ('C/C++', 'ORG'), ('DUT', 'ORG'), ('DUT', 'ORG'), ('Ikos Systems', 'ORG'), ('79', 'CARDINAL'), ('Great Oaks Blvd', 'FAC'), ('San Jose', 'GPE'), ('CA 95119SCE-API\nStandard Co-Emulation API \nConsortium\nRevision', 'PRODUCT'), ('1.0Introduction', 'CARDINAL'), ('2', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('1.1', 'CARDINAL'), ('EDA', 'ORG'), ('SoC', 'ORG'), ('10 years ago', 'DATE'), ('the next 10 years', 'DATE'), ('SCE', 'ORG'), ('today', 'DATE'), ('today', 'DATE'), ('API', 'ORG'), ('1.1.2', 'CARDINAL'), ('VHDL PLI', 'PERSON'), ('1.2', 'CARDINAL'), ('the Standard Co-Emulation API  (', 'ORG'), ('SCE-API', 'ORG'), ('EDA', 'ORG'), ('EDA', 'ORG'), ('API', 'ORG'), ('Aptix', 'ORG'), ('Ikos Systems', 'ORG'), ('Mentor Graphics', 'ORG'), ('ST Microelectronics,', 'ORG'), ('Synopsys', 'PERSON'), ('TransEDA', 'ORG'), ('SCE-MI', 'ORG'), ('SCE', 'ORG'), ('SCE-API', 'ORG'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('SoC', 'ORG'), ('SCE-MI', 'ORG'), ('3', 'CARDINAL'), ('1.4', 'CARDINAL'), ('Acronyms', 'PERSON'), ('BCA', 'ORG'), ('RTL', 'ORG'), ('Date Revised', 'WORK_OF_ART'), ('1.0', 'CARDINAL'), ('12-11-00', 'TIME'), ('Pryor Initial', 'PERSON'), ('SCE', 'ORG'), ('Oct. 2000', 'DATE'), ('Paris', 'GPE'), ('France', 'GPE'), ('1.2', 'CARDINAL'), ('John Stickley Revised', 'PERSON'), ('second', 'ORDINAL'), ('SCE', 'ORG'), ('Dec 14-15', 'DATE'), ('2000', 'DATE'), ('Cupertino', 'GPE'), ('CA', 'PRODUCT'), ('1.3', 'CARDINAL'), ('John Stickley Revised', 'PERSON'), ('SCE-API committee', 'ORG'), ('1.2', 'CARDINAL'), ('1.4', 'CARDINAL'), ('John Stickley', 'PERSON'), ('Susan RossIncorporated', 'PERSON'), ('SCE', 'ORG'), ('1', 'CARDINAL'), ('1.5 5-6-01', 'QUANTITY'), ('John Stickley Corrections', 'PERSON'), ('VHDL', 'ORG'), ('John Stickley Changes', 'PERSON'), ('feedback to 1.5', 'CARDINAL'), ('1.7', 'CARDINAL'), ('10-19-01', 'TIME'), ('John Stickley', 'PERSON'), ('ServiceLoop', 'ORG'), ('1.8', 'CARDINAL'), ('11-14-01', 'DATE'), ('John Stickley Incorporated', 'PERSON'), ('2', 'CARDINAL'), ('John Stickley Added', 'PERSON'), ('SceMiIC', 'ORG'), ('4', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('Verilog', 'PRODUCT'), ('RTC', 'ORG'), ('UTC', 'ORG'), ('1.5', 'CARDINAL'), ('2.0 - Synopsys, Inc.', 'ORG'), ('CoWare, Inc.', 'ORG'), ('Frontier Design, Inc.', 'ORG'), ('2', 'CARDINAL'), ('3', 'CARDINAL'), ('the Verilog Hardware Description \nLanguage', 'FAC'), ('1364-1995', 'DATE'), ('4', 'CARDINAL'), ('IEEE Std', 'ORG'), ('1076-1993', 'DATE'), ('DUT', 'ORG'), ('two', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('RTL', 'ORG'), ('API', 'ORG'), ('\x7fIt', 'PERSON'), ('\x7fIt', 'PERSON'), ('SystemC', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('RTL', 'ORG'), ('SCE-MI', 'ORG'), ('5', 'CARDINAL'), ('941.6.1', 'CARDINAL'), ('C/C++', 'ORG'), ('1', 'CARDINAL'), ('DUT', 'ORG'), ('HDL', 'ORG'), ('HDL', 'ORG'), ('HDL', 'ORG'), ('dozens to hundreds', 'CARDINAL'), ('thousands', 'CARDINAL'), ('three', 'CARDINAL'), ('2.0', 'CARDINAL'), ('the SCE Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('3.0', 'CARDINAL'), ('4.0', 'CARDINAL'), ('API', 'ORG'), ('1.6.3 Document Conventions', 'MONEY'), ('API', 'ORG'), ('6', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('1', 'CARDINAL'), ('SCE-MI', 'ORG'), ('DUT', 'ORG'), ('1', 'CARDINAL'), ('RTL', 'ORG'), ('RTL', 'ORG'), ('HDL', 'ORG'), ('SCE', 'ORG'), ('two', 'CARDINAL'), ('C++', 'NORP'), ('API', 'ORG'), ('DUT', 'ORG'), ('DUT', 'ORG'), ('DUT\n C/', 'ORG'), ('Hardware Side', 'PRODUCT'), ('emulator)SCE-MI InfrastructureMessage Port \nProxy 1', 'ORG'), ('2', 'CARDINAL'), ('SCE-MI', 'ORG'), ('7', 'CARDINAL'), ('94In', 'CARDINAL'), ('SCE', 'ORG'), ('2.1.1', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('68', 'CARDINAL'), ('SCE', 'ORG'), ('CPU', 'ORG'), ('SCE', 'ORG'), ('2.2 Users', 'PERSON'), ('Interface', 'ORG'), ('three', 'CARDINAL'), ('\x7fSCE-MI', 'ORG'), ('2.2.1', 'CARDINAL'), ('RTL', 'ORG'), ('two', 'CARDINAL'), ('SCE-MI API', 'ORG'), ('DUT', 'ORG'), ('SCE', 'ORG'), ('section 4.1', 'LAW'), ('46', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('SCE', 'ORG'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('IP', 'ORG'), ('only two', 'CARDINAL'), ('two', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('2.2.3', 'CARDINAL'), ('SCE-MI Infrastructure', 'ORG'), ('2.3', 'CARDINAL'), ('Bridging Levels of Modeling Abstraction', 'ORG'), ('two', 'CARDINAL'), ('2.3.1', 'CARDINAL'), ('Untimed Software Level Modeling Abstraction\nSuppose', 'ORG'), ('DUT', 'ORG'), ('2', 'CARDINAL'), ('DUT', 'ORG'), ('USB', 'ORG'), ('DUT', 'ORG'), ('2', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('SCE-MI', 'ORG'), ('9', 'CARDINAL'), ('94FIGURE 2', 'CARDINAL'), ('Software Testbench', 'PERSON'), ('DUT', 'ORG'), ('RTL', 'ORG'), ('DUT', 'ORG'), ('BCA', 'ORG'), ('2.3.2', 'CARDINAL'), ('Cycle Accurate Hardware Level Modeling Abstraction\nSuppose', 'ORG'), ('2', 'CARDINAL'), ('DUT', 'ORG'), ('3', 'CARDINAL'), ('DUT', 'ORG'), ('SCE-MI', 'ORG'), ('SCE', 'ORG'), ('TB Model 0', 'PRODUCT'), ('TB', 'ORG'), ('Model 1 TB Model N-1DUT ModelOverall Description', 'PRODUCT'), ('94', 'CARDINAL'), ('SCE-MI)arriving', 'ORG'), ('DUT', 'ORG'), ('DUT', 'ORG'), ('2', 'CARDINAL'), ('DUT', 'ORG'), ('DUT', 'ORG'), ('SCE', 'ORG'), ('7', 'CARDINAL'), ('DUT', 'ORG'), ('3', 'CARDINAL'), ('SCE', 'ORG'), ('SCE-MI', 'ORG'), ('11', 'CARDINAL'), ('94FIGURE 3', 'CARDINAL'), ('Multichannel Abstraction Bridge Architecture', 'ORG'), ('2.3.3', 'CARDINAL'), ('Transactions', 'PERSON'), ('RTL', 'ORG'), ('BCA)Message Input\nPort Proxy', 'PERSON'), ('0', 'CARDINAL'), ('Model 0', 'PRODUCT'), ('Model 1 TB Model N-1Message Output\nPort Proxy', 'PRODUCT'), ('1', 'CARDINAL'), ('ProxyHardware Side Software SideOverall Description', 'ORG'), ('12', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE-MI)In', 'ORG'), ('C++', 'NORP'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('SCE', 'ORG'), ('DUT', 'ORG'), ('DUT', 'ORG'), ('C++', 'NORP'), ('SystemC', 'CARDINAL'), ('DUT', 'ORG'), ('hundreds', 'CARDINAL'), ('DUT', 'ORG'), ('hundreds to thousands', 'CARDINAL'), ('DUT', 'ORG'), ('2.3.4', 'CARDINAL'), ('Controlled', 'NORP'), ('DUT', 'ORG'), ('one', 'CARDINAL'), ('4', 'CARDINAL'), ('4', 'CARDINAL'), ('DUT', 'ORG'), ('one', 'CARDINAL'), ('SCE-MI', 'ORG'), ('13', 'CARDINAL'), ('94FIGURE 4', 'CARDINAL'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('DUT', 'ORG'), ('one', 'CARDINAL'), ('SCE', 'ORG'), ('Time View', 'ORG'), ('94', 'CARDINAL'), ('four', 'CARDINAL'), ('2.4.1', 'CARDINAL'), ('third', 'ORDINAL'), ('IP', 'ORG'), ('ISS', 'ORG'), ('SCE', 'ORG'), ('2.4.2', 'CARDINAL'), ('DUT', 'ORG'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('2.4.3', 'CARDINAL'), ('2.4.4', 'CARDINAL'), ('API', 'ORG'), ('SCE-MI', 'ORG'), ('15', 'CARDINAL'), ('2.5', 'CARDINAL'), ('SCE-MI Interface Components', 'ORG'), ('2.5.1', 'CARDINAL'), ('Hardware Side Interface Components', 'ORG'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('DUT', 'ORG'), ('Verilog', 'PRODUCT'), ('VHDL', 'PERSON'), ('API', 'ORG'), ('API', 'ORG'), ('RTC', 'ORG'), ('VHDL', 'PERSON'), ('RTC', 'ORG'), ('four', 'CARDINAL'), ('DUT', 'ORG'), ('2.5.2', 'CARDINAL'), ('Software', 'ORG'), ('Interface Components', 'ORG'), ('SCE-MI', 'ORG'), ('C++', 'NORP'), ('C++', 'NORP'), ('User’s Guide', 'ORG'), ('16', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('3.1', 'CARDINAL'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('four', 'CARDINAL'), ('DUT', 'ORG'), ('One', 'CARDINAL'), ('one', 'CARDINAL'), ('SceMiMessageOutPort', 'ORG'), ('SceMiClockPort', 'ORG'), ('SceMiClockPort', 'ORG'), ('SceMiClockPort', 'ORG'), ('DUT', 'ORG'), ('SceMiClockPort', 'ORG'), ('ClockNum', 'ORG'), ('one', 'CARDINAL'), ('two', 'CARDINAL'), ('ClockNum', 'ORG'), ('SceMiClockPort', 'ORG'), ('one', 'CARDINAL'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('59', 'CARDINAL'), ('5', 'CARDINAL'), ('DUT', 'ORG'), ('SCE', 'ORG'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('17', 'CARDINAL'), ('94FIGURE 5', 'DATE'), ('SCE', 'ORG'), ('DUT', 'ORG'), ('DUT', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('SceMiClockPort', 'ORG'), ('2.2', 'CARDINAL'), ('7', 'CARDINAL'), ('SCE', 'ORG'), ('SceMiClockPort', 'ORG'), ('SceMiClockPort', 'ORG'), ('SceMiClockPort', 'ORG'), ('5', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'DATE'), ('50', 'DATE'), ('50', 'DATE'), ('0', 'CARDINAL'), ('8)', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('4.1.4', 'CARDINAL'), ('51', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('1TransmitReady', 'CARDINAL'), ('63:0', 'CARDINAL'), ('MessageOut', 'ORG'), ('127:0]TransactorCore', 'CARDINAL'), ('DutInCtrl', 'PERSON'), ('DutInCtrl', 'PERSON'), ('1', 'CARDINAL'), ('1', 'DATE'), ('50', 'DATE'), ('50', 'DATE'), ('0', 'DATE'), ('8)', 'CARDINAL'), ('18', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE-MI)\x7fDutyHi  =', 'ORG'), ('50', 'CARDINAL'), ('50', 'CARDINAL'), ('0', 'CARDINAL'), ('8', 'CARDINAL'), ('ClockNum', 'ORG'), ('1', 'CARDINAL'), ('ClockNum', 'ORG'), ('1', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('PortWidth', 'ORG'), ('Bridge', 'WORK_OF_ART'), ('1/1', 'CARDINAL'), ('50/50', 'CARDINAL'), ('0', 'CARDINAL'), ('4.1.4.1', 'CARDINAL'), ('52', 'CARDINAL'), ('8', 'CARDINAL'), ('64', 'CARDINAL'), ('SceMiMessageOutPort', 'ORG'), ('128', 'CARDINAL'), ('two', 'CARDINAL'), ('three', 'CARDINAL'), ('Appendix', 'NORP'), ('90', 'CARDINAL'), ('3.2', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('DUT', 'ORG'), ('Verilog', 'PRODUCT'), ('SystemC', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('1', 'CARDINAL'), ('3.2.1', 'CARDINAL'), ('Origin', 'GPE'), ('Pipe s', 'PERSON'), ('Hubs', 'ORG'), ('RouteMap', 'GPE'), ('the \nOrigin s and', 'ORG'), ('Destination', 'PRODUCT'), ('RouteMap', 'ORG'), ('DUT', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('Destination', 'PRODUCT'), ('User’s Guide', 'ORG'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('19', 'CARDINAL'), ('Anchorage', 'GPE'), ('Cupertino', 'GPE'), ('Noida', 'GPE'), ('SealBeach', 'ORG'), ('UK', 'GPE'), ('Waltham', 'GPE'), ('Anchorage', 'GPE'), ('Cupertino', 'GPE'), ('Maui', 'LOC'), ('SealBeach', 'ORG'), ('UK', 'GPE'), ('Origin', 'PERSON'), ('Destination', 'PRODUCT'), ('RouteMap', 'ORG'), ('DUT', 'ORG'), ('Pipe', 'ORG'), ('Hubs', 'PERSON'), ('Chicago', 'GPE'), ('Dallas', 'GPE'), ('Newark', 'GPE'), ('SanFran', 'GPE'), ('Seattle', 'GPE'), ('one hour', 'TIME'), ('6', 'CARDINAL'), ('User’s Guide', 'ORG'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('6', 'CARDINAL'), ('hours', 'TIME'), ('Pipe', 'ORG'), ('two hours', 'TIME'), ('RouteMap', 'ORG'), ('TeachRoute', 'ORG'), ('Waltham Origin', 'ORG'), ('TeachRoute', 'ORG'), ('5', 'CARDINAL'), ('Seattle', 'GPE'), ('1', 'CARDINAL'), ('3', 'CARDINAL'), ('Newark', 'GPE'), ('31Waltham', 'CARDINAL'), ('UK', 'GPE'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('21', 'CARDINAL'), ('94addressed', 'CARDINAL'), ('Hub', 'ORG'), ('9', 'CARDINAL'), ('25', 'CARDINAL'), ('RouteConfig', 'ORG'), ('Waltham', 'GPE'), ('TeachRoute', 'ORG'), ('Hubs', 'PERSON'), ('Waltham', 'GPE'), ('first', 'ORDINAL'), ('closer hubs', 'PERSON'), ('RouteMap', 'GPE'), ('4', 'CARDINAL'), ('22 days', 'DATE'), ('Destination', 'PRODUCT'), ('Origin', 'PRODUCT'), ('RouteMap', 'ORG'), ('3.2.2.1', 'CARDINAL'), ('TestbenchCalendar', 'ORG'), ('Calendar', 'PERSON'), ('Scheduler', 'ORG'), ('Origin', 'PERSON'), ('Destination', 'PRODUCT'), ('SCE-MI', 'ORG'), ('22', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('Bridge', 'PERSON'), ('UK', 'GPE'), ('waltham\nDestination', 'ORG'), ('RouteMap                \nHub chicagoHub', 'PRODUCT'), ('Notice', 'ORG'), ('Bridge', 'ORG'), ('SceMiClockPort', 'ORG'), ('DUT', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('ClockAdvancer', 'ORG'), ('Hardware Side\n', 'PRODUCT'), ('7', 'CARDINAL'), ('3', 'CARDINAL'), ('11', 'CARDINAL'), ('13', 'CARDINAL'), ('Two', 'CARDINAL'), ('Calendar', 'PERSON'), ('six', 'CARDINAL'), ('Scheduler', 'PERSON'), ('five', 'CARDINAL'), ('Scheduler', 'PERSON'), ('User’s Guide', 'ORG'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('23', 'CARDINAL'), ('94FIGURE 7', 'CARDINAL'), ('The Bridge\n', 'EVENT'), ('two', 'CARDINAL'), ('Calendar', 'PERSON'), ('Scheduler', 'PERSON'), ('two', 'CARDINAL'), ('SCE', 'ORG'), ('SystemC', 'CARDINAL'), ('Scheduler', 'PERSON'), ('DUT', 'ORG'), ('UK', 'GPE'), ('OrigDest', 'FAC'), ('Port', 'GPE'), ('ScheduleLeg', 'ORG'), ('PortNoida', 'ORG'), ('UK', 'GPE'), ('OrigDestRouteMapDUT\nMessageUser’s Guide and Tutorial\n24', 'ORG'), ('94', 'CARDINAL'), ('SCE-MI)In', 'ORG'), ('ClockAdvancer', 'ORG'), ('Calendar', 'PERSON'), ('ClockAdvancer', 'ORG'), ('DUT', 'ORG'), ('section 3.2.3.5', 'LAW'), ('28', 'CARDINAL'), ('DUT', 'ORG'), ('8', 'CARDINAL'), ('RouteMap', 'ORG'), ('DUT', 'ORG'), ('RouteMap', 'ORG'), ('8', 'CARDINAL'), ('DUT', 'ORG'), ('Transactor Interconnect\nOrigin\nTokenOut\nDestination\nTokenIn\nDestination\nTokenInP', 'ORG'), ('ePipe 5\nP\nip\n', 'PRODUCT'), ('ePipe 5\nP\nip\n', 'PRODUCT'), ('ePipe 4Funnel\nIn0', 'QUANTITY'), ('5AnchorageSeattle', 'CARDINAL'), ('Maui4User’s Guide', 'ORG'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('25', 'CARDINAL'), ('94Pipe', 'CARDINAL'), ('two', 'CARDINAL'), ('Destination', 'PRODUCT'), ('Longer Pipe', 'ORG'), ('one hour Pipe', 'TIME'), ('one hour', 'TIME'), ('one', 'CARDINAL'), ('the Seattle Hub  and', 'FAC'), ('Maui Destination', 'ORG'), ('four hour', 'TIME'), ('Seattle', 'GPE'), ('3.2.3.3', 'CARDINAL'), ('DUT', 'ORG'), ('Transactor Components', 'ORG'), ('9', 'CARDINAL'), ('DUT', 'ORG'), ('9', 'CARDINAL'), ('DUT', 'ORG'), ('Transactor Components', 'ORG'), ('MessageIn Port\nClockControl', 'PERSON'), ('MessageOut Port\nClockControl\nMessageIn Port', 'ORG'), ('PortOrigin', 'PRODUCT'), ('TokenOut1', 'DATE'), ('TokenOut', 'ORG'), ('32', 'CARDINAL'), ('32', 'CARDINAL'), ('32', 'CARDINAL'), ('32', 'CARDINAL'), ('32', 'CARDINAL'), ('32', 'CARDINAL'), ('0307 1113', 'DATE'), ('Token', 'PERSON'), ('1115', 'DATE'), ('23 31', 'DATE'), ('31Token', 'CARDINAL'), ('26', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE-MI)Each Origin', 'ORG'), ('Scheduler', 'PERSON'), ('TokenOut', 'ORG'), ('Origin', 'PRODUCT'), ('Scheduler', 'PERSON'), ('RouteMap', 'ORG'), ('Destination', 'PRODUCT'), ('TokenIn', 'PERSON'), ('3.2.3.4', 'CARDINAL'), ('26', 'CARDINAL'), ('Destination', 'PRODUCT'), ('32', 'CARDINAL'), ('0s', 'DATE'), ('Token', 'ORG'), ('9', 'CARDINAL'), ('Destination', 'PRODUCT'), ('Funnel', 'ORG'), ('up to four', 'CARDINAL'), ('Nozzle', 'PERSON'), ('four', 'CARDINAL'), ('Nozzle', 'PERSON'), ('TeachRoute', 'ORG'), ('3.2.3.4', 'CARDINAL'), ('DUT', 'ORG'), ('Clock', 'ORG'), ('RouteMap', 'ORG'), ('Destination', 'PRODUCT'), ('RouteMap', 'ORG'), ('TokenIn', 'PERSON'), ('RouteMap', 'ORG'), ('Verilog', 'PERSON'), ('Destination', 'PRODUCT'), ('User’s Guide', 'ORG'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('27', 'CARDINAL'), ('3:0', 'CARDINAL'), ('31:0', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('DUT', 'ORG'), ('DUT', 'ORG'), ('0', 'CARDINAL'), ('DUT', 'ORG'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('&& destID', 'ORG'), ('0', 'CARDINAL'), ('1', 'CARDINAL'), ('DUT', 'ORG'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('User’s Guide', 'ORG'), ('28', 'CARDINAL'), ('94', 'CARDINAL'), ('ClockAdvancer', 'ORG'), ('ClockAdvancer', 'ORG'), ('User’s Guide', 'ORG'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('29', 'CARDINAL'), ('Verilog', 'PRODUCT'), ('ClockAdvancer', 'ORG'), ('ClockAdvancer', 'ORG'), ('31:0', 'CARDINAL'), ('31:0', 'CARDINAL'), ('1', 'CARDINAL'), ('messageIn[31:0', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('transmitReadyIn && !', 'ORG'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('readyForCclock && cclockEnabled', 'ORG'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('Notice', 'ORG'), ('Destination', 'PRODUCT'), ('ClockAdvancer', 'ORG'), ('the Destination  User’s Guide', 'ORG'), ('30', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('only one', 'CARDINAL'), ('1/1', 'CARDINAL'), ('Notice', 'ORG'), ('ClockAdvancer', 'ORG'), ('0', 'CARDINAL'), ('ClockAdvancer', 'ORG'), ('4.3.5.3', 'CARDINAL'), ('75', 'CARDINAL'), ('3.2.4', 'CARDINAL'), ('Software', 'ORG'), ('Routed', 'NORP'), ('SystemC', 'GPE'), ('C++', 'PERSON'), ('SCE', 'ORG'), ('3.2.4.1', 'CARDINAL'), ('The\n System  Model: Interconnect of', 'ORG'), ('System', 'ORG'), ('SystemC modules', 'QUANTITY'), ('SC_MODULE', 'PERSON'), ('System', 'ORG'), ('10', 'CARDINAL'), ('10', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('ScheduleLeg', 'ORG'), ('DoneCalendar', 'PRODUCT'), ('AdvanceCalendar', 'ORG'), ('DoneScheduler', 'ORG'), ('RouteConfig\nLoadRouteMap LoadRoute', 'ORG'), ('Channel sTestbench ArchitectureUser’s Guide', 'ORG'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('31', 'CARDINAL'), ('System', 'PERSON'), ('SC_MODULE', 'PERSON'), ('Testbench      *', 'PERSON'), ('Calendar       ', 'WORK_OF_ART'), ('Scheduler      *', 'PERSON'), ('RouteConfig    *', 'ORG'), ('Testbench', 'ORG'), ('testbench->NewDay(          newDay', 'DATE'), ('testbench->LoadRouteMap', 'PERSON'), ('Calendar', 'PERSON'), ('Scheduler', 'PERSON'), ('RouteConfig', 'ORG'), ('routeConfig->LoadRouteMap', 'ORG'), ('SystemC', 'CARDINAL'), ('User’s Guide', 'ORG'), ('32', 'CARDINAL'), ('94', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('one', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('SCE', 'ORG'), ('SystemC', 'CARDINAL'), ('C++', 'NORP'), ('1', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('SCE-MI', 'ORG'), ('SystemC', 'CARDINAL'), ('10', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('Testbench', 'ORG'), ('two', 'CARDINAL'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('33', 'CARDINAL'), ('943.2.4.2', 'CARDINAL'), ('Routine', 'ORG'), ('Error Handler', 'PERSON'), ('SystemC', 'CARDINAL'), ('C++', 'PERSON'), ('void errorHandler', 'PERSON'), ('ec', 'ORG'), ('SCE-MI Error', 'ORG'), ('\\n', 'WORK_OF_ART'), ('errorHandler', 'PERSON'), ('NULL', 'ORG'), ('NULL', 'ORG'), ('1', 'CARDINAL'), ('// Instantiate', 'ORG'), ('system.calendar  ->Bind', 'PRODUCT'), ('SystemC', 'CARDINAL'), ('Fatal Error: Program', 'WORK_OF_ART'), ('-1', 'ORG'), ('Fatal Error: Program', 'WORK_OF_ART'), ('-1', 'ORG'), ('0', 'CARDINAL'), ('first', 'ORDINAL'), ('errorHandler', 'PERSON'), ('User’s Guide', 'ORG'), ('34', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE-MI)before', 'ORG'), ('C++', 'NORP'), ('SCE', 'ORG'), ('System', 'ORG'), ('SCE-MI', 'ORG'), ('Bind', 'PERSON'), ('SystemC', 'CARDINAL'), ('-1', 'ORG'), ('3.2.4.3', 'CARDINAL'), ('SCE-MI Service', 'ORG'), ('SCE', 'ORG'), ('68', 'CARDINAL'), ('SCE', 'ORG'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('35', 'CARDINAL'), ('SC_MODULE', 'PERSON'), ('// Autonomous SceMi', 'PERSON'), ('Bind', 'ORG'), ('SC_CTOR', 'ORG'), ('one', 'CARDINAL'), ('Testbench', 'GPE'), ('10', 'CARDINAL'), ('30', 'CARDINAL'), ('Done', 'ORG'), ('Testbench', 'ORG'), ('Testbench', 'ORG'), ('section).User’s Guide', 'ORG'), ('36', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE-MI)3.2.4.4 Application Specific Data Types', 'ORG'), ('Routed.hxx', 'ORG'), ('NumPassengers', 'ORG'), ('4', 'CARDINAL'), ('NumLocations', 'ORG'), ('12', 'CARDINAL'), ('MessageSize', 'ORG'), ('15', 'CARDINAL'), ('BugsBunny', 'ORG'), ('ElmerFudd', 'ORG'), ('LocationIDs', 'PERSON'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('Cupertino', 'GPE'), ('3', 'CARDINAL'), ('Dallas', 'GPE'), ('4', 'CARDINAL'), ('5', 'CARDINAL'), ('6', 'CARDINAL'), ('7', 'CARDINAL'), ('8', 'CARDINAL'), ('9', 'CARDINAL'), ('Seattle', 'GPE'), ('10', 'CARDINAL'), ('UK', 'GPE'), ('11', 'CARDINAL'), ('12', 'CARDINAL'), ('LocationIDs', 'PERSON'), ('LocationIDs', 'PERSON'), ('ArrivalRecord', 'ORG'), ('LayoverCount', 'ORG'), ('LocationIDs', 'PERSON'), ('OriginID', 'ORG'), ('LocationIDs', 'PERSON'), ('LocationIDs', 'PERSON'), ('Route', 'ORG'), ('LocationIDs', 'PERSON'), ('LocationIDs', 'PERSON'), ('Date', 'WORK_OF_ART'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('37', 'CARDINAL'), ('94', 'CARDINAL'), ('3.2.4.5', 'CARDINAL'), ('Testbench', 'ORG'), ('SystemC', 'CARDINAL'), ('four', 'CARDINAL'), ('Scheduler', 'PERSON'), ('Testbench', 'ORG'), ('day', 'DATE'), ('BugsBunny', 'ORG'), ('20', 'CARDINAL'), ('10', 'CARDINAL'), ('BugsBunny', 'ORG'), ('BugsBunny', 'ORG'), ('day', 'DATE'), ('DaffyDuck', 'ORG'), ('Waltham', 'GPE'), ('Cupertino', 'GPE'), ('DaffyDuck', 'ORG'), ('Cupertino', 'GPE'), ('22', 'CARDINAL'), ('DaffyDuck', 'ORG'), ('Cupertino', 'GPE'), ('DaffyDuck', 'ORG'), ('day', 'DATE'), ('3,      5', 'TIME'), ('ElmerFudd', 'ORG'), ('23', 'CARDINAL'), ('3', 'CARDINAL'), ('ElmerFudd', 'ORG'), ('Cupertino', 'GPE'), ('ElmerFudd', 'ORG'), ('/*On day', 'DATE'), ('1,      1', 'TIME'), ('20', 'CARDINAL'), ('BugsBunny      ', 'PRODUCT'), ('Chicago', 'GPE'), ('Cupertino', 'GPE'), ('Dallas', 'GPE'), ('Maui     ', 'WORK_OF_ART'), ('SanFran', 'WORK_OF_ART'), ('SealBeach', 'ORG'), ('Seattle', 'GPE'), ('UK', 'GPE'), ('User’s Guide', 'ORG'), ('38', 'CARDINAL'), ('94', 'CARDINAL'), ('four', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('SC_MODULE', 'PERSON'), ('Testbench', 'ORG'), ('SystemC', 'CARDINAL'), ('SC_CTOR', 'ORG'), ('SC_MODULE', 'PERSON'), ('Testbench', 'ORG'), ('sc_master', 'PERSON'), ('sc_master', 'PERSON'), ('NewDay', 'CARDINAL'), ('ScheduleLeg', 'ORG'), ('// Autonomous', 'PERSON'), ('NewDay', 'CARDINAL'), ('Testbench', 'ORG'), ('SC_THREAD', 'ORG'), ('NewDay', 'CARDINAL'), ('User’s Guide', 'ORG'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('39', 'CARDINAL'), ('// Signal RouteConfig', 'PERSON'), ('RouteMap', 'ORG'), ('AdvanceCalendar', 'ORG'), ('1', 'CARDINAL'), ('// Advance', 'PERSON'), ('day 1', 'DATE'), ('// Wait', 'PERSON'), ('1000', 'CARDINAL'), ('today', 'DATE'), ('tomorrow', 'DATE'), ('tomorrow', 'DATE'), ('dItineraries[i]->DateOfTravel', 'CARDINAL'), ('00', 'CARDINAL'), ('ScheduleLeg', 'ORG'), ('AdvanceCalendar', 'PRODUCT'), ('two', 'CARDINAL'), ('First', 'ORDINAL'), ('LoadRouteMap', 'GPE'), ('RouteConfig', 'ORG'), ('Hubs', 'ORG'), ('RouteMap', 'GPE'), ('one', 'CARDINAL'), ('one', 'CARDINAL'), ('RouteConfig', 'ORG'), ('AdvanceClock', 'ORG'), ('Calendar', 'PERSON'), ('RouteMap', 'ORG'), ('Hubs', 'ORG'), ('RouteMap', 'ORG'), ('Calendar', 'PERSON'), ('Calendar', 'PERSON'), ('NewDay', 'CARDINAL'), ('the current day', 'DATE'), ('Calendar', 'PERSON'), ('the first day', 'DATE'), ('ScheduleLeg', 'ORG'), ('Scheduler', 'PERSON'), ('User’s Guide', 'ORG'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('the Maui  Destination', 'FAC'), ('Testbench', 'ORG'), ('ArrivalRecord', 'ORG'), ('Scheduler', 'PERSON'), ('00', 'CARDINAL'), ('\\n        ', 'WORK_OF_ART'), ('= Routed::Maui &&', 'ORG'), ('Maui', 'LOC'), ('// Signal', 'PERSON'), ('User’s Guide', 'ORG'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('41', 'CARDINAL'), ('943.2.4.6', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('Scheduler', 'PERSON'), ('SC_MODULE', 'PERSON'), ('Scheduler', 'PERSON'), ('ScheduleLeg', 'ORG'), ('SceMiMessageData', 'ORG'), ('Bind', 'ORG'), ('SC_CTOR', 'ORG'), ('Scheduler', 'ORG'), ('dOriginAnchorage(NULL', 'ORG'), ('dOriginWaltham(NULL', 'PERSON'), ('dDestinationAnchorage(NULL', 'GPE'), ('ScheduleLeg', 'ORG'), ('LoadRoute', 'ORG'), ('User’s Guide', 'ORG'), ('94', 'CARDINAL'), ('SCE-MI', 'ORG'), ('two', 'CARDINAL'), ('TeachRoute', 'ORG'), ('RouteMap', 'ORG'), ('the Waltham Origin', 'ORG'), ('RouteMap', 'ORG'), ('first', 'ORDINAL'), ('RouteConfig', 'ORG'), ('LoadRouteMap', 'GPE'), ('Scheduler', 'PERSON'), ('ScheduleLeg', 'ORG'), ('Testbench', 'ORG'), ('Origin', 'PRODUCT'), ('Scheduler', 'PERSON'), ('Origin', 'PRODUCT'), ('ScheduleLeg', 'ORG'), ('4', 'CARDINAL'), ('12', 'CARDINAL'), ('16', 'CARDINAL'), ('0', 'CARDINAL'), ('3.2.4.2', 'CARDINAL'), ('33', 'CARDINAL'), ('SCE', 'ORG'), ('User’s Guide', 'ORG'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('43', 'CARDINAL'), ('4.3.3.5', 'CARDINAL'), ('67', 'CARDINAL'), ('TokenIn', 'WORK_OF_ART'), ('TokenIn', 'WORK_OF_ART'), ('TokenIn', 'WORK_OF_ART'), ('TokenIn', 'WORK_OF_ART'), ('TokenIn', 'WORK_OF_ART'), ('TokenIn', 'WORK_OF_ART'), ('TokenOut', 'ORG'), ('= scemi->BindMessageOutPort', 'PERSON'), ('TokenOut', 'ORG'), ('dDestinationMaui      ', 'PRODUCT'), ('TokenOut', 'ORG'), ('TokenOut', 'ORG'), ('TokenOut', 'ORG'), ('Scheduler', 'PERSON'), ('Calendar', 'PERSON'), ('24 hours', 'TIME'), ('24', 'CARDINAL'), ('Scheduler', 'ORG'), ('SCE', 'ORG'), ('Bind', 'PERSON'), ('SceMiMessageData', 'ORG'), ('Scheduler', 'PERSON'), ('Routed::ArrivalRecord', 'CARDINAL'), ('TodaysDate', 'ORG'), ('Calendar', 'PERSON'), ('User’s Guide', 'ORG'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('Testbench', 'ORG'), ('TodaysDate', 'ORG'), ('today', 'DATE'), ('Calendar', 'PERSON'), ('todaysDate.', 'DATE'), ('Routed::PassengerIDs', 'ORG'), ('Routed::LocationIDs', 'ORG'), ('4', 'CARDINAL'), ('Routed::LocationIDs', 'ORG'), ('12', 'CARDINAL'), ('LayoverCount', 'ORG'), ('8)', 'CARDINAL'), ('LayoverCount', 'ORG'), ('5', 'CARDINAL'), ('16', 'CARDINAL'), ('LayoverCount', 'ORG'), ('Routed::LocationIDs', 'ORG'), ('arrivalToken & 0xf', 'ORG'), ('4', 'CARDINAL'), ('// Arrival', 'PERSON'), ('3.2.4.7', 'CARDINAL'), ('Calendar', 'PERSON'), ('RouteMap', 'ORG'), ('one', 'CARDINAL'), ('Origin', 'PRODUCT'), ('a particular day', 'DATE'), ('Calendar', 'PERSON'), ('DUT', 'ORG'), ('24', 'CARDINAL'), ('24 hours', 'TIME'), ('24', 'CARDINAL'), ('more than one day', 'DATE'), ('Calendar', 'PERSON'), ('ClockAdvancer', 'ORG'), ('DUT', 'ORG'), ('ClockControl', 'ORG'), ('Calendar', 'PRODUCT'), ('Scheduler', 'PERSON'), ('Calendar', 'PERSON'), ('two', 'CARDINAL'), ('AdvanceCalendar', 'ORG'), ('User’s Guide', 'ORG'), ('Tutorial\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('45', 'CARDINAL'), ('one', 'CARDINAL'), ('RouteMap', 'ORG'), ('TeachRoute', 'ORG'), ('one', 'CARDINAL'), ('0', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('// Send', 'PERSON'), ('Notice', 'ORG'), ('SystemC', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('34', 'CARDINAL'), ('ClockAdvancer', 'ORG'), ('one', 'CARDINAL'), ('SceMiMessageData', 'ORG'), ('Calendar', 'PERSON'), ('SceMiMessageData', 'ORG'), ('two', 'CARDINAL'), ('Formal Functional Specification', 'ORG'), ('46', 'CARDINAL'), ('94', 'CARDINAL'), ('Formal Functional Specification\n4.1', 'ORG'), ('4.1.1 Dual Ready Protocol', 'WORK_OF_ART'), ('11', 'CARDINAL'), ('11', 'CARDINAL'), ('TransmitReady', 'PERSON'), ('ReceiveReady', 'PERSON'), ('ReceiveReady', 'PERSON'), ('two', 'CARDINAL'), ('TransmitReady', 'PERSON'), ('ReceiveReady', 'ORG'), ('d1 1st', 'DATE'), ('SCE-MI', 'ORG'), ('47', 'CARDINAL'), ('two', 'CARDINAL'), ('12', 'CARDINAL'), ('Verilog', 'PRODUCT'), ('VHDL', 'PERSON'), ('12', 'CARDINAL'), ('4.1.2.1', 'CARDINAL'), ('one', 'CARDINAL'), ('11', 'CARDINAL'), ('46', 'CARDINAL'), ('48', 'CARDINAL'), ('ReceiveReady', 'ORG'), ('ReceiveReady', 'ORG'), ('ReceiveReady', 'NORP'), ('TransmitReady', 'PERSON'), ('PortWidth', 'ORG'), ('1', 'CARDINAL'), ('ReceiveReady', 'ORG'), ('PortWidth-1:0] Message', 'WORK_OF_ART'), ('VHDL Macro Wrapper', 'ORG'), ('PortWidth', 'ORG'), ('ReceiveReady', 'NORP'), ('EmptyMacro', 'ORG'), ('48', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('one', 'CARDINAL'), ('TransmitReady', 'PERSON'), ('first', 'ORDINAL'), ('ReceiveReady', 'ORG'), ('4.1.2.2 Input Ready Propagation', 'PERSON'), ('first', 'ORDINAL'), ('section 4.3.3.4', 'LAW'), ('66', 'CARDINAL'), ('SCE', 'ORG'), ('ServiceLoop', 'ORG'), ('ServiceLoop', 'ORG'), ('second', 'ORDINAL'), ('ServiceLoop', 'ORG'), ('Formal Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('49', 'CARDINAL'), ('94It', 'CARDINAL'), ('ServiceLoop', 'ORG'), ('50', 'CARDINAL'), ("51'st", 'CARDINAL'), ('ServiceLoop', 'ORG'), ('11', 'CARDINAL'), ('46', 'CARDINAL'), ('First', 'ORDINAL'), ('two', 'CARDINAL'), ('Second', 'ORDINAL'), ('two', 'CARDINAL'), ('13', 'CARDINAL'), ('four', 'CARDINAL'), ('13', 'CARDINAL'), ('MessageFormal Functional Specification', 'ORG'), ('50', 'CARDINAL'), ('94', 'CARDINAL'), ('\x7fReceiveReady', 'PERSON'), ('first', 'ORDINAL'), ('\x7fReceiveReady', 'PERSON'), ('0', 'CARDINAL'), ('1', 'CARDINAL'), ('\x7fReceiveReady', 'PERSON'), ('one', 'CARDINAL'), ('ReceiveReady', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('SCE', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('14', 'CARDINAL'), ('SceMiMessageOutPort', 'ORG'), ('Verilog', 'PRODUCT'), ('VHDL', 'PERSON'), ('14', 'CARDINAL'), ('SceMiMessageOutPort', 'ORG'), ('Macro', 'ORG'), ('4.1.3.1 Parameters and', 'ORG'), ('first', 'ORDINAL'), ('more than one', 'CARDINAL'), ('59', 'CARDINAL'), ('SceMiMessageOutPort', 'ORG'), ('ReceiveReady', 'NORP'), ('PortWidth', 'ORG'), ('1', 'CARDINAL'), ('PortPriority', 'ORG'), ('10', 'CARDINAL'), ('ReceiveReady', 'NORP'), ('VHDL Macro Wrapper', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('PortWidth', 'ORG'), ('PortPriority', 'ORG'), ('10', 'CARDINAL'), ('EmptyMacro', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('51', 'CARDINAL'), ('94TransmitReady', 'CARDINAL'), ('one', 'CARDINAL'), ('ReceiveReady  ', 'PERSON'), ('TransmitReady', 'PERSON'), ('first', 'ORDINAL'), ('ReceiveReady', 'ORG'), ('TransmitReady', 'PERSON'), ('one', 'CARDINAL'), ('SCE', 'ORG'), ('ReceiveReady', 'PERSON'), ('section 4.3.7.1', 'LAW'), ('77', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('DUT', 'ORG'), ('SceMiClockPort', 'ORG'), ('SceMiClockPort', 'ORG'), ('SceMiClockPort', 'ORG'), ('15', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('Verilog', 'PRODUCT'), ('VHDL', 'PERSON'), ('Formal Functional Specification\n52', 'ORG'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('15', 'CARDINAL'), ('SceMiClockPort Macro\nNote', 'ORG'), ('one', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('1/1', 'CARDINAL'), ('54', 'CARDINAL'), ('0', 'CARDINAL'), ('SCE', 'ORG'), ('1/1', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('1/1', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('1/1', 'CARDINAL'), ('4/1', 'CARDINAL'), ('4', 'CARDINAL'), ('1/1', 'CARDINAL'), ('only 1', 'CARDINAL'), ('4.1.4.1', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('more than one', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('ClockNum', 'ORG'), ('ClockNum', 'ORG'), ('SceMiClockPort', 'ORG'), ('ClockNum=1', 'GPE'), ('DutyHi=0', 'PRODUCT'), ('VHDL Macro Wrapper', 'ORG'), ('SceMiClockPort', 'ORG'), ('ClockNum', 'ORG'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('100', 'CARDINAL'), ('0', 'CARDINAL'), ('8', 'CARDINAL'), ('EmptyMacro', 'ORG'), ('SceMiClockPort', 'ORG'), ('Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('53', 'CARDINAL'), ('94RatioNumerator=1', 'CARDINAL'), ('1/1', 'CARDINAL'), ('5/2', 'CARDINAL'), ('5', 'CARDINAL'), ('1/1', 'CARDINAL'), ('only 2', 'CARDINAL'), ('1/1', 'CARDINAL'), ('DutyHi=0, DutyLo=100', 'ORG'), ('75', 'CARDINAL'), ('100', 'CARDINAL'), ('75%', 'PERCENT'), ('25%', 'PERCENT'), ('30%', 'PERCENT'), ('first', 'ORDINAL'), ('15', 'CARDINAL'), ('100', 'CARDINAL'), ('section 4.1.4.3', 'LAW'), ('54', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('DUT', 'ORG'), ('SCE', 'ORG'), ('DUT', 'ORG'), ('SCE', 'ORG'), ('4.1.4.2 Deriving', 'ORG'), ('Clock Ratios', 'PERSON'), ('\x7fmake', 'GPE'), ('100Mhz', 'CARDINAL'), ('25Mhz', 'CARDINAL'), ('10Mhz', 'CARDINAL'), ('7.5', 'CARDINAL'), ('Mhz', 'NORP'), ('32kHz', 'CARDINAL'), ('100000 / 100000', 'DATE'), ('100000 / 25000100000', 'DATE'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('100000', 'DATE'), ('SCE', 'ORG'), ('4.1.4.3', 'CARDINAL'), ('15', 'CARDINAL'), ('0', 'CARDINAL'), ('DutyHi=0, DutyLo=100', 'WORK_OF_ART'), ('100', 'CARDINAL'), ('0+100', 'CARDINAL'), ('30', 'CARDINAL'), ('30%', 'PERCENT'), ('DutyHi=3', 'NORP'), ('DutyLo=1', 'GPE'), ('75%/25%', 'PERCENT'), ('50%', 'PERCENT'), ('3', 'CARDINAL'), ('0', 'CARDINAL'), ('DutyLo=0', 'GPE'), ('SCE-MI', 'ORG'), ('55', 'CARDINAL'), ('944.1.4.4', 'CARDINAL'), ('Controlled Reset Semantics', 'WORK_OF_ART'), ('SceMiClockPort', 'ORG'), ('ResetCycles', 'ORG'), ('SceMiClockPort', 'ORG'), ('Creset', 'ORG'), ('2', 'CARDINAL'), ('\x7fFor multiple cclocks', 'ORG'), ('max', 'PERSON'), ('section 4.1.4.5', 'DATE'), ('55', 'CARDINAL'), ('Creset', 'ORG'), ('SceMiClockPort', 'ORG'), ('SceMiClockPort', 'ORG'), ('4.1.4.5', 'CARDINAL'), ('first', 'ORDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('16', 'CARDINAL'), ('cclock1', 'ORG'), ('cclock2', 'GPE'), ('0', 'CARDINAL'), ('cclock4', 'ORG'), ('cclock2', 'ORG'), ('50%', 'PERCENT'), ('2 uclocks', 'QUANTITY'), ('1/2', 'CARDINAL'), ('0', 'CARDINAL'), ('50%', 'PERCENT'), ('1/2', 'CARDINAL'), ('1', 'CARDINAL'), ('1.Formal', 'CARDINAL'), ('Functional Specification\n56', 'ORG'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('16', 'CARDINAL'), ('Multi-Clock Alignment\n4.1.5SceMiClockControl  Macro', 'ORG'), ('SceMiClockPort', 'ORG'), ('at least one', 'CARDINAL'), ('DUT', 'ORG'), ('SCE', 'ORG'), ('17', 'CARDINAL'), ('Verilog', 'PRODUCT'), ('VHDL', 'PERSON'), ('2/1', 'CARDINAL'), ('50/50', 'CARDINAL'), ('0', 'CARDINAL'), ('2/1', 'CARDINAL'), ('25/75', 'CARDINAL'), ('0', 'CARDINAL'), ('2/1', 'CARDINAL'), ('75/25', 'CARDINAL'), ('0', 'CARDINAL'), ('2/1', 'CARDINAL'), ('25/75', 'CARDINAL'), ('50', 'CARDINAL'), ('2/1', 'CARDINAL'), ('75/25', 'CARDINAL'), ('50Formal Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('57', 'CARDINAL'), ('94FIGURE 17', 'DATE'), ('SceMiClockPort', 'ORG'), ('at least one', 'CARDINAL'), ('4.1.5.1', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('ClockNum', 'ORG'), ('1', 'CARDINAL'), ('one', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('SceMiClockPort', 'ORG'), ('SceMiClockPort', 'ORG'), ('ClockNum', 'ORG'), ('SceMiClockPort', 'ORG'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('Ureset', 'ORG'), ('CclockEnabled', 'PERSON'), ('ClockNum', 'ORG'), ('1', 'CARDINAL'), ('Uclock, Ureset', 'ORG'), ('CclockEnabled', 'ORG'), ('VHDL Macro Wrapper', 'ORG'), ('ClockNum', 'ORG'), ('1', 'CARDINAL'), ('EmptyMacro', 'ORG'), ('Functional Specification', 'ORG'), ('94', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('55', 'CARDINAL'), ('first', 'ORDINAL'), ('SCE', 'ORG'), ('DUT', 'ORG'), ('DUT', 'ORG'), ('One', 'CARDINAL'), ('DUT', 'ORG'), ('one', 'CARDINAL'), ('one', 'CARDINAL'), ('one', 'CARDINAL'), ('5', 'CARDINAL'), ('17', 'CARDINAL'), ('DUT', 'ORG'), ('SCE', 'ORG'), ('CclockEnabled', 'PERSON'), ('4.1.4.3', 'CARDINAL'), ('54', 'CARDINAL'), ('CclockEnabled', 'ORG'), ('CclockEnabled', 'ORG'), ('Formal Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('59', 'CARDINAL'), ('94Note', 'CARDINAL'), ('4.1.4.3', 'CARDINAL'), ('54', 'CARDINAL'), ('0', 'CARDINAL'), ('4.2', 'CARDINAL'), ('8', 'CARDINAL'), ('14', 'CARDINAL'), ('SCE', 'ORG'), ('at least one', 'CARDINAL'), ('Transactor Name', 'PERSON'), ('SceMiMessageOutPort', 'ORG'), ('Port Name', 'GPE'), ('Verilog', 'PRODUCT'), ('Bridge.u1.tx1', 'PERSON'), ('Formal Functional Specification\n60', 'ORG'), ('94', 'CARDINAL'), ('Message Input', 'PERSON'), ('Port Width', 'GPE'), ('PortWidth', 'ORG'), ('1', 'CARDINAL'), ('Message Output Port Priority', 'ORG'), ('PortPrority', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('first', 'ORDINAL'), ('10', 'CARDINAL'), ('UNIX', 'ORG'), ('20', 'CARDINAL'), ('10', 'CARDINAL'), ('0', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('SceMiClockPort', 'ORG'), ('SceMiClockPort', 'ORG'), ('Ratio', 'PERSON'), ('RatioDenominator', 'ORG'), ('SceMiClockPort', 'ORG'), ('1/1', 'CARDINAL'), ('RatioDenominator', 'ORG'), ('4.1.4', 'CARDINAL'), ('51', 'CARDINAL'), ('Duty Cycle', 'PERSON'), ('SceMiClockPort', 'ORG'), ('Formal Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('61', 'CARDINAL'), ('1/1', 'CARDINAL'), ('4.1.4', 'CARDINAL'), ('51', 'CARDINAL'), ('Controlled Reset Cycles\n', 'WORK_OF_ART'), ('ClockPort', 'ORG'), ('SCE', 'ORG'), ('API', 'ORG'), ('4.3.4', 'CARDINAL'), ('70', 'CARDINAL'), ('4.3', 'CARDINAL'), ('Software', 'ORG'), ('first', 'ORDINAL'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('API', 'ORG'), ('62', 'CARDINAL'), ('94', 'CARDINAL'), ('C++', 'NORP'), ('SceMiclass', 'ORG'), ('4.3.1', 'CARDINAL'), ('Primitive Data Types', 'ORG'), ('API', 'ORG'), ('API', 'ORG'), ('4.3.2', 'CARDINAL'), ('Miscellaneous Interface', 'PERSON'), ('4.3.2.1', 'CARDINAL'), ('ec', 'ORG'), ('API', 'ORG'), ('SCE-MI', 'ORG'), ('SceMiErrorType', 'GPE'), ('SceMiOK', 'PERSON'), ('SceMiErrorType Type', 'ORG'), ('errorHandler', 'PERSON'), ('Formal Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('63', 'CARDINAL'), ('API', 'ORG'), ('NULL', 'ORG'), ('API', 'ORG'), ('API', 'ORG'), ('C++', 'NORP'), ('NULL', 'ORG'), ('second', 'ORDINAL'), ('API', 'ORG'), ('API', 'ORG'), ('SceMiErrorType', 'GPE'), ('only two', 'CARDINAL'), ('SceMiOK', 'PERSON'), ('API', 'ORG'), ('two', 'CARDINAL'), ('first', 'ORDINAL'), ('4.3.2.2', 'CARDINAL'), ('SceMiIC', 'PERSON'), ('Warning Handling', 'PERSON'), ('Info Handling', 'PERSON'), ('Formal Functional Specification\n64', 'ORG'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('info handling', 'PERSON'), ('SceMiInfoType', 'ORG'), ('SceMiIC', 'PERSON'), ('SceMiInfoType Type', 'ORG'), ('SceMiIC', 'PERSON'), ('info handler', 'PERSON'), ('API', 'ORG'), ('SceMiIC', 'PERSON'), ('SceMiIC', 'ORG'), ('API', 'ORG'), ('SceMiInfoType', 'ORG'), ('SceMiErrorHandler', 'ORG'), ('section 4.3.2.1', 'LAW'), ('62', 'CARDINAL'), ('SCE', 'ORG'), ('Formal Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('65', 'CARDINAL'), ('94\x7fAnything', 'CARDINAL'), ('API', 'ORG'), ('API', 'ORG'), ('SceMiMessageData', 'ORG'), ('API', 'ORG'), ('API', 'ORG'), ('4.3.3', 'CARDINAL'), ('SCE', 'ORG'), ('4.3.3.1', 'CARDINAL'), ('Version Discovery', 'PRODUCT'), ('SCE', 'ORG'), ('-1', 'ORG'), ('SCE', 'ORG'), ('4.3.3.2', 'CARDINAL'), ('ec', 'ORG'), ('SCE', 'ORG'), ('Formal Functional Specification', 'ORG'), ('66', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('70', 'CARDINAL'), ('4.3.3.3', 'CARDINAL'), ('ec', 'ORG'), ('SCE', 'ORG'), ('ec', 'ORG'), ('one', 'CARDINAL'), ('one', 'CARDINAL'), ('SceMiMessageInPortProxy', 'PERSON'), ('59', 'CARDINAL'), ('Formal Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('67', 'CARDINAL'), ('94Context', 'CARDINAL'), ('SceMiMessageInPortProxy', 'PERSON'), ('IsReady', 'PERSON'), ('IsReady', 'PERSON'), ('NULL', 'ORG'), ('SCE', 'ORG'), ('48', 'CARDINAL'), ('NULL', 'ORG'), ('4.3.3.5', 'CARDINAL'), ('SceMi::BindMessageOutPort', 'GPE'), ('ec', 'ORG'), ('one', 'CARDINAL'), ('one', 'CARDINAL'), ('59', 'CARDINAL'), ('SceMiMessageOutPortBinding', 'WORK_OF_ART'), ('SceMiMessageData', 'ORG'), ('Formal Functional Specification\n68', 'ORG'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('IsReady', 'PERSON'), ('77', 'CARDINAL'), ('NULL', 'ORG'), ('ec', 'ORG'), ('CPU', 'ORG'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('ServiceLoop', 'ORG'), ('ServiceLoop', 'ORG'), ('NULL', 'ORG'), ('0', 'CARDINAL'), ('at least one', 'CARDINAL'), ('ServiceLoop', 'ORG'), ('4.3.3.6.1Example', 'CARDINAL'), ('ServiceLoop', 'ORG'), ('ServiceLoop', 'ORG'), ('ServiceLoop', 'ORG'), ('Formal Functional Specification\nFunctional Requirements Specification', 'ORG'), ('SCE-MI', 'ORG'), ('69', 'CARDINAL'), ('ServiceLoop', 'ORG'), ('0', 'CARDINAL'), ('ServiceLoop', 'ORG'), ('ServiceLoop', 'ORG'), ('0', 'CARDINAL'), ('ServiceLoop', 'ORG'), ('1', 'CARDINAL'), ('ServiceLoop', 'ORG'), ('ServiceLoop', 'ORG'), ('ServiceLoop', 'ORG'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('first', 'ORDINAL'), ('4.3.3.6.3Example', 'CARDINAL'), ('ServiceLoop', 'ORG'), ('At Least 1 Message\nAlternatively', 'CARDINAL'), ('ServiceLoop', 'ORG'), ('at least 1', 'CARDINAL'), ('Formal Functional Specification', 'ORG'), ('70', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE-MI)To', 'ORG'), ('0', 'CARDINAL'), ('ServiceLoop', 'ORG'), ('0', 'CARDINAL'), ('g, &haveProcessedAtLeast1Message', 'ORG'), ('0', 'CARDINAL'), ('least//', 'ORG'), ('first', 'ORDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('ServiceLoop', 'ORG'), ('4.3.4', 'CARDINAL'), ('API', 'ORG'), ('59', 'CARDINAL'), ('4.3.3.2', 'CARDINAL'), ('65', 'CARDINAL'), ('4.3.4.1', 'CARDINAL'), ('SCE-API', 'ORG'), ('zero', 'CARDINAL'), ('API', 'ORG'), ('SCE', 'ORG'), ('Formal Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('71', 'CARDINAL'), ('94So', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('width', 'GPE'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('section 4.2.1', 'LAW'), ('59', 'CARDINAL'), ('integer', 'PERSON'), ('4.3.4.2 Parameter Set Semantics', 'ORG'), ('TransactorName String Name', 'PERSON'), ('PortName String Name', 'PERSON'), ('PortWidth', 'ORG'), ('Integer Width', 'PERSON'), ('TransactorName String Name', 'PERSON'), ('PortName String Name', 'PERSON'), ('PortWidth', 'ORG'), ('Integer Width', 'PERSON'), ('PortPriority Integer Priority', 'ORG'), ('Integer Numerator', 'PERSON'), ('Integer Denominator', 'PERSON'), ('Integer High', 'PERSON'), ('Integer Low', 'PERSON'), ('Integer Phase', 'PERSON'), ('ClockBinding TransactorName String Name', 'ORG'), ('Formal Functional Specification\n72', 'ORG'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('ClockBinding', 'ORG'), ('TransactorName', 'ORG'), ('ClockBinding', 'ORG'), ('Clock', 'ORG'), ('HDL', 'ORG'), ('4.3.4.3', 'CARDINAL'), ('ec', 'ORG'), ('4.3.4.4', 'CARDINAL'), ('Formal Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('73', 'CARDINAL'), ('944.3.4.5  Accessors', 'CARDINAL'), ('ec', 'ORG'), ('ec', 'ORG'), ('ec', 'ORG'), ('two', 'CARDINAL'), ('ec', 'ORG'), ('ec', 'ORG'), ('two', 'CARDINAL'), ('section 4.3.4.1', 'DATE'), ('70', 'CARDINAL'), ('Formal Functional Specification\n74', 'ORG'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('Two', 'CARDINAL'), ('one', 'CARDINAL'), ('SceMiMessageData', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('72', 'CARDINAL'), ('4.3.5.1', 'CARDINAL'), ('SceMiMessageInPortProxy &messageInPortProxy', 'ORG'), ('ec', 'ORG'), ('4.3.5.2', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('33,32', 'CARDINAL'), ('71', 'CARDINAL'), ('0', 'CARDINAL'), ('1', 'CARDINAL'), ('Formal Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('75', 'CARDINAL'), ('944.3.5.3', 'CARDINAL'), ('ec', 'ORG'), ('ec', 'ORG'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('1', 'CARDINAL'), ('ec', 'ORG'), ('LSB’s', 'ORG'), ('ec', 'ORG'), ('WidthInWords', 'ORG'), ('ec', 'ORG'), ('ec', 'ORG'), ('LSB', 'ORG'), ('SCE', 'ORG'), ('1/1', 'CARDINAL'), ('64', 'CARDINAL'), ('Formal Functional Specification', 'ORG'), ('76', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('SceMiMessageInPortProxy', 'PERSON'), ('SceMiMessageInPortProxy', 'PERSON'), ('SceMiMessageData &data', 'ORG'), ('ec', 'ORG'), ('4.1.2', 'CARDINAL'), ('47', 'CARDINAL'), ('4.3.6.2', 'CARDINAL'), ('ec', 'ORG'), ('4.3.3.4', 'CARDINAL'), ('66', 'CARDINAL'), ('4.3.6.3', 'CARDINAL'), ('SceMiMessageInPortProxy::PortWidth', 'PERSON'), ('PortWidth', 'ORG'), ('Formal Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('77', 'CARDINAL'), ('944.3.6.4', 'CARDINAL'), ('4.3.7', 'CARDINAL'), ('first', 'ORDINAL'), ('4.3.3.5', 'CARDINAL'), ('67', 'CARDINAL'), ('SceMiMessageData', 'ORG'), ('SceMiMessageData', 'ORG'), ('4.2.1.1', 'DATE'), ('61', 'CARDINAL'), ('SystemC', 'CARDINAL'), ('Notice', 'ORG'), ('first', 'ORDINAL'), ('4.3.2.1', 'CARDINAL'), ('62', 'CARDINAL'), ('SCE', 'ORG'), ('ec', 'ORG'), ('4.3.3.5', 'CARDINAL'), ('67', 'CARDINAL'), ('Formal Functional Specification', 'ORG'), ('78', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE-MI)4.3.7.3 Accessors', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('PortWidth', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('4.3.7.4', 'CARDINAL'), ('4.4', 'CARDINAL'), ('Software', 'ORG'), ('SCI-MI', 'ORG'), ('ANSI', 'ORG'), ('C++', 'CARDINAL'), ('API', 'ORG'), ('section 4.3', 'LAW'), ('61', 'CARDINAL'), ('the C API', 'PERSON'), ('the C++ API', 'FAC'), ('section 4.3', 'LAW'), ('61.Formal', 'CARDINAL'), ('Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('79', 'CARDINAL'), ('944.4.1', 'CARDINAL'), ('ServiceLoopHandler', 'PERSON'), ('SceMiOK', 'PERSON'), ('SceMiErrorType', 'GPE'), ('ec', 'ORG'), ('SceMiInfoType', 'ORG'), ('SceMiInfoType', 'ORG'), ('SceMiIC', 'ORG'), ('SceMiIC', 'PERSON'), ('SceMiMessageData', 'ORG'), ('C++ API', 'TIME'), ('ec', 'ORG'), ('80', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('4.4.2.1', 'CARDINAL'), ('errorHandler', 'PERSON'), ('4.4.2.2', 'CARDINAL'), ('Warning Handling', 'PERSON'), ('Info Handling', 'PERSON'), ('4.4.3', 'CARDINAL'), ('Version Discovery', 'PRODUCT'), ('4.4.3.2', 'CARDINAL'), ('SceMiInit', 'ORG'), ('ec', 'ORG'), ('4.4.3.3', 'CARDINAL'), ('ec', 'ORG'), ('4.4.3.4', 'CARDINAL'), ('ec', 'ORG'), ('4.4.3.5', 'CARDINAL'), ('ec', 'ORG'), ('SCE-MI', 'ORG'), ('81', 'CARDINAL'), ('ec', 'ORG'), ('4.4.4', 'CARDINAL'), ('4.4.4.1', 'CARDINAL'), ('ec', 'ORG'), ('Formal Functional Specification\n82', 'ORG'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('4.4.4.3', 'CARDINAL'), ('ec', 'ORG'), ('ec', 'ORG'), ('ec', 'ORG'), ('ec', 'ORG'), ('ec', 'ORG'), ('4.4.5', 'CARDINAL'), ('SceMiMessageData - Message Data Object\n', 'ORG'), ('4.4.5.1', 'CARDINAL'), ('ec', 'ORG'), ('Formal Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('83', 'CARDINAL'), ('944.4.5.2 Destructor', 'ORG'), ('4.4.5.3', 'CARDINAL'), ('ec', 'ORG'), ('ec', 'ORG'), ('ec', 'ORG'), ('ec', 'ORG'), ('ec', 'ORG'), ('ec', 'ORG'), ('Formal Functional Specification', 'ORG'), ('84', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('4.4.6.1', 'CARDINAL'), ('ec', 'ORG'), ('4.4.6.2', 'CARDINAL'), ('ec', 'ORG'), ('4.4.6.3', 'CARDINAL'), ('4.4.7', 'CARDINAL'), ('4.4.7.1 Replacing Port Binding', 'WORK_OF_ART'), ('ec', 'ORG'), ('4.4.7.2', 'CARDINAL'), ('SceMiMessageOutPortProxyTransactorName', 'ORG'), ('Formal Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('85', 'CARDINAL'), ('BCA', 'ORG'), ('DUT', 'ORG'), ('2', 'CARDINAL'), ('9', 'CARDINAL'), ('BCA', 'ORG'), ('3', 'CARDINAL'), ('11', 'CARDINAL'), ('CoWare', 'PRODUCT'), ('SystemC', 'CARDINAL'), ('Ikos', 'PERSON'), ('DUT', 'ORG'), ('SceMiClockPort', 'ORG'), ('Verilog', 'PRODUCT'), ('Bridge.v', 'ORG'), ('Co-Emulation', 'ORG'), ('RTL', 'ORG'), ('86', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE-MI)section', 'ORG'), ('1.4', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('6', 'CARDINAL'), ('DUT', 'ORG'), ('DUT', 'ORG'), ('DUT', 'ORG'), ('Controlled Time\nTime', 'ORG'), ('Co-Simulation\nExecution', 'ORG'), ('CoWare’s', 'PERSON'), ('section 1.4', 'LAW'), ('3', 'CARDINAL'), ('HDL', 'ORG'), ('API', 'ORG'), ('SCE', 'ORG'), ('RTCSCE-MIgate', 'ORG'), ('UTC', 'ORG'), ('RTC', 'ORG'), ('Functional Specification\nFunctional Requirements Specification: Standard Co-Emulation Modeling Interface', 'ORG'), ('SCE-MI', 'ORG'), ('87', 'CARDINAL'), ('94Cycle Stamping\n', 'WORK_OF_ART'), ('0', 'CARDINAL'), ('See 4.1.4.1', 'ORG'), ('52', 'CARDINAL'), ('0', 'CARDINAL'), ('See 4.1.4.1', 'ORG'), ('52', 'CARDINAL'), ('DUT Proxy', 'PERSON'), ('DUT', 'ORG'), ('DUT', 'ORG'), ('3', 'CARDINAL'), ('11', 'CARDINAL'), ('DUT', 'ORG'), ('Hardware Model\nModel', 'PERSON'), ('CPU', 'ORG'), ('SCE-MIHardware', 'ORG'), ('CPU IP', 'ORG'), ('94', 'CARDINAL'), ('DUT', 'ORG'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('SceMiClockPort', 'ORG'), ('two', 'CARDINAL'), ('DUT', 'ORG'), ('Verilog', 'PRODUCT'), ('SCE', 'ORG'), ('Software Model\nModel', 'PERSON'), ('SCE-MI', 'ORG'), ('89', 'CARDINAL'), ('C++', 'PERSON'), ('ISS', 'ORG'), ('CoWare', 'ORG'), ('SystemC', 'CARDINAL'), ('HDL', 'ORG'), ('SCE', 'ORG'), ('DUT', 'ORG'), ('DUT', 'ORG'), ('Clock', 'ORG'), ('SCE', 'ORG'), ('Uncontrolled Reset\n', 'PERSON'), ('SCE', 'ORG'), ('SCE', 'ORG'), ('Uncontrolled Time\nTime', 'ORG'), ('Formal Functional Specification\n90', 'ORG'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('18', 'CARDINAL'), ('ClockPort', 'ORG'), ('cclock4_1', 'LOC'), ('SceMiClockPort', 'ORG'), ('ClockNum=1', 'GPE'), ('1/1', 'CARDINAL'), ('#128', 'MONEY'), ('64', 'MONEY'), ('MessageOut', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('UclockUreset', 'ORG'), ('UclockUreset', 'ORG'), ('UclockUreset', 'ORG'), ('DutInData', 'ORG'), ('DutInCtrl DutInCtrl', 'PERSON'), ('DutInData', 'ORG'), ('DutInData', 'ORG'), ('DutInCtrl DutInCtrl', 'PERSON'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('SceMiClockPort\nCclockCreset#(3', 'ORG'), ('4', 'DATE'), ('1', 'DATE'), ('75', 'DATE'), ('25', 'DATE'), ('30', 'DATE'), ('8)', 'CARDINAL'), ('SCE-MI', 'ORG'), ('91', 'CARDINAL'), ('0', 'CARDINAL'), ('8', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('first', 'ORDINAL'), ('three', 'CARDINAL'), ('2/1', 'CARDINAL'), ('50%', 'PERCENT'), ('0', 'CARDINAL'), ('8', 'CARDINAL'), ('cclock4_1', 'ORG'), ('SceMiClockPort', 'ORG'), ('ClockNum=3', 'PRODUCT'), ('4/1', 'CARDINAL'), ('75%', 'PERCENT'), ('30%', 'PERCENT'), ('8', 'CARDINAL'), ('TxTransactor', 'PRODUCT'), ('Bridge.u1', 'PERSON'), ('ClockNum=1', 'CARDINAL'), ('TxTransactor', 'PRODUCT'), ('64', 'CARDINAL'), ('RxTransactor', 'PRODUCT'), ('cclock4_1', 'PERSON'), ('RxTransactor', 'ORG'), ('128.Formal', 'CARDINAL'), ('94', 'CARDINAL'), ('VHDL', 'PERSON'), ('Bridge', 'PERSON'), ('Structural of Bridge', 'ORG'), ('TxTransactor', 'FAC'), ('DutInCtrl', 'PERSON'), ('DutInData', 'ORG'), ('std_logic_vector(31', 'ORG'), ('std_logic_vector(31', 'ORG'), ('0', 'CARDINAL'), ('TxTransactor', 'FAC'), ('TxDUT', 'ORG'), ('DutInCtrl', 'PERSON'), ('DutInData', 'ORG'), ('std_logic_vector(31', 'ORG'), ('std_logic_vector(31', 'ORG'), ('Rst', 'PERSON'), ('TxDUT', 'ORG'), ('RxTransactor', 'PERSON'), ('DutInCtrl', 'PERSON'), ('DutInData', 'ORG'), ('std_logic_vector(31', 'ORG'), ('std_logic_vector(31', 'ORG'), ('0', 'CARDINAL'), ('RxTransactor', 'PERSON'), ('RxDUT', 'PERSON'), ('DutInCtrl', 'PERSON'), ('DutInData', 'ORG'), ('std_logic_vector(31', 'ORG'), ('std_logic_vector(31', 'ORG'), ('Clk', 'PERSON'), ('RxDUT', 'PRODUCT'), ('std_logic_vector(31', 'ORG'), ('rxDutInCtrl', 'GPE'), ('rxDutOutCtrl', 'GPE'), ('std_logic_vector(31', 'ORG'), ('TxTransactor', 'FAC'), ('SceMiClockPort', 'ORG'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'DATE'), ('50', 'DATE'), ('50', 'DATE'), ('0', 'DATE'), ('8', 'CARDINAL'), ('cresetDivideBy4', 'GPE'), ('SceMiClockPort', 'ORG'), ('3', 'CARDINAL'), ('4', 'DATE'), ('1', 'DATE'), ('75', 'DATE'), ('25', 'DATE'), ('30', 'DATE'), ('8', 'CARDINAL'), ('SCE-MI', 'ORG'), ('93', 'CARDINAL'), ('94library', 'CARDINAL'), ('TxTransactor', 'FAC'), ('DutInCtrl', 'PERSON'), ('std_logic_vector(31', 'ORG'), ('std_logic_vector(31', 'ORG'), ('0', 'CARDINAL'), ('TxTransactor', 'FAC'), ('std_logic(63', 'GPE'), ('0', 'CARDINAL'), ('DutInCtrl', 'PERSON'), ('DutInData', 'ORG'), ('std_logic_vector(31', 'ORG'), ('std_logic_vector(31', 'ORG'), ('Uclk', 'PERSON'), ('TxTransactor', 'FAC'), ('DutInCtrl', 'PERSON'), ('DutInData', 'ORG'), ('DutOutCtrl', 'PERSON'), ('64', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('Functional Specification', 'ORG'), ('94', 'CARDINAL'), ('94', 'CARDINAL'), ('SCE', 'ORG'), ('VHDL SceMiMacros', 'ORG'), ('SCE-MI', 'ORG'), ('PortWidth', 'ORG'), ('SceMiMessageOutPort', 'ORG'), ('PortWidth', 'ORG'), ('PortPriority', 'ORG'), ('10', 'CARDINAL'), ('SceMiClockPort', 'ORG'), ('ClockNum', 'ORG'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('100', 'CARDINAL'), ('0', 'CARDINAL'), ('ResetCycles      ', 'LAW'), ('8', 'CARDINAL'), ('ClockNum', 'ORG'), ('1', 'CARDINAL'), ('Ureset', 'ORG')], 'noun_phrases': ['94Functional Requirements Specification', '(SCE-MI', 'feedback contributions', 'the SCE-API Technical Group', 'Copyright', 'c', 'all rights', 'No part', 'this publication', 'a retrieval system', 'any form', 'any means', 'electronic, mechanical, photocopy', 'recording', 'the prior written permission', 'the \ncopyright holder', 'This document', 'NDA', 'the SCE-API consortium', 'Abstract', 'This document', 'a proposal', 'a standard C/C++ modeling interface', 'emulators', 'other verification platforms', 'The interface', 'multiple communication channels', 'software models', 'a host workstation', 'a \ndevice', 'test', 'DUT', 'a structural hardware netlist', 'a \nverification platform', 'an emulator', 'The channel end points', 'message ports', 'the DUT model', 'message port proxies', 'the software models', 'Inc.', 'San Jose', 'CA 95119SCE-API\nStandard Co-Emulation API \nConsortium\nRevision 1.9SCE-API Version 1.0Introduction', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)1.0 Introduction', '1.1 Purpose', 'an urgent need', 'the EDA industry', 'the exploding verification requirements', 'SoC \ndesign teams', 'the industry', 'verification performance', 'the form', 'a variety', 'emulation', 'rapid prototyping platforms', 'the problem', 'them', 'SoC modeling environments', 'their full performance potential', 'Existing standard verification interfaces', 'the needs', 'design teams', 'A new type', 'interface', 'the verification challenges', 'the next 10 years', 'This document', 'a proposal', 'a multichannel communication interface', 'that', 'these challenges', 'This new interface', 'the needs', 'both emulation', 'users', 'emulation suppliers', '1.1.1 Emulation Customer Problems', 'SCE-API\n•All emulators', 'the market', 'proprietary APIs', 'The proliferation', 'APIs', 'it', 'software-based verification products', 'the different emulators', 'the solutions', 'customers', 'This', 'low productivity', 'low return', 'investment', 'ROI', 'emulator customers', 'who', 'their own solutions', '\x7fThe emulation “APIs', 'which', 'gate-level and not system-level verification', '\x7fThe industry', 'an API', 'which', 'full advantage', 'emulation performance', '1.1.2 Emulation Suppliers Problems', 'Solved\n\x7fCustomers', 'building applications', 'proprietary APIs', '\x7fTraditional simulator APIs', 'programmable language interface', 'PLI', 'VHDL PLI', 'emulators', '\x7fThird parties', 'building applications', 'proprietary APIs', '1.2 Scope\nThis document', 'members', 'the Standard Co-Emulation API', '(SCE-API) technical \ncommittee', 'The committee members', 'a consortium', 'EDA customers', 'EDA tool suppliers', 'the creation', 'a breakthrough high-performance common emulation API', 'The founding participants', 'the consortium', 'Aptix', 'CoWare', 'Ikos Systems', 'Mentor Graphics', 'ST Microelectronics', 'Synopsys', 'TransEDA', 'The scope', 'this document', 'what', 'the Standard \nCo-Emulation API', 'Modeling Interface', '(SCE-MI', 'This modeling interface', 'several parts', 'the whole SCE-API standard', 'the future', 'SCE-API', 'additional parts', 'such features', 'debug', 'control', 'code coverage', 'This document', 'an overall use model', 'the SCE-MI', 'a tutorial', 'this \nuse model', 'a formal functional specification', 'the SCE-MI API', 'itself', 'Future revisions', 'the document', 'the feedback', 'members', 'the SCE-API technical committee', 'It', 'the document', 'a relatively quick evolution phase', 'which', 'a common industry standard', 'that', 'simulation and emulation tool vendors', 'plug-and-play high speed verification solutions', 'users', 'SoC design teams', 'Introduction\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '941.3 Revision History', '1.4 Definitions', 'Acronyms', 'Abbreviations\nA formal glossary', 'terms', 'this document', 'the appendices', 'Some', 'the acronyms', 'the document', 'BCA  - Bus Cycle Accurate model', 'RTL model\nBCASH  - CoWare style Bus Cycle Accurate SHell modelRevision # Date', 'Summary', 'revision', '1.0 12-11-00 Duaine Pryor Initial draft', 'discussions', 'SCE-API kickoff \nmeeting', 'that', 'Oct.', 'Paris', 'France', '1.2 1-15-01 John Stickley Revised document', 'feedback', 'action \nitems', 'second SCE-API meeting', 'Dec', 'Cupertino', 'CA', '1.3 2-2-01 John Stickley Revised document', 'feedback', 'e-\nmail review', 'SCE-API committee', 'the revi-\nsion 1.2 release', 'Routed tutorial sec-\ntion', '1.4 2-16-01 John Stickley', 'Susan RossIncorporated comments', 'committee', 'dur-\ning SCE-API phase 1 ratification process', 'Added \nminor corrections', 'converted hand drawn figures', 'electronic drawings', '1.5 5-6-01 John Stickley Corrections', 'SceMiParameters accessors', 'tion', 'controlled reset semantics', 'clarification', 'controlled clock semantics', 'call-\nback function pointer types', 'port proxies', 'VHDL macro data types', 'feedback', '1.5 changes', 'added bit \naccessors', 'data object', 'version', 'mat', 'major.minor.minor', 'major.major.minor', '1.7 10-19-01 John Stickley Added clarification', 'the \ng() function', 'ServiceLoop', 'added note', 'memory \nallocation', 'deletion', 'ReplaceBind-', 'ing', 'SceMiMessagePort[In/\nOut]Proxy classes', 'added info message callback \nhandler support', 'added clarification', 'parameters database structure', 'clarification', 'input \nready semantics', '1.8 11-14-01 John Stickley Incorporated feedback', 'corrections', 'above.1.9 2-26-02 John Stickley Added support', 'don’t care duty cycle', 'clarifica-\ntions', 'duty cycles', 'clock ratios', 'Changed default duty cycles', 'Added explanation', 'clock ratios', 'clock frequencies', 'Added section', 'multi-clock alignment', 'Minor modifications', 'the SceMiIC info message handler \nstructure', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)BFM  - Bus Functional Model\nDUT  - Device', 'Design', 'Test\nHDL  - Hardware Description Language', 'Verilog', 'VHDL', 'ISS - Instruction Set Simulator\nRTC  - Register Transfer Level C model\nSCE-API  - Standard Co-Emulation API\nSCE-MI  - Standard Co-Emulation API - Modeling Interface\nUT', 'untimed C model\n1.5 References\n1.Functional Specification', 'SystemC', '2.0 - Synopsys', 'Inc.', 'CoWare, Inc.', 'Frontier Design, Inc.', 'CoWare N2C User Manual  - CoWare, Inc.', 'IEEE Standard Hardware Description Language', 'the Verilog Hardware Description \nLanguage', 'IEEE', 'Std', 'IEEE Computer Society', 'IEEE Standard VHDL Language Reference Manual', 'IEEE', 'IEEE Computer \nSociety', '1.6 Overview', 'a modeling interface', 'that', 'multiple channels', 'communication', 'that', 'software models', 'system behavior', 'structural models', 'implementation', 'a device', 'test', 'DUT', 'Each communication channel', 'untimed messages', 'arbitrary abstraction', 'its two end points', '“ports', 'a channel', 'These message channels', 'software models', 'software proxy models', 'port interfaces', 'the hardware side', 'the design', 'The means', 'software models', 'a software modeling and simulation environment', 'SystemC', 'which', 'the scope', 'this document', 'the software side', 'a system', 'several different levels', 'abstraction', 'untimed, cycle accurate, and even gate level', 'the focus', 'the SCE-MI', 'purely untimed software models', 'an RTL or gate level DUT', 'This', 'the following recommendations', 'the API', '\x7fDo', 'it', 'event', 'sub-cycle accurate simulation environments', '\x7fIt', 'to bridge cycle accurate simulation environments', '\x7fIt', 'an untimed simulation environment', 'a cycle accurate simulation environment', 'many references', 'the document', 'SystemC', 'the modeling environment', 'untimed \nsoftware models', 'This', 'SystemC', 'modeling', 'the cycle accurate RTL abstraction level', 'it', 'untimed modeling', 'it', 'use', 'the examples', 'this document', 'Introduction\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '941.6.1 Performance Goals', 'the software  side', 'the described interface', 'its ability', 'any C/C++ \nmodeling environment', 'it', 'SystemC', 'reference', 'its hardware  side', 'undue throttling', 'an emulator', 'a co-modeling session run', 'this document', 'the term emulation', 'emulator', 'a structural or RTL model', 'a DUT', 'an emulator', 'rapid prototype', 'other simulation environment', 'software HDL simulators', 'That', 'the focus', 'the design', 'this interface', 'communication bottlenecks', 'that', 'software models', 'an emulator', 'them', 'a slower software HDL simulator', 'even an HDL accelerator', 'Such bottlenecks', 'the performance', 'an emulator', 'which', 'some implementations', 'the interface', 'others', 'nothing', 'the specification', 'the interface', 'itself', 'that', 'it', 'such bottlenecks', 'this reason', 'the communication channels', 'herein', 'the idea', 'a single message', 'a channel', 'a software \nmodel', 'dozens', 'hundreds', 'clocked events', 'the hardware side', 'the channel', 'it', 'thousands', 'clocked events', 'the hardware side', 'the content', 'a message', 'the hardware', 'that', 'an untimed software model', '1.6.2 Document Layout', 'The document', 'the following three major chapters', '\x7fChapter', 'An overall description', 'model', 'the SCE Modeling Interface', 'SCE-MI', '\x7fChapter', 'A tutorial', 'that', 'the use model', 'a simple application', '\x7fChapter', 'A formal functional specification', 'the API', 'itself', '1.6.3 Document Conventions', 'references', 'actual literal names', 'that', 'source code', 'identifiers', 'that', 'part', 'the API', 'file names', 'other literal names', 'courier  font', '\x7fKey concepts words', 'phrases', 'a good chance', 'any italicized  \ntext', 'a definition', 'the glossary', 'the reader', 'a more detailed meaning', 'a term', 'Overall Description', 'Use Model', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)2.0 Overall Description', '2.1 High Level Description', 'Figure', 'a high level view', 'SCE-MI', 'untimed software \nmodels', 'structural hardware transactor', 'DUT models', 'FIGURE', 'High Level View', 'Run Time Components', 'The SCE-MI', 'a transport infrastructure', 'the emulator and host workstation sides', 'each channel', 'that', 'transactor  models', 'the emulator', 'C (untimed or RTL) models', 'the \nworkstation', 'it', 'purposes', 'this document', 'the term emulator', 'any simulator', 'RTL or gate-level models', 'software HDL simulators', 'These interconnects', 'the form', 'message channels', 'that', 'the software side', 'the hardware side', 'the SCE-MI infrastructure', 'Each message channel', 'two ends', 'The end', 'the software side', 'a message port proxy', 'which', 'a C++ object', 'that', 'API access', 'the channel', 'The end', 'the hardware side', 'a  message port macro', 'that', 'a transactor', 'other components', 'the transactor', 'Each message channel', 'either an input', 'an output channel', 'respect', 'the hardware side', 'It', 'message channels', 'unidirectional or bidirectional busses', 'the sense', 'hardware signals', 'network sockets', 'that', 'message passing protocols', 'It', 'the job', 'the transactors', 'abstraction gaskets', 'that', 'messages', 'input \nchannels', 'the software side', 'sequences', 'cycle accurate events', 'that', 'the DUT', 'the other direction', 'flow', 'recompose sequences', 'events', 'the DUT', 'messages', 'output channels', 'the software side', 'DUT\n C/C++', 'Model\nUTC Model\nRTC Model\nUTC Model\nSoftware Side', 'host workstation', 'Hardware Side', 'emulator)SCE-MI InfrastructureMessage Port \nProxy 1\nMessage Port \nProxy 2\nMessage Port \nProxy 3Transactor 2Transactor 1 Message \nPort 1\nMessage \nPort 2\nMessage \nPort 3\nClock/Reset\nGeneration', 'Control', 'SystemCOverall', 'Description', 'Use Model\nFunctional Requirements Specification', 'SCE-MI', '94In addition', 'the SCE-MI infrastructure', 'clock (and reset) generation', 'clock control', 'handshake signals', 'the transactor', 'This', 'the transactor', 'controlled time', 'message composition and decomposition operations', '2.1.1 Support', 'Multi-Threaded Environments', 'The SCE-MI', 'multi-threaded environments', 'SystemC', 'it', 'single-threaded environments', 'simple C programs', 'A special service \nloop function', 'section 4.3.3.6', 'page', 'the SCE-MI', 'that', 'an \napplication', 'the SCE-MI infrastructure', 'an opportunity', 'its communication channels', 'It', 'this function', 'that', 'input messages', 'the hardware side', 'output messages', 'the appropriate software models', 'no thread specific code', 'the service loop function', 'the SCE-MI', 'a \nmulti-threaded environment', 'this function', 'a dedicated thread', 'the interface', 'other threads', 'a single-threaded environment', 'the service loop function', 'the \napplication code', 'strategically placed points', 'it', 'CPU cycles', 'the SCE-MI infrastructure', 'it', 'its messages channels', '2.2 Users', 'the Interface\nA major goal', 'this specification', 'the needs', 'three target audiences', 'each', 'a distinct interest', 'their use', 'the interface', 'The target audiences', '\x7fEnd user\n\x7fTransactor implementor\n\x7fSCE-MI infrastructure implementor\n2.2.1 End User', 'The end user', 'a bridge', 'a software testbench', 'that', 'high level', 'untimed , algorithmic software models', 'a hardware DU', 'that', 'the RTL, cycle accurate level', 'abstraction', 'end users', 'the need', 'a “gasket', 'that', 'these two levels', 'abstraction', 'they', 'the creation', 'these abstraction bridges', 'the end users', 'the details', 'SCE-MI API', 'the hardware side', 'they', 'the  transactor implementor', 'next section', 'predefined transactor  models', 'that', 'their DUT', 'This', 'any requirement', 'them', 'any', 'the SCE-MI hardware-side interface macros', 'section', 'page', 'possibly the \nSceMiClockPort  macro', 'whose interface', 'all', 'it', 'a clock', 'a reset', 'the software side', 'the end users', 'the transactor implementors', 'them', 'plug-and-play  software models', 'custom', 'a software modeling environment', 'Such models', 'the details', 'the SCE-MI software side', 'interface', 'the rest', 'the software testbench', 'Overall Description', 'Use Model', '94 Functional Requirements Specification', '(SCE-MI)2.2.2 Transactor Implementor', 'the interface', 'the SCE-MI', 'its implementation', 'The job', 'the transactor implementor', 'plug-and-play transactor models', 'the hardware \nside', 'proxy models', 'the software side', 'that', 'end users', 'their \nuntimed software models', 'their RTL-represented DUT', 'the transactor implementor', 'proxy models', 'the software side', 'that', 'untimed “sockets', 'the transactors', 'the models', 'any other vendor', 'supplied, stand-alone IP models', 'the details', 'not only two different abstraction levels', 'possibly two different verification platforms', 'SystemC', 'an emulator', 'the implementations', 'the models', 'They', 'appropriate object code', 'netlists', 'RTL code', 'configuration files', 'all necessary documentation', '2.2.3 SCE-MI Infrastructure Implementor', 'The SCE-MI infrastructure implementor', 'a working implementation', 'an \nSCE-MI', 'that', 'some vendor supplied verification platform', 'Any distributed product release', 'the infrastructure implementor', 'both the software side', 'the hardware side components', 'the SCE-MI', 'such a release', 'complaint', 'it', 'all \nthe requirements', 'this specification', '2.3 Bridging Levels', 'Modeling Abstraction', 'The central goal', 'this specification', 'an interface', 'two modeling environments', 'each', 'which', 'a different level', 'modeling abstraction', 'we', 'a testbench', 'several, possibly independent models', 'that', 'a DUT', 'different interface points', 'Figure', 'such a system', 'Such a configuration', 'a processor DUT', 'that', 'some communications interfaces', 'that', 'an ethernet adapter', 'PCI interface', 'a USB interface', 'The testbench', 'several models', 'that', 'these interfaces', 'their protocols', 'packets', 'them', 'These packets', 'messages', 'the intent', 'the processor DUT’s ability', 'them', 'The system', 'Figure', 'the untimed  level', 'abstraction', 'the SystemC software modeling environment', 'Overall Description', 'Use Model\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94FIGURE', 'Untimed Software Testbench', 'DUT Models', 'we', 'cycle accurate RTL models', 'the DUT model', 'it', 'gates', 'that', 'a high speed emulation platform', 'we', 'this', 'we', 'them', 'the unaltered, untimed testbench models', 'a way', 'the untimed level', 'abstraction', 'the bus cycle', 'accurate  (BCA)  level', 'we', 'the purely untimed system', 'Figure', 'the direct coupling', 'the testbench models', 'the untimed DUT model', 'an abstraction bridge', 'order', 'the still untimed system testbench model', 'what', 'a emulator resident', ', RTL-represented DUT', 'Figure', 'this new configuration', 'This bridge', 'a set', 'DUT proxy  models', 'a set', 'message channels', 'which', 'transaction conduits', 'the software simulator', 'the emulator', 'message \ninput', 'output', 'ports', 'a set', 'user', 'transactors', 'The SCE-MI infrastructure', 'the task', 'a transport layer', 'that', 'delivery', 'messages', 'the message port proxy  and message port  ends', 'each channel', 'Messages', 'input channels', 'the transactors', 'message input ports', 'TB Model', 'Untimed\nTestbench', 'Model 1 TB Model N-1DUT ModelOverall Description', 'Use Model', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'output channels', 'the DUT proxy software models', 'message output port \nproxies', 'that', 'them', 'the rest', 'the testbench', 'they', 'original untimed \nDUT model', 'Figure', 'fact', 'the testbench models', 'the messages', 'a totally different abstraction level', 'The DUT input proxies', 'the job', 'untimed messages', 'various C models', 'them', 'the message input port proxies', 'transport', 'the hardware side', 'The DUT output proxies', 'callbacks', 'that', 'the message output port proxies', 'arrival', 'messages', 'the hardware side', 'other words', 'the SCE-MI infrastructure', 'these messages', 'the specific \nDUT proxy models', 'which', 'they', 'this discussion', 'the context', 'users', 'the interface', 'section', 'page', 'the end user', 'the DUT proxy models', 'the software side', 'Figure', 'the transactor models', 'the hardware side', 'the transactor implementor  authors', 'the proxy and transactor models', 'the SCE-MI message port', 'control components', 'them', 'those models', 'the end user', 'Overall Description', 'Use Model\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94FIGURE', 'Multichannel Abstraction Bridge Architecture\n2.3.3 Messages', 'Transactions', 'this point', 'it', 'sense', 'more detail', 'what', 'a message', 'it', 'an \nuntimed software modeling environment', 'the discussion', 'the implied meaning', 'a message', 'it', 'a unit', 'data', 'arbitrary size', 'abstraction', 'a channel', 'User Defined DUT \nProxy\nAbstraction BridgeUntimed\nTestbench ModelsSCE-MI Infrastructure User', 'Model', '(RTL', 'Port Proxy', 'TB Model', 'TB Model 1 TB Model N-1Message Output\nPort Proxy 0\nMessage Input\nPort Proxy 1\nMessage Output\nPort Proxy N-1', 'Xactor', 'Message Input', 'DUT', 'Use Model', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)In', 'a purely untimed modeling environment', 'messages', 'specific clocks', 'events', 'they', 'arbitrary data types', 'abstraction', 'a simple bit', 'something', 'a C++ class', 'even some aggregate', 'objects', 'It', 'this form', 'messages', 'value', 'reference', 'abstract ports', 'fully untimed software models', 'the sort', 'Figure', 'substantially more detail', 'reference', 'messages', 'an SCE-MI message channel', 'their content', 'a large bit vector', 'the DUT proxy model', 'a message', 'a message output channel', 'a DUT output proxy model', 'it', 'an abstract C++ data type', 'this point', 'it', 'presentation', 'the abstract output ports', 'SystemC terminology', 'the DUT proxy', 'the connected software testbench models', 'the hardware side', 'a message', 'the message input channel', 'many \ndozens', 'hundreds', 'clocks', 'event activity', 'It', 'the job', 'the transactor', 'this decomposition', 'message data content', 'sequences', 'clocked events', 'that', 'the DUT hardware model inputs', 'output messages', 'it', 'the job', 'the transactor', 'possibly hundreds to thousands', 'clocked events', 'the DUT hardware model', 'them', 'serialized bit streams', 'that', 'the software side', 'de', '-', 'serialization', 'abstract data types', 'the most part', 'the term message', 'transaction', 'some contexts', 'transaction', 'infrastructure overhead content', 'addition', 'user payload data', 'a lower layer', 'the interface', 'whereas, the term message  denotes', 'only user payload data', 'the implications', 'the transactor’s job', 'message bit streams', 'clocked \nevents', 'it', 'the ability', 'controlled time', 'these operations', 'the controlled clock', 'that', 'the DUT', 'the operations', 'one', 'the transactor operations', 'terms', 'controlled clock cycles', 'they', 'edges', 'the controlled clock', 'This', 'the controlled time view', 'Figure', 'they', 'all cycles', 'the uncontrolled clock', 'the waveforms', 'the \nuncontrolled time  view', 'Figure', 'this view', 'the controlled clock', 'the DUT', 'controlled time', 'a system', 'multiple controlled clocks', 'possibly differing frequencies', 'multiple \ntransactors', 'them', 'these transactors', 'the option', 'any clock', 'this', 'all controlled clocks', 'the system', 'unison', 'all other transactors', 'that', 'themselves', 'the clock', 'the clocks', 'they', 'themselves', 'no need', 'the clock', 'this case', 'they', 'the number', 'uclocks', 'which', 'the cclocks', 'Figure 4.Overall Description', 'Use Model\nFunctional Requirements Specification', 'SCE-MI', '94FIGURE', 'the SCE-MI use model', 'the semantics', 'clock control', '\x7fAny transactor', 'the SCE-MI infrastructure', 'the controlled clock', 'controlled time', '\x7fAll transactors', 'the SCE-MI infrastructure', 'the controlled clock', '\x7fAny transactor', 'controlled time', 'operations', 'another transactor', 'the transactor', 'question', 'not itself', 'the clock', '\x7fA transactor', 'the controlled clock', 'operations', 'that', 'decomposition', 'composition', 'transactions', 'a message channel', '\x7fThe DUT', 'one or more controlled clocks', 'that', 'one or more transactors', '\x7fAll transactors', 'a free running uncontrolled clock', 'that', 'the SCE-MI hardware side', 'Time View\nuclock\ncclockuclock\nTransactor operation', 'controlled time', 'extra \nuncontrolled clock cycles', 'Transactor operation', 'edges', 'controlled clock', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', '(SCE-MI)2.4 Work Flow', 'four major aspects', 'work flow', 'a system verification', 'the SCE-\nMI environment', 'They', 'model compilation\n\x7fInfrastructure linkage\n\x7fHardware model elaboration', 'the workstation', 'a common C/C++ compiler', 'other sources', 'third party vendors', 'the form', 'IP', ', ISS simulators', 'The compiled models', 'the software side', 'the SCE-MI infrastructure', 'an executable program', '2.4.2 Infrastructure Linkage\nInfrastructure linkage', 'the process', 'that', 'a user description', 'the hardware', 'namely the source or \nbridge  netlist', 'that', 'the interconnect', 'the transactors', 'the DUT', 'the SCE-MI \ninterface components', 'that netlist', 'a form', 'emulation', 'Part', 'this compile process', 'additional structure', 'the bridge netlist', 'that', 'the user', 'netlist', 'the SCE-MI infrastructure implementation components', 'the infrastructure linker', 'the core', 'the SCE-MI interface macros', 'the hardware side', 'part', 'this process', 'the infrastructure linker', 'the parameters', 'the instantiated \ninterface macros', 'the user-supplied bridge netlist', 'them', 'the dimensions', 'the interface', 'the parameters', 'it', '\x7fNumber', 'transactors\n\x7fNumber', 'input and output channels', '\x7fWidth', 'each channel\n\x7fNumber', 'clocks', '\x7fClock ratios\n\x7fClock duty cycles', 'the final netlist', 'the infrastructure linker', 'it', 'the \nemulation platform', 'it', 'a form', 'the emulator', '2.4.3 Hardware Model Elaboration', 'The compiled netlist', 'the emulator', 'the \nsoftware', '2.4.4 Software Model Construction', 'Binding', 'The software', 'the software compilation phase', 'which', 'all the software models', 'the workstation process image space', 'construction', 'place', 'the software models', 'themselves', 'the message port proxies', 'special calls', 'the API', 'Parameters', 'these calls', 'a means', 'which', 'Overall Description', 'Use Model\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94port proxies', 'its associated message port macro', 'the hardware', 'the co-modeling session', '2.5 SCE-MI Interface Components', 'The SCE-MI run time environment', 'a set', 'interface components', 'both the  hardware side', 'the  software side', 'the interface', 'each', 'which', 'a distinct level', 'functionality', 'They', 'this section', 'each', 'more detail', 'this document', '2.5.1 Hardware Side Interface Components', 'The interface components', 'the SCE-MI hardware side  consist', 'a small set', 'macros', 'that', 'connection points', 'the transactors', 'the SCE-MI infrastructure', 'These', 'macros', 'all necessary aspects', 'the interface', 'the transactors', 'the DUT', 'the point', 'view', 'this specification', 'these macros', 'empty Verilog or \nVHDL models', 'clearly defined port and parameter interfaces', 'This', 'a software API specification', 'that', 'function prototypes', 'the API', 'their implementations', 'Future implementations', 'the interface', 'modeling hardware', 'RTL C', '(a.k.a. RTC', 'a C modeling language', 'SystemC', 'RTL Verilog', 'VHDL', 'Such implementations', 'the RTC equivalents', 'the same macros', 'this specification', 'Briefly', 'the four macros', 'the following interfaces', 'the transactors', 'DUT', '\x7fMessage input port interface\n\x7fMessage output port interface\n\x7fControlled clock and controlled reset generator interface', '\x7fUncontrolled clock', 'uncontrolled reset', 'Software Side Interface Components', 'The interface', 'SCE-MI infrastructure', 'the software side', 'a set', 'methods', 'which', 'the following functionality', '\x7fParameter access', '\x7fMessage input and output port proxy binding and callback registration\n\x7fRendezvous operations', 'the hardware side\n\x7fInfrastructure service loop polling function\n\x7fMessage input', 'function\n\x7fMessage output', 'addition', 'the C++ object oriented interface', 'a set', 'C API functions', 'the benefit', 'pure C applications', 'User’s Guide', 'Tutorial', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', '(SCE-MI)3.0 User’s Guide', 'Tutorial', '3.1 Hardware Side Interfacing', 'The hardware side interface', 'the SCE-MI', 'a set', 'parametrized macros', 'which', 'transactors', 'that', 'which', 'the SCE-MI infrastructure', 'The macros', 'the point', 'instantiation', 'crucial parameters', 'that', 'the dimensions', 'the SCE-MI bridge', 'software', 'the user', 'It', 'the job', 'the infrastructure \nlinker', 'the values', 'these parameters', 'implementation components', 'the macros', 'The following four macros', 'the hardware side interface', 'the SCE-MI', 'the transactors', 'the DUT', 'macro\n\x7fSceMiMessageOutPort  macro', 'macro\n\x7fSceMiClockPort  macro', 'Any number', 'these macros', 'the system', 'One SceMiMessageInPort  \nmacro', 'each required message input channel', 'one SceMiMessageOutPort  \nmacro', 'each output channel', 'Message port macro', 'bit-widths', 'the point', 'instantiation', 'Exactly one \nSceMiClockPort  macro', 'each defined clock', 'the system', 'This \nSceMiClockPort  macro instance', 'a set', 'parameters', 'a particular clock', 'The \nSceMiClockPort  macro', 'the top level', 'a controlled clock', 'the DUT', 'The SceMiClockPort  macro instance', 'a reference ClockNum  \nparameter', 'that', 'it', 'one or more counterpart SceMiClockControl  macros', 'one or more transactors', 'The SceMiClockControl  macro', 'its transactor', 'all clock \ncontrolling operations', 'its associated clock', 'These two macros', 'the \nClockNum  parameter', 'every SceMiClockPort  macro', 'a minimum', 'one \nSceMiClockControl  macro', 'it', 'The infrastructure linker', 'the user', 'these', 'the internally generated SCE-MI infrastructure', 'clock generation circuitry', 'The following parameters', 'the points', 'instantiation', 'the macros', 'the required \ndimensions', 'the SCE-MI infrastructure components', '4.2.1', 'page', 'more details', 'transactors\n\x7fNumber', 'input and output channels', 'each channel\n\x7fNumber', 'controlled clocks', '\x7fName', 'clock ratio', 'duty cycle', 'each controlled clock\nFigure', 'a simple example', 'a transactor', 'DUT', 'the hardware side \ninterface', 'the SCE-MI.User’s Guide and Tutorial\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94FIGURE', 'Connection', 'SCE-MI Macros', 'Hardware Side', 'Transactor', 'DUT', 'This example', 'a single transactor', 'a DUT', 'the software side', 'a SceMiMessageInPort', 'a SceMiMessageOutPort', 'addition', 'it', 'a single clock', 'that', 'the transactor', 'the SceMiClockControl  macro', 'This clock', 'the \nDUT', 'the top level', 'a SceMiClockPort  macro', 'A key point', 'this example', 'only the transactor implementor', 'page', 'all SCE-MI interface macros', 'the SceMiClockPort', 'the \ntransactor', 'the message port macros', 'the SceMiClockControl  macro', 'the end user', 'the transactor', 'itself', 'the SceMiClockPort  macro', 'The SceMiClockPort  macro instantiation', 'all the clock parameters', 'The numbers', 'Figure', 'the component instantiation label', '#', '8) cclock\nmap', 'the parameters', 'the SceMiClockPort  macro', 'page', 'They', '= 1\n\x7fRatioNumerator', '1TransmitReady', 'p1', '[ ]SceMiMessageOutPort#128 p2TxRdyIn\nUclock\nUreset', 'CclockNegEdgeEnabledRxRdyIn\nUclk\nRst', '[63:0]\nTxRdyOut\nRxRdyOut\nMessageOut', 'DutInCtrl\nDutInData', '[ ]\nClk\nRstd1\nDUT\nCclock\nCresetSceMiClockPort#(1', '8) cclockReadyForCclockNegEdge', '‘1’User’s Guide', 'Tutorial', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)\x7fDutyHi', '= 50\n\x7fDutyLo', '= 50\n\x7fPhase', 'these parameters', 'the ClockNum  parameter', 'this particular clock', 'it', 'its 1 or more counterpart SceMiClockControl  macros', 'which', 'the same ClockNum  value', 'this case', 'addition', 'the clock specification parameters', 'the \ninfrastructure linker', 'the name', 'each clock', 'the instance label', 'each \nSceMiClockPort  instance', 'this case', 'message ports', 'a parametrized PortWidth  parameter', 'the  infrastructure linker', 'the following specific information', 'this \nnetlist', '\x7fSingle', 'transactor', '“Bridge.u1', 'top level module', '“Bridge', '“divide-by-1', 'controlled clock', '“cclock”\n\x7fControlled clock', 'a 1/1 ratio', 'which', 'implementation', 'the same frequency', 'the uncontrolled clock\n\x7fControlled clock', '50/50 duty cycle', '0 phase shift', 'a user', 'a don’t care duty cycle', 'page', 'details', '\x7fControlled reset', '8 controlled clock cycles', 'reset\n\x7fSingle SceMiMessageInPort', '“p1', 'bit-with', 'SceMiMessageOutPort', '“p2', 'bit-width', '128\nA more complicated example', 'that', 'two transactors', 'three clocks', 'Appendix B', 'page', 'The Routed  Tutorial\nThe Routed  tutorial documents', 'a real life example', 'that', 'the SCE-MI', 'untimed \nsoftware models', 'SystemC', 'hardware models', 'transactors', 'a DUT', 'RTL Verilog', 'This tutorial', 'the use model', 'the SCE-MI', 'a multi-threaded SystemC environment', 'It', 'some familiarity', 'the concepts', 'SystemC', 'abstract ports', 'autonomous threads', 'slave threads', 'module', 'port', 'definition', 'module instantiation', 'Reference', 'a description', 'these concepts', 'What', 'the Design', 'The \nRouted  design', 'a small design', 'that', 'air passengers', 'Origin', 'Destination', 'various interconnected Pipe s', 'Hubs', 'a RouteMap', 'this design', 'the \nOrigin s', 'Destination s', 'the transactors', 'the RouteMap  model', 'the DUT', 'Each Origin  \ntransactor interfaces', 'a SceMiMessageInPort', 'access', 'messages', 'the software \nside', 'Each Destination  transactor interfaces', 'a SceMiMessageOutPort', 'messages', 'the \nsoftware side', 'an OrigDest  module', 'that', 'both an Origin', 'Destination  transactor', 'it', 'User’s Guide and Tutorial\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94The “world', 'these Origin s', 'Anchorage', 'Cupertino', 'Noida', 'SealBeach', 'UK', 'Waltham', 'these Destination s', 'Anchorage', 'Cupertino', 'Maui', 'SealBeach', 'UK', 'Travel', 'any Origin', 'any Destination', 'the RouteMap', 'DUT', 'the following Pipe  interconnected Hubs', 'Chicago', 'Dallas', 'Newark', 'SanFran', 'Seattle', 'Each controlled clock cycle', 'one hour', 'travel or layover time', 'Figure', 'the Routed  world', 'User’s Guide and Tutorial\n20 of 94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)FIGURE', 'The Routed  World\nThe numbers', 'the directed arcs', 'the travel time', 'hours', 'the indicated Pipe', 'Layover time', 'each Hub', 'two hours', 'The RouteMap', 'TeachRoute  messages', 'the entire system', 'the \nWaltham Origin  transactor', 'Each TeachRoute  message', 'a piece', 'information 3Legend\nHub\nPipe', 'travel time', 'Origin\nDestination\nOrigDestNoida14\nAnchorage', '5\nSeattle', '7UK\nAnchorage\nCupertino\nNoidaSealBeach\nUK', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', 'a particular Hub', 'the route', 'its RouteTable  module', 'Figure', 'page', 'this simple mechanism', 'the software side RouteConfig  model', 'each Hub', 'its \nroutes', 'Waltham', 'it', 'turn', 'additional TeachRoute  tokens', 'Hubs', 'Waltham', 'other words', 'closer hubs', 'the RouteMap', 'routes', 'more distant hubs', 'This process', 'the entire mesh', 'which point', 'it', 'a backbone', 'all air travel activity', 'the route configuration', 'the testbench', 'the itineraries', '4 passengers', 'a \nperiod', '22 days', 'Each itinerary', 'several legs', 'each', 'scheduled departure', 'a specified \nOrigin', 'each', 'a specified Destination', 'The scheduled leg', 'a message', 'its designated Origin  transactor', 'It', 'the job', 'the transactor', 'the number', 'clocks', 'the \nspecified departure time', 'the token', 'the RouteMap  mesh', '3.2.2 System Hierarchy', 'The hierarchy', 'the whole system', 'the following subsections', '3.2.2.1 Software Side Hierarchy\nSystem', 'TestbenchCalendar', '> ClockAdvancer\nScheduler', 'OrigDest', 'Origin', 'Destination    \nRouteConfigSceMiDispatcher', 'the Calendar', 'Scheduler  software side models', 'the \nOrigDest', 'Origin', 'Destination  hardware side models', 'These interactions', 'SCE-MI \nmessage channels', 'Guide', 'Tutorial', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)3.2.2.2 Hardware Side Hierarchy', 'Following', 'the hierarchy', 'the hardware side components', 'the Bridge  netlist', 'SceMiClockControl', 'Destination maui', 'dallasHub', 'newarkHub', 'sanFranHub', 'Funnel\nNozzle\nRouteTable\nPipe\nClockAdvancer', 'SceMiMessageInPortSceMiMessageOutPort\nSceMiClockControl\nNotice', 'the Bridge  level', 'only the SceMiClockPort  macro, transactor  components', 'the DUT', 'the Origin', 'Destination  transactors', 'the SceMiMessageInPort', 'SceMiMessageOutPort', 'SceMiClockControl  macros', 'The ClockAdvancer  transactor', 'both \nmessage input', 'output ports', 'addition', 'the required SceMiClockControl  macro', '3.2.3.1 Bridge', 'the hardware and software side', 'the design', 'Figure', 'this \ndiagram', 'the structure', 'the generalized abstraction bridge', 'Figure', 'page', 'The design', '13 message channels', 'all', 'Two (message input', 'output', 'the Calendar \n<-> ClockAdvancer connection', 'six message input channels', 'the  Scheduler <-> Origin \nconnections', 'five output channels', 'the Scheduler <-> Destination  connections', 'User’s Guide and Tutorial\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94FIGURE', 'The Bridge', 'The two software models', 'that', 'the hardware side', 'the Calendar  model', 'the \nScheduler  model', 'These models', 'message port proxies', 'which', 'them', 'direct access', 'the \nmessage channels', 'the Origin', 'Destination  transactors', 'the hardware side', 'These two \nsoftware models', 'the only ones', 'that', 'the SCE-MI link', 'They', 'the other models', 'SystemC abstract ports', 'the hardware side', 'a set', 'Origin', 'that', 'the message \nchannels', 'that', 'the Scheduler', 'route tokens', 'the DUT', 'Some locations', 'Anchorage', 'the UK', 'Origin', 'Destination', 'OrigDest', 'Out', 'Port\nProxyCalendar', 'AdvanceCalendar', 'Out\nPortClock', 'Models\nAnchorage\nMessage', 'Out', 'Port\nProxy\nNoida', 'Port', 'Out', 'Arrival', 'Message', '/OutPort\nMessage', 'Out', 'UK', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'a ClockAdvancer  transactor', 'that', 'the Calendar  model', 'The \nClockAdvancer', 'a stand-alone transactor', 'that', 'the DUT', 'Its only job', 'time', 'a time', 'section', '3.2.3.5', 'page', 'more details', '3.2.3.2 DUT and Transactor Interconnect\nFigure', 'a representative portion', 'the RouteMap', 'it', 'DUT components', 'the RouteMap  mesh', 'FIGURE', 'DUT and Transactor Interconnect\nOrigin\nTokenOut\nDestination\nTokenIn\nDestination\nTokenInP', 'ePipe 5\nP', 'ePipe 5\nP', 'ePipe 4Funnel', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94Pipe s', 'two Hubs', 'an Origin', 'Destination  transactor', 'a Hub', 'primitive one hour', 'the proper length', 'one hour', 'travel', 'one clock', 'this diagram', 'a Pipe4  model', 'the Seattle Hub', 'Maui Destination', 'a four hour flight leg', 'travel', 'either direction', 'Anchorage', 'Seattle', 'a Pipe5', 'them', 'each direction', '3.2.3.3 DUT and Transactor Components\nFigure', 'the structure', 'the DUT and transactor components', 'FIGURE', 'DUT and Transactor Components\nMessageIn Port\nClockControl\nMessageOut Port\nClockControl\nMessageIn Port\nMessageOut PortOrigin', 'TokenInDestination', '32Transactor', 'Components DUT Components\nFunnel\nTokenIn0', 'TokenOut2TokenOut3Nozzle', 'TokenOut\nTokenIn\nRouteTableHub\n32\n32\n32\n323232\n32\n32\n32\nPipe\nTokenIn TokenOut32', '32\n‘TeachRoute', 'Token', '0307 1113\nDestination ID', 'Hub\nLearn Route ID\nAssociated Port ID‘Passenger Arrival', 'Origin', '4 IDPassenger ID', 'Departure15', 'Tutorial', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)Each Origin  transactor', 'a clock control macro', 'a message input port macro', 'departure tokens', 'the Scheduler', 'the software side', 'Each', 'the \nTokenOut  port', 'the scheduled departure time', 'the Origin  transactor', 'a \nclock control macro', 'it', 'the clock', 'Its only use', 'the clock control macro', 'the \nReadyForCclock  signal', 'which', 'the cclock', 'it', 'cclocks', 'the scheduled departure time', 'a pending departure', 'Each Destination  transactor', 'a clock control macro', 'a message output port macro', 'arrival tokens', 'the Scheduler', 'the software side', 'The arrival tokens', 'a passenger', 'the RouteMap  mesh', 'a Destination', 'its TokenIn  port', 'section', 'page', 'a detailed description', 'the Destination  transactor', 'This transactor', 'detail', 'it', 'a simple example', 'clock control and message port interfacing', 'a 32-bit vector signal', 'no handshakes', 'the system', 'the tokens', '0s', 'the mesh', 'any given cycle', 'a \nHub', 'Destination', 'a non-0 value', 'its input port', 'it', 'it', 'that', 'Token formats', 'Figure', 'A departure', 'the passenger ID', 'destination ID', 'scheduled time', 'departure', 'the departure', 'the mesh', 'it', 'layover information', 'the IDs', 'all the \nHubs', 'its Destination', 'an arrival', 'The arrival', 'a complete record', 'layover information', 'that', 'the software side', 'the console', 'A \nHub', 'a Funnel', 'that', 'tokens', 'up to four different sources', 'a Nozzle', 'that', 'a token up to four different destinations', 'The Nozzle', 'a small RouteTable', 'that', 'the beginning', 'the simulation', 'information', 'TeachRoute  tokens', 'The Destination  Transactor', 'the DUT', 'the Clock\nThe Destination  transactor', 'tokens', 'a point', 'exit', 'the RouteMap', 'them', 'the message output port', 'The Destination  transactor', 'clock control', 'potentially successive tokens', 'the RouteMap', 'the TokenIn  input', 'this destination portal', 'It', 'the \nreadyForCclock', 'the event', 'a token', 'the message output port', 'it', 'tokens', 'it', 'the entire \nRouteMap', 'all tokens', 'the requesting Destination  transactors', 'The Verilog source code', 'the Destination  transactor', 'the following listing', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94module', 'Destination', '( TokenIn', 'input', 'TokenIn;//', '[31:0] message', 'transmitReady', 'readyForCclock', 'destID = TokenIn[7:4', 'SceMiMessageOutPort', '#32 messageOutPort', 'Output', '---------------------------        .TransmitReady(transmitReady),      .ReceiveReady(receiveReady),\n        .Message(message) );\n    SceMiClockControl clockControl', 'Output', '( posedge uclock', 'if( ureset', '=', '=', 'readyForCclock', 'transmitReady', ';        end', 'DUT clock', 'It', 'this destination transactor', 'its pending token', 'the\n            //     DUT', 'it', 'tokens', 'subsequent DUT clocks', '( readyForCclock', '=', '=', 'acceptance', 'the token', 'we', 'the DUT clock', '( receiveReady', 'readyForCclock', 'message', 'TokenIn', 'transmitReady', 'if( token arrives', 'the assembly line', '(a.k.a. disable', 'the DUT', '=', '=', '}User’s Guide', 'Tutorial', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)3.2.3.5', 'The ClockAdvancer  Transactor', 'Controlling Time Advance\nThe ClockAdvancer  transactor', 'controlled clocks', 'the requested number', 'cycles', 'a reply transaction', 'User’s Guide and Tutorial\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94The Verilog source code', 'the ClockAdvancer', 'module ClockAdvancer', 'wire', 'messageIn', 'messageOut', 'receiveReadyIn', 'messageIn[31:0', 'messageOut', '=', 'SceMiMessageInPort', 'Output', ');    SceMiMessageOutPort', '#32 messageOutPort', 'Output', ';\n    SceMiClockControl clockControl', 'Output', '.Ureset(ureset', 'readyForCclock', ';\n        end', 'a clock advance command - Initialize cycle counter', 'if( transmitReadyIn', 'transmitReadyOut', 'advanceDelta', 'Decrement cycle count', 'count', 'a response', 'the time', '( readyForCclock', '=', '=', '( receiveReadyOut', '=', 'the SceMiClockControl  macro references', 'that', 'the Destination  \ntransactor', 'the default ClockNum=1', 'This', 'the ClockAdvancer', 'the Destination  User’s Guide', 'Tutorial', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)transactor share', 'the control', 'the same cclock', 'fact', 'only one cclock', 'the entire system', 'that', 'the default 1/1 ratio', 'Notice', 'the message output port', 'the data', 'that', 'it', 'This', 'the only thing', 'that', 'the software side', 'the ClockAdvancer', 'the cycle stamp', 'which', 'each message output response', 'page', '3.2.4', 'The Software Side', 'The software side', 'the Routed design', 'SystemC', 'C++', 'It', 'an \nexecutable program', 'that', 'the SCE-MI software side', 'The\n System  Model', 'Interconnect', 'SystemC Modules\nThe System  model', 'the top level “software netlist', 'SystemC modules', 'SC_MODULE', 'It', 'the construction', 'interconnect', 'the component models', 'A block diagram', 'the System model', 'Figure', 'FIGURE', 'Interconnect', 'SystemC Models\nTest Bench\nNewDay\nAnnounceArrivalAdvanceCalendar\nScheduleLeg\nLoadRouteMap\nDoneCalendar\nAdvanceCalendar\nAdvanceClockNewDay\nTodaysDate\nSceMi Dispatcher\nDoneScheduler\nTodaysDate\nScheduleLegLoadRouteAnnounceArrival\nRouteConfig\nLoadRouteMap LoadRoute\nAdvanceClock\nSceMi::ServiceLoop()Message Channel sTestbench ArchitectureUser’s Guide and Tutorial\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94Following', 'the source code', 'the System model', 'SC_MODULE', 'System', '<const Routed::ArrivalRecord', 'announceArrival', 'unsigned>                      advanceCalendar', 'sc_link_mp', 'const', 'sc_link_mp<>                              loadRouteMap', 'sc_link_mp', 'sc_link_mp', 'advanceClock', 'sc_link_mp', 'sc_link_mp<const Routed::Route *>         loadRoute', 'Module declarations', '*testbench', 'Calendar       *', '*scheduler', 'RouteConfig', '*routeConfig', 'SceMiDispatcher', 'SC_CTOR', '( System', 'new Testbench', 'testbench->NewDay', 'announceArrival', '( advanceCalendar', 'testbench->ScheduleLeg', 'loadRouteMap', 'testbench->Done', '( “calendar', 'calendar->AdvanceCalendar', 'advanceCalendar', 'calendar->AdvanceClock', 'advanceClock', 'todaysDate', 'new Scheduler', '(      todaysDate', 'scheduler->LoadRoute', 'announceArrival', 'routeConfig', '( “routeConfig', 'loadRouteMap', 'routeConfig->LoadRoute', 'loadRoute', 'advanceClock', 'SystemC interconnect channels', 'sc_link_mp<>  data types', 'These', 'abstract signals', 'that', 'abstract ports', 'The parametrized data type', 'each \nsc_link_mp', 'the data type', 'the message', 'the channel', 'an \noutput abstract port', 'an input abstract port', 'the todaysDate  channel', 'value” data type', 'some', 'the other channels', 'the announceArrival', 'reference” data types', 'Routed::ArrivalRecord', 'less User’s Guide', 'Tutorial', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE', 'the message', 'value', 'no danger', 'the \nreceiver', 'the sender’s data', 'the sender’s data', 'scope', 'the receiver', 'a possibly dangling reference', 'messages', 'reference', 'care', 'their use', 'them', 'const  pointers', 'some', 'the safety problems', 'Module pointers', 'the SC_MODULE(System', 'object', 'its SystemC \nconstructor', 'SC_CTOR(System', 'each child module', 'its abstract ports', 'the declared interconnect channels', 'It', 'SystemC channels', 'SCE-MI message channels', 'Both types', 'channels', 'messages', 'SystemC channels', 'messages', 'arbitrary C++ data types', 'SystemC modules', 'An entire simulation', 'just software models', 'reference', 'more details', 'SystemC interconnect channels', 'SCE-MI message channels', 'a completely different interface', 'abstraction bridges', 'a software subsystem', 'a hardware subsystem', 'the use model', 'this example', 'their interfaces', 'SystemC models', 'The thick round arrows', 'Figure', 'the SystemC autonomous threads', 'the \nTestbench', 'SceMiDispatcher  modules', 'These two threads', 'the only autonomous threads', 'the \nsystem', 'All the other code', 'slave threads', 'Guide and Tutorial\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', 'The sc_main', ')  Routine', 'Error Handler', 'The following listing', 'which', 'the top level entrypoint', 'the program', 'The \nsc_main', 'a SystemC kernel facility', 'it', 'a conventional \nmain() C or C++ entrypoint', 'the same program argument', 'semantics', 'static void errorHandler', ', SceMiEC *ec', 'char buf[32', 'sprintf', 'buf', '(int)ec->Type', 'string messageText', 'messageText', '=', 'buf', 'messageText', 'ec->Culprit', 'messageText', 'messageText', '=', 'ec->Message', 'messageText', 'int sc_main', 'int argc', 'char', 'argv', 'errorHandler', 'NULL', 'SceMi', '*scemi = NULL', 'SceMiParameters parameters', '= SceMi::Init', 'parameters', 'System system', '“system', 'the system', 'proper bindings', 'the SCE-MI', 'the modules', 'that', 'it', 'system.dispatcher->Bind', 'system.calendar', '       system.scheduler', '//-------------------------------------------------', 'SystemC kernel', 'cerr', 'sc_start(-1', 'catch', 'string message', 'cerr', 'cerr', '<< “Fatal Error', 'Program aborting', '<< endl', 'SceMi::ShutDown', '( scemi', '-1', '}\n    catch', 'cerr', '“Error', 'Unclassified exception', '<< endl', 'cerr', '<< “Fatal Error', 'Program aborting', '<< endl', 'SceMi::ShutDown', '( scemi', '-1', 'The first routine', 'the errorHandler', 'This', 'the master error handling function', 'that', 'the SCE-MI', 'an error', 'this function', 'the message User’s Guide', 'Tutorial', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)before', 'a C++ exception', 'The exceptions', 'the catch', '}  blocks', 'the end', 'the sc_main() routine', 'they', 'the program', 'the error handler', 'the SCE-MI', 'SceMi::Init', 'This method', 'a pointer', 'an SceMi  object', 'that', 'the whole SCE-MI software side infrastructure', 'the System  model', 'the previous section', 'The constructor', 'SC_CTOR(System', 'all', 'its child software models', 'turn', 'their \nSC_CTOR', 'the whole system', 'models', 'that', 'SCE-MI', 'the \nmaster SceMi  object pointer', 'they', 'its methods', ':Bind', 'accessor \nmethods', 'those models', 'the SystemC main kernel loop', 'the sc_start()  function', 'The -1 \nparameter', 'it', 'the program', 'the program', 'the next section', 'The \nSceMiDispatcher  Module', 'the SCE-MI Service Loop\nThe SceMiDispatcher  module', 'an autonomous thread', 'that', 'the SCE-MI infrastructure', 'it', 'its message port proxies', 'repeated calls', 'the SceMi::ServiceLoop', ')  \nmethod', 'section 4.3.3.6', 'page', 'this logic', 'its own dedicated thread', 'other models', 'the system', 'the SCE-MI.User’s Guide and Tutorial\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94Following', 'the source code', 'the SceMiDispatcher', ':\nSC_MODULE', 'Context declarations\n    SceMi', 'dispatchThread', '// Autonomous SceMi', 'dispatcher thread', 'doneThread', '){\n        SceMi::ShutDown', 'exit(0', 'This', 'a normal exit', '}\n    public', 'Accessors', 'Bind', 'dSceMi', 'SceMiDispatcher', '// Thread bindings', 'SC_THREAD', 'SC_SLAVE', 'doneThread', 'Done', 'void SceMiDispatcher::dispatchThread', 'This', 'all the dispatcher', 'It', 'the SceMi dispatcher poll function', 'returns', '(;', ';)', 'dSceMi->ServiceLoop', 'each call', 'the service loop', 'the autonomous thread', 'other threads', 'the system', 'the wait() function', 'the only other autonomous thread', 'the Routed  system', 'the Testbench  model', 'Both', 'these threads', 'the thick round arrows', 'Figure', 'page', 'The other job', 'the SceMiDispatcher', 'the system', 'it', 'a notification', 'its Done  \nport', 'the simulation', 'Done', 'the slave thread', '::doneThread', 'construction', 'The Done  port', 'its associated outmaster  port', 'the \nTestbench  module', 'it', 'the Testbench', 'the simulation', 'next section).User’s Guide and Tutorial\n36 of 94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', '(SCE-MI)3.2.4.4 Application Specific Data Types', 'the Routed System', 'The following data types', 'the Routed.hxx  header file', 'They', 'the subsequent discussion', 'They', 'data types', 'that', 'this application', 'class Routed {\n    public', 'typedef', 'enum Parameters', 'NumPassengers', 'NumLocations', 'MessageSize', 'typedef', '{\n        Nobody', 'BugsBunny', 'DaffyDuck', 'ElmerFudd', 'SylvesterTheCat', 'typedef enum LocationIDs', '{\n    //  Location           Origin  Destination Hub', '----------- ---\n        Unspecified', 'Anchorage', 'X\n        Cupertino', 'X       X\n        Dallas', 'X        Maui', 'X\n        Newark', 'X\n        Noida', 'X        SanFran', 'X\n        SealBeach', 'X       X\n        Seattle', 'X        UK', 'Waltham', '12: X', 'typedef struct Itinerary {\n        unsigned     DateOfTravel', 'unsigned     TimeOfDeparture', 'PassengerIDs', 'LocationIDs', 'LocationIDs', 'typedef struct ArrivalRecord', 'PassengerIDs', 'unsigned     DateOfArrival', 'unsigned     TimeOfArrival', 'unsigned     LayoverCount', 'LocationIDs', 'LocationIDs', '{\n        LocationIDs', 'LocationIDs', 'unsigned     PortID', 'typedef struct Date', '{\n        SceMiU64  CycleStamp', 'SCE-MI', 'The  Testbench  Model', 'Main Control Loop\nThe Testbench  model', 'a SystemC autonomous thread', 'that', 'the main driver', 'the \nRouted  design', 'Its job', 'the four passenger itineraries', 'the legs', 'those \nitineraries', 'the appropriate dates', 'the appropriate departure times', 'the \nScheduler  model', 'The condensed source code', 'the passenger itinerary declarations', 'the Testbench  model', 'day', 'departs', 'BugsBunny', 'Anchorage', 'Cupertino', ', BugsBunny', 'SealBeach', 'Maui', 'Unspecified', 'day', 'departs', 'DaffyDuck', 'Waltham', 'Cupertino', 'DaffyDuck', 'Cupertino', 'SealBeach', 'DaffyDuck', 'Cupertino', 'Maui', 'DaffyDuck', 'Unspecified', 'day', 'departs', 'ElmerFudd', 'Anchorage', 'ElmerFudd', 'Cupertino', 'Maui', 'ElmerFudd', 'Unspecified', 'const', '=', '/*On day', 'departs', 'SylvesterTheCat', 'Noida', 'SealBeach', 'Cupertino', 'SylvesterTheCat', 'Anchorage', 'SylvesterTheCat', 'static const char', 'passengerNames', '{\n    “Nobody', 'locationNames', '“Anchorage', 'Chicago', '“,\n    “Cupertino', 'Dallas', 'Newark', ',   “Noida', ',  “SanFran  “,    “SealBeach', 'Seattle', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)There', 'four passengers', 'whose itineraries', 'lists', 'Routed::Itinerary records', 'Each \nrecord', 'a leg', 'that passenger’s journey', 'a date', 'departure', 'time', 'departure', 'passenger', 'origin', 'destination', 'The \npassengerNames', 'locationNames', 'strings use', 'printing', 'messages', 'the SystemC module definition', '( SC_MODULE', 'the Testbench  model', 'its standard \nSystemC constructor', 'SC_CTOR', 'SC_MODULE', 'Testbench', '//-------------------------------------------------------', 'Abstract port declarations', 'sc_master<>            LoadRouteMap', 'sc_master', 'sc_outmaster', 'unsigned> AdvanceCalendar', 'unsigned>   NewDay', 'Routed::Itinerary', '>   ScheduleLeg', 'unsigned dNumMauiArrivals', 'unsigned dDayNum', 'const', 'Thread declarations', 'newDayThread', '}\n    void announceArrivalThread', 'Helper declarations', 'SC_CTOR', '( Testbench', 'dNumMauiArrivals(0', 'dDayNum(0', '// Thread bindings', 'This autonomous thread', 'the main body', 'the Routed driver', 'SC_THREAD', 'driverThread', 'UTick', 'SC_SLAVE', '( newDayThread', 'SC_SLAVE', '( announceArrivalThread', '// Initialize itinerary pointers', '=', '=', 'dItineraries[2', 'dItineraries[3', 'User’s Guide and Tutorial\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94Following', 'the autonomous thread', 'the main driver loop', '// Signal RouteConfig model', 'configuration RouteMap', 'unsigned dayNum = dDayNum', 'AdvanceCalendar', 'day', '(;', 'day', 'NewDay', '( dayNum', '= dDayNum', 'unsigned date', 'minDate', 'itineraries', 'any passengers', 'If so, advance calendar', 'tomorrow', 'case', 'next leg', 'itinerary', '( int i=0', 'i', '( (date', 'cout', 'day', '“ << setw(2', '<< setw(2', '<< endl', 'ScheduleLeg', 'minDate', 'minDate', 'date', 'its main loop', 'driverThread', 'two things', 'the LoadRouteMap  outmaster port', 'it', 'the RouteConfig  model', 'all the routes', 'the \nRouteTable s', 'all the Hubs', 'the RouteMap', 'Each', 'route', 'that', 'the hardware', 'one clock', 'These small one clock advances', 'the RouteConfig  model', 'the AdvanceClock  port', 'the Calendar  model', 'Passenger travel', 'the RouteMap', 'all the Hubs', 'their routes', 'all the routes', 'the RouteMap', 'the Calendar', 'day', 'This', 'turn', 'the Calendar  model', 'the arrival', 'day', 'the NewDay  inslave port', 'the \nday change', 'driverThread', 'a loop', 'it', 'any \ntravel', 'the itineraries', 'the current day', 'no travel', 'it', 'the Calendar', 'the first day', 'which', 'travel', 'Legs', 'each itinerary', 'the \nItinerary  record', 'the ScheduleLeg  outmaster port', 'the Scheduler  model', 'which', 'it', 'it', 'the hardware', '94 Functional Requirements Specification', 'SCE-MI)This', 'each leg', 'each itinerary', 'all passengers', 'all legs', 'their \ntrip', 'the Maui  Destination', 'This', 'the termination condition', 'that', 'the SceMiDispatcher  model', 'the Done  outmaster port', 'code', ':announceArrivalThread', 'this notification', 'the SceMiDispatcher  model', 'the SCE-MI', 'the program', 'a normal exit status', 'The Testbench  model', 'arrivals', 'passengers', 'their destinations', 'they', 'The \n::announceArrivalThread', 'slave thread', 'an arrival', 'an ArrivalRecord', 'AnnounceArrival', 'which', 'the message output port proxy', 'callback', 'the Scheduler', 'It', 'the arrival information', 'the console', 'the source code', 'Testbench::announceArrivalThread', 'Routed::ArrivalRecord', 'arrivalRecord', '= AnnounceArrival', 'day', '“ << setw(2', '<< arrivalRecord->DateOfArrival', '“ << setw(2', '<< arrivalRecord->TimeOfArrival', '<< locationNames[arrivalRecord->DestinationID', '<< locationNames[arrivalRecord->OriginID', 'layovers', '( unsigned i=0', 'i', 'cout', 'termination condition', '=', '=', '=', 'Everyone', 'Maui', 'We', '’s party', '”\n             << endl', 'Done', 'the simulation', '}\n}User’s Guide and Tutorial\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', 'The Scheduler  Module', 'Message Port Proxies\nFollowing', 'the SystemC module definition', 'constructor', 'the Scheduler  model', 'SC_MODULE', 'Scheduler', 'Abstract port declarations', 'sc_inmaster<Routed::Date>                   TodaysDate', 'const', 'Routed::Itinerary', '>       ScheduleLeg', 'sc_inslave<const Routed::Route *>           LoadRoute', 'sc_outmaster<const Routed::ArrivalRecord *> AnnounceArrival', 'Context declarations\n    SceMiMessageData', 'SceMiMessageInPortProxy', 'SceMiMessageInPortProxy', 'SceMiMessageInPortProxy', 'SceMiMessageInPortProxy', 'dOriginSealBeach', 'SceMiMessageInPortProxy', 'SceMiMessageInPortProxy', 'dOriginWaltham', 'dDestinationSealBeach', 'Routed::ArrivalRecord dArrivalRecord', 'Thread declarations', 'scheduleLegThread', 'void loadRouteThread', 'Helper declarations', 'static void replyCallback', 'const SceMiMessageData', 'data', 'void announceArrival', 'SceMiU64 cycleStamp', 'SceMiU32 arrivalToken', 'Bind', 'SceMi', 'scemi', 'SC_CTOR', 'Scheduler', 'dSendData(Routed::MessageSize', 'dOriginAnchorage(NULL', 'scheduleLegThread', 'ScheduleLeg', 'SC_SLAVE', '( loadRouteThread', 'User’s Guide and Tutorial\n42 of 94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', 'two slave threads', 'this model', 'the', 'scheduleLegThread', 'the \n::loadRouteThread', 'The ::loadRouteThread', 'detail', 'TeachRoute  tokens', 'the RouteMap  mesh', 'the Waltham Origin  transactor', 'the \nRouteMap', 'the beginning', 'the simulation', 'This thread', 'the RouteConfig  module', 'a new route', 'its LoadRouteMap  operation', 'The', 'scheduleLegThread', 'the Scheduler', 'Routed::Itinerary  messages', 'its ScheduleLeg  inslave port', 'the Testbench  model', 'It', 'those legs', 'departure \ntokens', 'the message input channels', 'their designated Origin  transactors', 'The Scheduler', 'pointers', 'each', 'the message input port proxies', 'that', 'Origin  transactors', 'Each \ndeparture', 'the passenger ID', 'destination ID', 'the Routed::Itinerary  \nrecord', 'the source code', 'the', 'scheduleLegThread', 'Routed::Itinerary *leg', 'ScheduleLeg', 'a ‘Passenger Departure', 'the contents', 'the given\n    // ‘Itinerary’ record', 'SceMiU32 passengerDepartureToken =\n         leg->PassengerID            |', 'dSendData', 'Set', 'passengerDepartureToken', 'leg->OriginID', 'case', 'Routed::Anchorage', 'dOriginAnchorage->Send( dSendData', 'case', 'Routed::Cupertino', 'break;\n        case Routed::Noida:     dOriginNoida    ->Send( dSendData', 'case', 'Routed::SealBeach', 'dOriginSealBeach->Send', 'break', 'case Routed::UK', '->Send( dSendData', 'break', 'case', 'Routed::Waltham', 'dOriginWaltham  ->Send( dSendData', 'break', 'default', 'assert(0', 'The Scheduler::Bind()  method', 'simulation', 'the sc_main', 'section \nFigure', 'page', 'the SCE-MI message input', 'output port proxies', 'each', 'the \nOrigin', 'Destination  transactors', 'each', 'the output port User’s Guide and Tutorial\nFunctional Requirements Specification', 'SCE-MI', '94proxies', 'the output', 'callback', 'replyCallback', 'the binding structure', 'page', 'more information', 'void Scheduler::Bind', '// Establish message input', '( “anchorage', 'TokenIn', 'TokenIn', 'dOriginNoida', '( “noida', '“TokenIn', 'dOriginSealBeach = scemi->BindMessageInPort', '“sealBeach', 'TokenIn', 'scemi->BindMessageInPort', 'uk', '“TokenIn', 'dOriginWaltham', '“waltham', 'TokenIn', 'Establish message output', 'this', 'dDestinationAnchorage = scemi->BindMessageOutPort', '“anchorage', 'TokenOut', '= scemi->BindMessageOutPort', '“cupertino', 'TokenOut', 'dDestinationMaui      = scemi->BindMessageOutPort', '“maui', '“TokenOut', 'dDestinationSealBeach = scemi->BindMessageOutPort', '“sealBeach', 'TokenOut', '= scemi->BindMessageOutPort', 'uk', '“TokenOut', 'The Scheduler', 'processing', 'arrivals', 'the Calendar', 'arrivals', 'any time', 'the course', '24 hours', '(i.e., 24 clocks', 'Each arrival', 'a \nDestination  transactor', 'a message output port', 'the Scheduler', 'The SCE-MI infrastructure', 'the arriving messages', 'the replyCallback', 'that', 'the', ':Bind() \nmethod', 'turn', 'the message', 'announceArrival', ')  method', 'the code', 'the replyCallback()  \nfunction', 'Scheduler::replyCallback', 'data', 'Scheduler *)context)->announceArrival', 'data->CycleStamp', 'data->Get(0', 'The', 'announceArrival', ')  method', 'the arrival', 'It', 'the encoded arrival', 'the Routed::ArrivalRecord  data type', 'it', 'TodaysDate', 'an output', 'the Calendar', 'User’s Guide', 'Tutorial', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE', 'it', 'the AnnounceArrival  outmaster port', 'the Testbench  model', 'which', 'the \narrival information', 'the console', 'Scheduler::announceArrival', 'SceMiU32 arrivalToken', 'todaysDate', 'TodaysDate', 'Read today’s date', 'Calendar\n    dArrivalRecord', '=', 'Day', 'dArrivalRecord', 'TimeOfArrival = cycleStamp - todaysDate', 'CycleStamp', 'dArrivalRecord', 'PassengerID   =', 'Routed::PassengerIDs', 'arrivalToken', '0xf', 'dArrivalRecord', '=', 'arrivalToken', '0xf', 'dArrivalRecord', '=', 'arrivalToken', '0xf', 'dArrivalRecord', 'LayoverCount', 'arrivalToken', '8)', '0xf', 'assert', 'dArrivalRecord', 'LayoverCount', '( unsigned i=0', 'dArrivalRecord', 'LayoverCount', 'dArrivalRecord', 'arrivalToken', '0xf', 'Arrival record', 'reference', 'The Calendar  Module', 'the Clock Advancer\nThe Calendar  model', 'time', 'the RouteMap', 'a time', 'a set', 'scheduled departures', 'each Origin  transactor', 'that', 'departures', 'a particular day', 'the Calendar', 'the DUT', '24 clocks', '24 hours', 'some multiple', '24 clocks', 'the next scheduled departure', 'The \nCalendar', 'time', 'a message', 'the ClockAdvancer  transactor', 'the hardware', 'which', 'direct control', 'the DUT clock', 'the ClockControl  macro', 'The source code', 'the Calendar  \nmodule', 'structure', 'that', 'the Scheduler', 'it', 'The Calendar  model', 'two slave threads', 'that', 'requests', 'time', 'advanceCalendarThread', 'requests', 'the AdvanceCalendar  port', 'a given \nnumber', 'days', 'User’s Guide and Tutorial\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94The', 'advanceClockThread', 'requests', 'one clock', 'a time', 'which', 'RouteMap  configuration', 'the injection', 'each TeachRoute', 'one clock', 'This method', 'void Calendar::advanceClockThread', '){\n    dSendData', 'ClockAdvancer', '1 clock', 'dInputPort->Send( dSendData', 'message', 'port proxy', 'the cycle stamp', 'the output port proxy reply callback', 'SceMiU64 currentCycleStamp', 'dCycleStamp', '= currentCycleStamp', 'this method', 'a loop', 'that', 'the SystemC kernel', 'The reason', 'this', 'it', 'the clock', 'its advance', 'the SystemC kernel', 'it', 'this condition', 'the autonomous \nSceMiDispatcher  thread', 'section', 'page', 'a chance', 'the message output ports', 'This', 'the condition', 'the', '::advanceClockThread', 'the \nCalendar::dCycleStamp  data member', 'value', 'The ::dCycleStamp changes value', 'the ClockAdvancer', 'the hardware side', 'its \noutput port', 'it', 'its one clock time advance', 'which', 'turn', 'the \nCalendar::replyCallback', 'the SceMi::ServiceLoop', 'The \nreplyCallback()  function', 'void *context', ', const SceMiMessageData', 'data', 'The cycle stamp', 'the', ':CycleStamp', ')  method', 'the SceMiMessageData  object', 'This', 'a count', 'elapsed controlled clock counts', 'that', 'the beginning', 'the simulation', 'the time', 'this message', 'the hardware side', 'This', 'a convenient way', 'software', 'track', 'elapsed clock time', 'the hardware', 'the', 'dCycleStamp', 'the', 'advanceClockThread', 'the function', 'mind', 'the', 'functions', 'two \ndifferent autonomous threads', 'that', 'each', 'the autonomous \nTestbench::driverThread', 'the \nSceMi::ServiceLoop()  function', 'that', 'the autonomous \nSceMiDispatcher::dispatchThread', 'This', 'the clean interaction', 'a general multi-\nthreaded application software environment', 'the SCE-MI service loop', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)4.0 Formal Functional Specification', '4.1 Hardware Side Interface Macros', '4.1.1 Dual Ready Protocol\nThe message port macros', 'the hardware side', 'a general PCI-like dual ready protocol', 'detail', 'these macros work', 'the dual ready handshake protocol', 'they', 'this section', 'The waveforms', 'several dual ready handshake scenarios', 'FIGURE', 'Dual Ready Handshake Protocol\nBriefly', 'the dual ready handshake works', 'The transmitter', 'TransmitReady', 'any \nclock cycle', 'it', 'data', 'it', 'The receiver', 'ReceiveReady', 'any \ncycle', 'it', 'data', 'it', 'any clock cycle', 'which', 'TransmitReady', 'ReceiveReady', ', data “moves', 'it', 'the receiver', 'The dual ready protocol', 'the following two advantages', '\x7fSignals', 'they', 'posedge clocked logic', 'both TransmitReady', 'ReceiveReady', 'sequences', 'data', 'every clock cycle', 'the same performance', 'example', 'a toggle', 'based protocol.uclock\nTransmitReady\nReceiveReadyureset\nd6', 'moves\nreceiver ready and d5 moves\nd5', 'd1 1st\nclock', 'reset\nd1', 'd3', 'moves\n d4 arrivesd2', 'movesreceiver', 'd6receiver', 'd7d1', 'movesd4Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '944.1.2SceMiMessageInPort  Macro\nThe SceMiMessageInPort  macro', 'messages', 'the software side', 'a channel', 'the \ntransactor', 'The macro', 'two handshake signals', 'that', 'a dual-ready protocol', 'a data bus', 'that', 'the message', 'itself', 'Figure', 'the symbol', 'the \nSceMiMessageInPort  macro', 'Verilog and VHDL source code', 'the empty macro wrappers', 'FIGURE', 'SceMiMessageInPort  Macro\n4.1.2.1 Parameters', 'Signals', 'PortWidth', 'The message width', 'bits', 'the setting', 'this parameter', 'PortName', 'The port’s name', 'its instance label', 'ReceiveReady\nA value', 'this signal', 'the transactor', 'data', 'the software', 'this signal', 'the hardware', 'the software', 'that', 'it', 'a location', 'which', 'it', 'any data', 'that', 'the message input port', 'a new message', 'the \nTransmitReady', 'ReceiveReady', 'both', 'location', 'Figure', 'page', 'this', 'a notification', 'the software side', 'a new empty location', 'this', 'an  input ready callback', 'the software side', 'section', 'page', 'The next section', 'detail', 'input ready propagation notifications', 'respect', 'the timing', 'the \nTransmitReady', 'ReceiveReady  handshakes', 'it', 'transactors', 'ReceiveReady', 'the input ready callback', 'this', 'the case', 'the ReceiveReady  input', 'the software \nside', 'no input ready callback', 'this case', 'TransmitReady', 'a strobe', 'each TransmitReady\nReceiveReady\nMessage', 'SceMiMessageInPort#<PortWidth', '<PortName>Verilog Macro Wrapper', 'module SceMiMessageInPort', 'outputs', 'ReceiveReady', 'TransmitReady', 'Message', '//------------------------', 'PortWidth', 'input ReceiveReady', 'endmodule\nVHDL Macro Wrapper', 'ReceiveReady', 'TransmitReady', 'Message', 'std_logic_vector', 'PortWidth-1', 'architecture', 'EmptyMacro', 'SceMiMessageInPort', 'end;Formal Functional Specification', '48 of 94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)arriving message', 'The transactor', 'any arriving data', 'it', 'subsequent uclock cycles', 'TransmitReady\nA value', 'this signal', 'any posedge', 'the uclock', 'the channel', 'message data', 'the transactor', 'ReceiveReady', 'the TransmitReady', 'the first clock', 'which', 'ReceiveReady', 'this clock data moves', 'no more messages', 'the software side', 'the \nTransmitReady', 'Message\nThis vector signal', 'the payload data', 'the message', '4.1.2.2 Input Ready Propagation', 'the software client code', 'an input ready callback', 'it', 'a message input port \nproxy', 'page', 'the hardware side', 'the infrastructure', 'the software side', 'it', 'more input', 'Each time', 'it', 'the port proxy', 'the software side', 'a call', 'the user', 'This mechanism', 'input ready \npropagation', 'The prototype', 'the input ready callback', 'this function', 'a software model', 'a message', 'the message \ninput port proxy', 'transmission', 'the message input port', 'the hardware side', 'The context  argument', 'a pointer', 'any user-defined object', 'presumably the software model', 'that', 'the proxy', 'An important point', 'it', 'the application', 'the protocol', 'the \ntransactor', 'input', 'the software model', 'a send', 'A well behaved software model', 'a send', 'it', 'an input ready callback', 'the input ready propagation mechanism', 'The SCE-MI infrastructure', 'this', 'the idea', 'the transactor', 'I', 'input', 'it', 'the \nReceiveReady  input', 'the SceMiMessageInPort', 'which', 'an input ready callback', 'the software side', 'ServiceLoop', 'The software model', 'a flag', 'that', 'ServiceLoop', 'the transactor', 'input', 'some cases', 'it', 'a send', 'the callback', 'The point', 'a send', 'the software model', 'some time', 'the input ready callback', 'A second point', 'it', 'an application', 'many output callbacks', 'an input callback', 'other words', 'the software model', 'an outer loop', 'that', 'the status', 'an application', 'OKToSend  flag', 'each iteration', 'the send', 'the flag', 'an application', 'an outer loop', 'that', ':ServiceLoop', 'checks', 'output messages', 'ready notifications', 'Each callback  function', 'a flag', 'the context', 'the outer loop', 'an output message', 'processing', 'an input port', 'more input', 'Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', 'an input ready callback', 'outer loop', 'ServiceLoop', 'an output message callback', 'that output message', "the 51'st time", '::ServiceLoop', 'the input ready callback', 'which', 'the \nOKToSend  flag', 'its context', 'which', 'the outer loop', 'the new flag status', 'a \nsend', 'that input channel', 'The handshake waveforms', 'Figure', 'page', 'the semantics', 'the \ndual ready protocol', 'a couple', 'reasons', 'these waveforms', 'an actual implementation', 'a \nSceMiMessageInPort  macro', 'input ready propagation', 'an optional callback', 'the software side', 'the sender', 'the software side', 'input ready notifications', 'messages', 'hence \nTransmitReady  assertions', 'consecutive clocks', 'input \nready callbacks', 'a given port', 'the timing', 'the physical layer', 'the SCE-MI bridge', 'two successive transmissions', 'the software end', 'consecutive message transmissions', 'the hardware', 'All', 'this', 'the hardware', 'the transactor', 'any', 'the \nabove scenarios', 'they', 'The waveforms', 'Figure', 'what', 'one', 'input ready callbacks', 'It', 'four possible scenarios', 'which', 'an input ready notification', 'FIGURE', 'SceMiMessageInPort Handshake Waveforms', 'Input Ready Propagation', 'd3 propagatesuclock', 'TransmitReady\nReceiveReadyureset', 'd4 propagatesd3', 'input', 'd1\npropagates', 'reset\nd1', 'd2 propagates\nd2', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)In', 'the depicted scenarios', 'an input ready notification', 'the software', 'transactor', 'the first clock', 'a reset', 'transactor transitions', 'transactor remains', 'a clock', 'which', 'a transfer', 'a assertions', 'both TransmitReady', 'ReceiveReady', '4.1.3SceMiMessageOutPort  Macro\nThe SceMiMessageOutPort  macro', 'transactors', 'messages', 'the software side', 'the \nSceMiMessageInPort  macro', 'it', 'a dual ready handshake', 'this case', 'the transmitter', 'the transactor', 'the receiver', 'the SCE-MI interface', 'A transactor', 'any number', 'SceMiMessageOutPort  macro instances', 'Figure', 'the symbol', 'the SceMiMessageOutPort  \nmacro', 'Verilog and VHDL source code', 'the empty macro wrappers', 'FIGURE', 'SceMiMessageOutPort  Macro\n4.1.3.1 Parameters and Signals\nPortWidth', 'The message width', 'bits', 'the setting', 'this parameter', 'PortPriority\nThe priority', 'which', 'output messages', 'the output channel', 'the same uclock', 'page', 'details', 'the meaning', 'this parameter', 'PortName', 'The port’s name', 'its instance label', 'SceMiMessageOutPort#(<PortWidth>,<PortPriority', 'module SceMiMessageOutPort', 'outputs\n    TransmitReady', 'ReceiveReady', 'Message', '//------------------------', 'PortWidth', '= 1;\n    parameter', 'PortPriority =', 'input TransmitReady', 'output ReceiveReady', 'input', '[PortWidth-1:0] Message', 'endmodule\nVHDL Macro Wrapper', 'entity SceMiMessageOutPort', '( PortWidth', 'PortPriority', 'port', 'TransmitReady', 'ReceiveReady', 'Message', 'std_logic_vector', 'PortWidth-1', 'end', 'architecture', 'EmptyMacro', 'SceMiMessageOutPort', 'end;Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94TransmitReady\nA value', 'this signal', 'the transactor', 'message data', 'the output channel', 'ReceiveReady', 'the TransmitReady', 'the \nfirst clock', 'which', 'ReceiveReady', 'this clock data moves', 'the \ntransactor', 'no more messages', 'transmission', 'it', 'the TransmitReady', 'ReceiveReady\nA value', 'this signal', 'any uclock posedge', 'the output channel', 'data', 'the transactor', 'this signal', 'the SCE-MI hardware side', 'the transactor', 'the output channel', 'a location', 'which', 'it', 'any data', 'that', 'the software side', 'the channel', 'any cycle', 'which', 'both the \nTransmitReady', 'ReceiveReady', 'the transactor', 'the data', 'the subsequent cycle', 'the ReceiveReady', 'that', 'a new empty location', 'which', 'the transactor', 'any time', 'TransmitReady', 'the last message data', 'arrival', 'the software \nside', 'a  receive callback', 'its message output port proxy', 'section', 'page', 'Message\nThis vector signal', 'the payload data', 'the message', 'the transactor', 'the software side', 'the channel', '4.1.4SceMiClockPort  Macro\nThe SceMiClockPort  macro', 'a controlled clock', 'the DUT', 'The SceMiClockPort  macro', 'each instance', 'a SceMiClockPort', 'a controlled clock', 'a given \nfrequency', 'phase shift', 'duty cycle', 'The SceMiClockPort  macro', 'a controlled reset', 'whose duration', 'the specified number', 'cycles', 'the cclock', 'Figure', 'the symbol', 'the SceMiClockPort  macro', 'Verilog and VHDL source code', 'the empty macro wrappers', 'Formal Functional Specification', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)FIGURE', 'SceMiClockPort Macro\nNote', 'all', 'the clock parameters', 'default values', 'simpler systems', 'only one controlled \nclock', 'exactly one instance', 'a SceMiClockPort', 'the top level', 'no \nparameters', 'This', 'a single controlled clock', 'a ratio', 'a don’t care duty cycle', 'discussion', 'duty cycle', 'section', 'page', 'a phase shift', 'this clock’s frequency', 'that', 'the uclock', 'cycles', 'which', 'it', 'The SCE-MI infrastructure', 'a controlled clock', 'a 1/1 ratio', 'which', 'the \nhighest frequency controlled clock', 'the system', 'it', 'the user’s design', 'a \nSceMiClockPort', 'a 1/1 ratio', 'more complex systems', 'that', 'multiple clocks', 'a SceMiClockPort  instance', 'each required clock', 'The clock ratio', 'that', 'the instantiation parameters', 'the frequency', 'the clock', 'a ratio', 'the highest frequency controlled clock', 'the system', 'whose ratio', 'example', 'a cclock', 'a ratio', 'this', 'every 4 edges', 'the 1/1 \ncclock', 'only 1 edge', 'this cclock', 'This', 'a “divide-by-four” clock', '4.1.4.1 Parameters and Signals\nClockNum=1\nThis parameter', 'a unique number', 'a clock', 'that', 'it', 'other \nSceMiClockPort  instances', 'It', 'an error', 'the infrastructure linker', 'more than one \nSceMiClockPort  instances', 'the same ClockNum', 'The default', 'ClockNum', '1.Cclock\nCresetSceMiClockPort#(<ClockNum', 'RatioNumerator', 'RatioDenominator', 'DutyHi', 'Phase', 'ResetCycles', 'ClockName>Verilog Macro Wrapper', 'module SceMiClockPort(  //inputs                      outputs\n                                Cclock', '------------------------------', 'parameter ClockNum=1', 'parameter', 'RatioDenominator=1', 'parameter DutyHi=0,    DutyLo=100', 'parameter', 'endmodule\nVHDL Macro Wrapper', 'entity SceMiClockPort', '( ClockNum', 'RatioNumerator', 'RatioDenominator', '=', 'DutyHi', '=', 'DutyLo', 'Phase', '=', 'ResetCycles', 'port', 'Creset', 'end', 'architecture', 'EmptyMacro', 'SceMiClockPort', 'end;Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94RatioNumerator=1', 'These parameters', 'the numerator', 'denominator', 'this clock’s ratio', 'The \nnumerator', 'the number', 'cycles', 'the fastest 1/1 controlled clock', 'that', 'the number', 'cycles', '“this” clock', 'the denominator', 'example', 'a 5/2 clock', 'which', 'every 5 \ncycles', 'the 1/1 clock', 'that', 'only 2 cycles', 'this clock', 'The default clock ratio', 'DutyHi=0', 'DutyLo=100', 'Phase=0', 'The duty cycle', 'arbitrary integers', 'that', 'their sum', 'the sum', 'DutyHi', 'DutyLo', 'the number', 'units', 'a whole cycle', 'the clock', 'example', 'DutyHi=75', 'DutyLo=25', 'the high time', 'the clock', '100 units', '75%', 'the period', 'the low time', '25%', 'the period', 'The phase shift', 'the same units', 'that', 'the clock', '30%', 'its period', 'high transition', 'The default duty cycle', 'the macro wrappers', 'figure', 'a don’t care duty cycle', 'section', 'page', 'This parameter', 'how many cycles', 'this controlled clock', 'the controlled reset transitions', 'its initial value', 'ClockName', 'The clock port’s name', 'its instance label', 'This', 'the controlled clock signal', 'that', 'the DUT', 'the SCE-MI infrastructure', 'this macro', 'This clock’s characteristics', 'the parameters', 'instantiation', 'this macro', 'Creset', 'This', 'the controlled reset signal', 'that', 'the DUT', 'the SCE-MI infrastructure', 'this macro', '4.1.4.2 Deriving Clock Ratios', 'Frequencies', 'Another way', 'clock ratios', 'them', 'frequencies', 'all', 'the clock', 'the highest frequency', 'ratios', 'each ratio numerator', 'the highest frequency\n\x7fuse consistent units', 'all ratios', 'those units', 'them', 'integers', 'example', 'a system', '25Mhz', '10Mhz', '7.5 Mhz', '32kHz clocks', 'the ratios', 'the frequencies', 'integers', 'kHz', 'the unit', 'it', 'Functional Specification', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE', '7500\n100000 / 32\nUsers', 'who', 'frequencies', 'ratios', 'this simple technique', 'It', 'an implementor', 'the SCE-MI API', 'a tool', 'clock ratios', 'frequencies', 'Such a tool', 'a user', 'clock specifications', 'terms', 'frequencies', 'a set', 'equivalent ratios', 'addition', 'the tool', 'process waveforms', '.vcd files', 'the simulation', 'such a way', 'the defined clocks', 'the waveform display', 'the exact same frequencies', 'the user', '4.1.4.3 Don’t Care Duty Cycle', 'The default duty cycle', 'the macro wrappers', 'figure', 'a don’t care duty cycle', 'Users', 'they', 'posedges', 'the cclock', 'the negedge', 'This', 'a posedge', 'don’t care duty cycle', 'such a case', 'the \nDutyHi', 'The \nDutyLo', 'an arbitrary number', 'units', 'the Phase', 'a \npercentage', 'the whole period', 'i.e', 'DutyHi+DutyLo', 'example', 'a user', 'this combination', 'DutyHi=0', 'DutyLo=100', 'Phase=30', 'The user', '\x7fI', 'the duty cycle', 'I', 'the clock falls', 'the total period', '100 units', 'the phase', 'those \nunits', 'This', 'a phase shift', '30%', 'Another example', 'DutyLo=1', 'Phase=2', '\x7fI care', 'both intervals', 'the duty cycle', 'Duty cycle', '75%/25%', '\x7fPhase shift', '50%', 'period', '3+1 units', 'It', 'a negedge', 'don’t care duty cycle', 'this case', 'the DutyLo  parameter', 'the DutyHi', 'a positive number', 'example', 'DutyHi=1', 'DutyLo=0', 'Phase=0', 'It', '\x7fI', 'duty cycle', 'I', 'a clock falls', '\x7fPhase shift', 'any clock specification', 'it', 'an error', 'Phase', 'DutyHi', 'DutyLo', 'Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '944.1.4.4 Controlled Reset Semantics\nThe Creset  output', 'the SceMiClockPort  macro', 'the following semantics', '\x7fCreset', 'high one or more uclocks', 'It', 'a at least a minimum duration', 'the ResetCycles  parameter', 'the SceMiClockPort  macro', 'This duration', 'a number', 'edges', 'associated \nCclock', 'the reset duration', 'the Creset', 'the remaining duration', 'the simulation', 'Some applications', '2 edged resets', 'the beginning', 'a simulation', 'the reset duration', 'a minimum length', 'it', 'the \nResetCycles  parameter', 'any clock', 'other words', 'the controlled reset duration', 'all \nclocks', 'a mininum,\nmax', 'ResetCycles', 'cclock1', 'ResetCycles', 'cclock2', '\x7fSome implementations', 'a reset duration', 'that', 'the quantify', 'it', 'proper alignment', 'multiple cclocks', 'the edges', 'the controlled reset', 'section', 'page', 'the assertion', 'Creset', 'Cclock  edges', 'the state', 'the \nReadyForCclock  inputs', 'the SceMiClockControl  macros', 'the reset duration completes', 'the \nCclock', 'the ReadyForCclock  inputs', 'The operation', 'controlled reset', 'the default controlled reset behavior', 'the SceMiClockPort  macro', 'more sophisticated reset handling', 'it', 'a specially written reset transactor', 'that', 'lieu', 'the simpler controlled resets', 'that', 'the \nSceMiClockPort  instances', 'example', 'a software controlled reset', 'an application', 'a reset transactor', 'that', 'a special software', 'reset command', 'that', 'its message input port', '4.1.4.5 Multiple Cclock Alignment', 'all cclocks', 'the first rising uclock edge', 'the trailing edge', 'the \ncreset', 'This uclock edge', 'the point', 'alignment', 'cclocks', 'phases', 'this', 'rising edges', 'these clocks', 'the point', 'alignment', 'cclocks', 'phases', '> 0 edges', 'the point', 'alignment', 'Figure', 'an assortment', 'cclocks', 'the uclock', 'creset', 'It', 'those cclocks', 'the point', 'alignment', 'the diagram', 'cclock1', 'cclock2', 'cclock3', 'phases', 'rising edges', 'the \npoint', 'alignment', 'cclock4', 'the same duty cycle', 'cclock2', 'a phase shift', '50%', 'its rising edge', '2 uclocks', '1/2 cycle', 'the point', 'alignment', 'Its starting value', 'the point', 'alignment', 'cclock5', 'the same duty cycle', 'a phase', '50%', 'its rising edge', '1/2 cycle', 'the point', 'alignment', 'its starting value', 'the point', 'alignment', 'This', 'an  inverted phase', 'the phase', 'the initial duty cycle \ninterval', 'the starting value', 'the point', 'alignment', 'a 1.Formal Functional Specification', '56 of 94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)FIGURE', 'Multi-Clock Alignment\n4.1.5SceMiClockControl  Macro', 'every SceMiClockPort  macro instance', 'at least one counterpart SceMiClockControl  \nmacro instance', 'a transactor', 'The SceMiClockControl  macro', 'the means', 'which', 'a transactor', 'a DUT’s clock', 'which', 'the SCE-MI infrastructure', 'a transactor', 'which', 'uclock  cycles', 'that', 'clock', 'edges', 'Figure', 'the symbol', 'the \nSceMiClockControl  macro', 'Verilog and VHDL source \ncode', 'the empty macro wrappers.uclock\ncclock1creset\npoint', 'alignmentcclock2cclock3cclock4cclock5ratio', '2/1 duty cycle', '50/50 phase', '0\nratio', '2/1 duty cycle', '25/75 phase', '0\nratio', '2/1 duty cycle', '75/25 phase', '0\nratio', '2/1 duty cycle', '25/75 phase', '50\nratio', '2/1 duty cycle', '75/25 phase', '50Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94FIGURE', 'SceMiClockControl Macro', 'each SceMiClockPort', 'the system', 'at least one corresponding SceMiClockControl  macro', 'one or more transactors', 'addition', 'uncontrolled clocks', 'resets', 'this macro', 'handshakes', 'that', 'explicit control', 'both edges', 'the generated cclock', '4.1.5.1 Parameters and Signals\nClockNum=1\nThis', 'the only parameter', 'the SceMiClockControl  macro', 'This parameter', 'a \nSceMiClockControl  instance', 'its counterpart', 'SceMiClockPort  instance', 'that', 'the top \nlevel', 'The default', 'ClockNum', 'each instance', 'SceMiClockControl', 'exactly one instance', 'the \nsystem', 'SceMiClockPort', 'each instance', 'SceMiClockPort', 'one or more \ninstances', 'SceMiClockControl', 'A SceMiClockControl  instance', 'the SceMiClockPort', 'it', 'that', 'its associated \nSceMiClockPort', 'Uclock', 'This', 'the uncontrolled clock signal', 'the SCE-MI infrastructure', 'Ureset', 'This', 'the uncontrolled reset', 'the SCE-MI infrastructure', 'This signal', 'the Uclock\nUresetSceMiClockControl#<ClockNum> c1Verilog Macro Wrapper', 'module SceMiClockControl', 'outputs\n                                 Uclock', 'ReadyForCclock', 'CclockEnabled', 'ReadyForCclockNegEdge', 'ClockNum', 'output Uclock', 'input ReadyForCclock', 'output CclockEnabled', 'input ReadyForCclockNegEdge', 'output', 'endmodule\nVHDL Macro Wrapper', 'entity SceMiClockControl', '( ClockNum', 'Uclock', 'Ureset', 'out std_logic', 'ReadyForCclock', 'std_logic', 'CclockEnabled', 'end', 'architecture', 'EmptyMacro', 'SceMiClockControl', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)beginning', 'simulated time', 'transitions', 'an arbitrary (implementation dependent) number', 'uclocks', 'It', 'the transactor', 'The uncontrolled reset', 'a duration', 'that', 'the longest controlled reset', '( Creset  \noutput', 'each SceMiClockPort  - see section', 'page', 'uclocks', 'This', 'all DUTs', 'transactors', 'an initialized state', 'the first uclock', 'expiration', 'the last controlled reset', 'ReadyForCclock', 'This input', 'the macro', 'the SCE-MI infrastructure', 'that', 'a transactor', 'its associated DUT clock', 'advance', 'The transactor', 'this signal', 'it', 'operations', 'which', 'the DUT', 'the most useful applications', 'this feature', 'complex algorithmic operations', 'the data content', 'a transaction', 'it', 'the DUT', 'If this input', 'the \nSceMiClockControl  instances', 'that', 'a given controlled clock', 'the next posedge', 'that cclock', 'a ReadyForCclock', 'a \nslower clock', 'the infrastructure', 'other faster clocks', 'that', 'the last possible uclock', 'the edge', 'other words', 'that edge', 'time', 'faster clock activity', 'the last moment', 'the edge', 'all posedges', 'all controlled clocks', 'negedge control', 'if this input', 'the SceMiClockControl  instances', 'that', 'a given controlled clock', 'the next negedge', 'that clock', 'a \nReadyForCclockNegEdge', 'a slower clock', 'the infrastructure', 'must not prematurely \ndisable negedges', 'other faster clocks', 'that', 'the last possible uclock', 'the edge', 'other words', 'that edge', 'time', 'faster clock activity', 'the last moment', 'the edge', 'all negedges', 'all controlled clocks', 'Support', 'explicit negedge control', 'it', 'transactor logic', 'that', 'posedge clocks', 'the next negedge', 'a clock', 'it', 'the next posedge', 'a clock', 'Transactors', 'that', 'controlling negedges', 'Figure', 'page', 'this signal', 'CclockEnabled', 'This macro output', 'the transactor', 'the next posedge', 'uclock', 'a posedge', 'the controlled clock', 'The transactor', 'this signal', 'a DUT clock edge', 'The SCE-MI infrastructure', 'the \nReadyForCclock', 'all the transactors', 'CclockEnabled', 'they', 'This', 'any transactor', 'all the clocks', 'the system', '-asserting \nReadyForCclock', 'Note', 'a negedge', 'don’t care duty cycle', '4.1.4.3', 'page', 'the user', 'the posedge', 'the CclockEnabled', 'This signal', 'CclockEnabled', 'it', 'the negedge', 'a controlled clock', 'the next posedge', 'the uclock', 'This', 'transactors', 'that', 'DUTs', 'Transactors', 'that', 'negedge control', 'this signal', 'Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', 'a posedge', 'don’t care duty cycle', '4.1.4.3', 'page', 'the user', 'the negedge', '4.2 Infrastructure Linkage\nThe contents', 'this section', 'the concern', 'the infrastructure implementor  class', 'user', 'section', 'page', 'End users', 'transactor implementors', 'the \noperations', 'herein', 'the  infrastructure linker', 'section', 'page', 'infrastructure linkage', 'the process', 'that', 'the user’s \nbridge netlist', 'the hardware side', 'it', 'a form', 'the emulator', 'This', 'the interface macros', 'infrastructure components', 'that', 'the existing structure', 'parameter information', 'that', 'the hardware side', 'the software side', 'order', 'this information', 'the infrastructure linker', 'the netlist', 'searches', 'instances', 'the SCE-MI hardware side macros', 'the parameter values', 'those instances', 'a parameters file', 'that', 'software side initialization', 'message port proxies', 'the hardware side', 'It', 'the infrastructure linker', 'options', 'the form', 'switches', 'an input configuration file', 'that', 'a user', 'implementation specific options', 'A well crafted infrastructure linker', 'ease', 'use', 'the end user', 'a suitable set', 'default values', 'implementation specific parameters', 'all', 'these parameters', '4.2.1 Parameters', 'The following set', 'parameters', 'the minimum set', 'that', 'all implementations', 'the \nSCE-MI standard', 'Specific implementations', 'additional parameters', 'Number', 'Transactors', 'The number', 'transactors', 'the number', 'modules', 'the user’s design', 'that', 'SceMiClockControl  macros', 'It', 'that', 'a transactor', 'at least one SceMiClockControl  instance', 'it', 'Transactor Name', 'The transactor name', 'the hierarchical path name', 'an instance', 'a module', 'that', 'a transactor', 'the above definition', 'multiple instances', 'a given type', 'transactor', 'they', 'their instance path names', 'The syntax', 'the path name', 'that', 'the HDL language', 'that', 'the bridge netlist', 'Message Input', 'Output Channels', 'the number', 'message input', 'output ports', 'instances', 'the \nSceMiMessageInPort', 'SceMiMessageOutPort  macros', 'Port Name', 'The name', 'each port', 'the relative instance path name', 'that port', 'its containing transactor module', 'example', 'the full path name', 'a message input port macro instance', 'Verilog notation', 'Bridge.u1.tx1.ip1', 'the transactor name', 'Bridge.u1.tx1', 'the port \nname', 'an output port', 'one level', 'the input port', 'its full path', 'Formal Functional Specification', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)Bridge.u1.tx1.m1.op1', 'its port name', 'm1.op1', 'it', 'a level', 'the \ntransactor root level', 'The full pathname', 'a port', 'the transactor name', 'the port name', 'a hierarchical separator', 'Message Input', 'Output Port Width', 'The width', 'a port', 'bits', 'the PortWidth  parameter', 'the message port \nmacro', 'This width', 'a significantly larger value', 'the point', 'instantiation', 'Message Output Port Priority', 'The priority', 'a message output port', 'the \nPortPrority  parameter', 'the \nSceMiMessageOutPort  macro', 'certain implementations', 'it', 'a “hint', 'the \ninfrastructure linker', 'output ports', 'they', 'message data', 'the same uclock', 'a number', '“physical message channels', 'that', 'the limitless number', 'virtual message channels', 'some users', 'this', 'those', 'who', 'the default value', 'the instantiation statement', 'some exceptions', 'the output port priority', 'the semantics', 'the UNIX \nnice  \ncommand', 'priority values', '< 20\n\x7fDefault priority value', 'the number', 'the higher the priority\n\x7fOutput port priority', 'internal use', 'the infrastructure\n\x7fFor message output ports', 'the same priority number', 'their relative priority', 'strictly an artifact', 'infrastructure linker implementation\nNumber', 'Controlled Clocks', 'This number', 'all instances', 'the \nSceMiClockPort  macro', 'Controlled Clock Name', 'The name', 'a controlled clock', 'the instance label', 'not path name', 'its \nSceMiClockPort  instance', 'the top level', 'the user’s bridge netlist', 'all instances', 'SceMiClockPort', 'Controlled Clock Ratio', 'The clock ratio', 'the RatioNumerator', 'RatioDenominator  parameters', 'the \nSceMiClockPort  macro', 'The RatioNumerator', 'the number', 'cycles', 'the fastest 1/1 \ncontrolled clock', 'that', 'the number', 'cycles', '“this” clock', 'RatioDenominator', 'page', 'more details', 'the clock ratio', 'Controlled Clock Duty Cycle', 'Phase\nThe duty cycle', 'the DutyHi', 'Phase  parameters', 'the SceMiClockPort  \nmacro', 'The duty cycle', 'a pair', 'arbitrary integers', 'DutyHi', 'DutyLo', 'the sum', 'DutyHi', 'DutyLo', 'the number', 'units', 'a period', 'the clock', 'DutyHi', 'the number', 'units', 'high time', 'DutyLo', 'units', 'low time', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', 'Phase', 'the number', 'units', 'the clock', 'phase', 'It', 'a user', 'a don’t care duty cycle', 'page', 'more \ndetails', 'the duty cycle', 'phase', 'Controlled Reset Cycles\nThe duration', 'a controlled reset', 'terms', 'cclock cycles', 'the \nResetCycles  parameter', 'the ClockPort  macro', '4.2.1.1 Parameter File', 'A parameter file', 'the infrastructure linker', 'the user', 'supplied netlist', 'all the parameters', 'the previous section', 'The parameter file', 'the software side', 'the SCE-MI infrastructure', 'binding operations', 'that', 'software model construction', 'it', 'content', 'syntax', 'the parameter file', 'specific \nimplementors', 'the SCE-MI', 'The content', 'itself', 'the software side', 'a parameter access API', 'the infrastructure implementor', 'that', 'the specification', '4.3.4', 'page', 'This access block', 'access', 'parameters', 'the SCE-MI', 'implementation', 'named parameters', 'All SCE-MI required parameters', 'their values', 'the \ninfrastructure linker', 'the user supplied netlist', 'Implementation specific parameters', 'read-write', 'the implementation', '4.3 Software Side Interface - C++ API', 'access', 'the hardware side', 'the SCE-MI', 'the software side', 'the SCE-MI software side infrastructure', 'port proxies', 'each message port', 'the hardware side', 'Part', 'the SCE-MI', 'the SCE-MI', 'the parameter file', 'that', 'the infrastructure linker', 'The information', 'the parameter file', 'the SCE-MI software side', 'the means', 'rendezvous', 'the hardware side', 'response', 'port binding calls', 'the user’s software models', 'port binding', 'name association', 'transactor names', 'port names', 'clock names', 'properties', 'the parameter file', 'little significance', 'the \nbinding process', 'this information', 'applications', 'that', 'it', 'the parameter file API', 'page 70).Formal Functional Specification', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)Access', 'the software side', 'the interface', 'a number', 'C++ classes', 'that', 'class SceMiEC\nclass SceMiclass SceMiParameters\nclass SceMiMessageData\nclass', 'Primitive Data Types', 'addition', 'C data types', 'integer', 'const char', 'the arguments', 'the \nmethods', 'the API', 'unsigned data types', 'specific width', 'these', 'the following data types', 'the header files', 'the API', 'typedef', 'unsigned int SceMiU32', 'long long SceMiU64', '4.3.2 Miscellaneous Interface Issues\n4.3.2.1 class  SceMiEC  - Error Handling\nNote', 'the calls', 'the interface', 'an SceMiEC * ec', 'the last argument', 'the usage', 'this argument', 'all methods', 'error handling semantics', 'detail', 'this section', 'each method', 'the API', 'Error handling', 'SCE-MI', 'a traditional style', 'error \nhandling', 'an error status', 'each call', 'a callback based scheme', 'a registered error handler', 'an error', 'enum SceMiErrorType {\nSceMiOK', 'struct SceMiEC', '{\nconst char *Culprit;const char', 'Message', 'SceMiErrorType Type', 'int', 'I', 'typedef', 'context', 'SceMiErrorHandler errorHandler', 'context', 'This method', 'an optional error handler', 'the SCE-MI', 'that', 'the event', 'an \nerror', 'any SCE-MI operation', 'an error', 'the following procedure', 'the SceMiEC *  pointer', 'the function', 'the values', 'the SceMiEC  \nstructure', 'the errant call', 'appropriate information', 'the error', 'control', 'the caller', 'This', 'a traditional  approach', 'error', 'Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94such', 'one', 'C applications', 'It', 'the application code', 'the error status', 'each call', 'the API', 'appropriate abortive action', 'an error', 'the SceMiEC * pointer', 'the function', 'NULL', 'nothing', 'the \ndefault', 'NULL', 'each API function', 'an error handler', 'error handler', 'the errant API call', 'The error handler', 'an internally allocated \nSceMiEC  \nstructure', 'the error information', 'this error handler callback approach', 'the \nuser-defined code', 'the handler', 'abort operations', 'it', 'a C++ application', 'a catch', 'mechanism', 'A C application', 'the  abort', '()  \nfunction', 'the error information', 'the SceMiEC *  pointer', 'the function', 'NULL', 'no error handler', 'an \nSceMiEC  structure', 'a default error handler', 'The default error handler', 'a message', 'the console', 'a log file', 'It', 'this error', 'facility', 'irrecoverable errors', 'This', 'an error', 'the SceMiEC  object', 'a handler', 'a return object', 'no \npoint', 'the co-modeling session', 'Any calls', 'that', 'a recoverable error status', 'that status', 'a separate, dedicated return argument', 'A second point', 'the \nMessage  text', 'the error structure', 'the nature', 'the error', 'the console', 'code', 'The \nCulprit  text', 'the name', 'the errant API function', 'the message', 'that', 'every API call', 'either a success', 'fatal error status', 'the detailed nature', 'errors', 'the returned error message', 'the SceMiErrorType  enum', 'only two \nvalues', 'success', '( SceMiOK', 'failure', 'The SceMiEC::Type', 'API \nfunctions', 'the caller', 'these two values', 'the call', 'a success', 'a failure', 'the \nSceMiEC::Type', 'an error handler', 'definition', 'the \nvalue', 'the error handler', 'the first place', 'The optional Id field', 'different major error types', 'each distinct \nerror message', 'a unique integer identifier', '4.3.2.2 class  SceMiIC  - Informational Status', 'Warning Handling', 'Info Handling', 'The SCE-MI', 'a means', 'conveying warnings', 'informational status messages', 'the \napplication', 'Formal Functional Specification', '64 of 94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)Like error handling', 'info handling', 'callback functions', 'a special structure', 'that', 'the warning information', 'SceMiInfo', 'SceMiNonFatalError', 'struct', 'SceMiIC', 'const char', 'char', 'Message', 'SceMiInfoType Type', 'int', 'typedef', '*SceMiInfoHandler)(void *context', 'SceMiInfoHandler infoHandler', 'context', 'This method', 'an optional info handler', 'the SCE-MI', 'that', 'the event', 'warning', 'any SCE-MI operation', 'a warning', 'an informational message', 'the \nfollowing procedure', 'an info handler', 'that info handler', 'the API call', 'that', 'the warning', 'The info handler', 'an internally allocated \nSceMiIC  structure', 'the warning information', 'this info handler callback approach', 'the user-defined code', 'the handler', 'the warning', 'the user', 'a manner', 'that', 'that application', 'example', 'it', 'the console', 'a file', 'both', 'no info handler', 'a SceMiIC  structure', 'a default', 'implementation', 'The default error handler', 'a message', 'the console', 'a log file', 'an implementation specific format', 'It', 'the \nMessage  text', 'the error structure', 'the \nnature', 'the info message', 'the console', 'the application’s warning', 'info', 'code', 'The \nOriginator  text', 'the name', 'the API function', 'that', 'the \nmessage', 'the message', 'that', 'The SceMiInfoType', 'an extra piece', 'information', 'that', 'the message', 'a warning', 'just \nsome informational status', 'An additional category', 'SceMiNonFatalError', 'all \nerror conditions', 'a fatal error', 'The final fatal error message', 'a \nSceMiEC  structure', 'an abort sequence', 'section', 'page', 'addition', 'the info message', 'a unique identifying', 'integer', 'the \nId field', 'memory allocation semantics', 'the SCE-MI API', 'the following rules', 'the user', 'the user’ s responsibility', 'Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', 'the API', 'the API’ s responsibility', 'this', 'any object', 'SceMiMessageData', 'that', 'the application', 'object', 'the application', 'it', 'use', 'Some objects', 'SceMiMessage[In/Out]PortProxy  objects', 'the API', 'the \napplication', 'pointers', 'Those objects', 'the application', 'they', 'the entire interface', 'the call', 'SceMi::ShutDown', 'non-null SceMiEC  structures', 'that', 'functions', 'the application', 'a NULL SceMiEC  pointer', 'a function', 'an error', 'the \nAPI', 'the structure', 'the error handler', 'it', '4.3.3 class SceMi - SCE-MI Software Side Interface', 'This', 'the singleton object', 'that', 'the software side', 'the SCE-MI infrastructure', 'itself', 'Operations', 'the interface', 'methods', 'this class', '4.3.3.1 Version Discovery\nstatic int\nSceMi::Version', '(\nconst char', 'This method', 'an application', 'queries', 'the version', 'the SCE-MI', 'that', 'it', 'its best chance', 'a version', 'it', 'A series', 'calls', 'this function', 'a compatible version', 'each call', 'the application', 'version numbers', 'those', 'it', 'the SCE-MI', 'a version handle', 'that', 'the queried version', 'This handle', 'the initialization call', 'the next section', 'the given version string', 'version', 'the SCE-MI', 'the application', 'a -1', 'this point', 'the application', 'the option', 'a fatal error', 'other versions', 'it', 'This process', 'mutual discovery', 'This argument', 'the form', '<majorNum>.<majorNum>.<minorNum', 'the \napplication code', 'the header file', 'a particular SCE-MI installation', '4.3.3.2 Initialization\nstatic SceMi *\nSceMi::Init', 'int version', 'SceMiParameters', 'parameters', 'SceMiEC', 'ec', 'NULL', 'This call', 'the constructor', 'the SCE-MI interface', 'It', 'access', 'all the other global methods', 'the \ninterface', 'The return argument', 'a pointer', 'an object', 'class SceMi', 'which', 'all other methods', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)version', 'This input argument', 'the version number', 'the', 'Version() method', 'the \nprevious section', 'the version number', 'the SCE-MI infrastructure', 'parameters', 'This input argument', 'a pointer', 'the parameter block object', 'class SceMiParameters', 'that', 'the parameter file', 'the infrastructure linker', 'section 4.3.4', 'page', 'a description', 'this object', '4.3.3.3 Shutdown\nstatic void\nSceMi::Shutdown', 'SceMi', 'sceMi', 'SceMiEC', 'NULL', 'This', 'the destructor', 'the SCE-MI infrastructure object', 'that', 'connection', 'the \ninterface', 'This call', 'the means', 'which', 'graceful decoupling', 'the hardware side', 'the software side', 'It', 'this call', '(\nClose', 'callbacks', 'the application', '4.3.3.4 Message Input Port Proxy Binding\nSceMiMessageInPortProxy', 'SceMi::BindMessageInPort', 'const char', 'transactorName', ',\nconst char', 'const', 'SceMiMessageInPortBinding', 'NULL', 'This call', 'the list', 'input ports', 'the parameter file', 'that', 'infrastructure linkage', 'whose names', 'the transactorName  and portName  arguments', 'an object', 'class SceMiMessageInPortProxy', 'the proxy interface', 'that port', 'the pointer', 'the constructed object', 'the caller', 'that port', 'It', 'an error', 'no match', 'transactorName', 'These arguments', 'a specific message input port', 'a specific transactor', 'the hardware side', 'which', 'the caller', 'These names', 'the path names', 'page', 'the syntax', 'the HDL language', 'that', 'the hardware side bridge netlist', 'The binding argument', 'a pointer', 'an object', 'struct', 'Close)(void', 'whose data members', 'the following', 'Formal Functional Specification\nFunctional Requirements Specification', 'SCE-MI', '94Context', 'The application', 'this pointer', 'any purposes', 'it', 'Neither class', 'SceMi', 'class \nSceMiMessageInPortProxy', 'this pointer', 'it', 'it', 'either the \nIsReady', 'Close', 'callbacks', 'This', 'the function pointer', 'the callback', 'that', 'an input ready notification', 'the hardware side', 'This call signals', 'it', 'a new message', 'the input port', 'this pointer', 'a NULL', 'the SCE-MI', 'this port', 'input ready notification', 'this particular channel', 'page', 'a detailed description', 'the input ready callback', 'This', 'a termination callback function pointer', 'It', 'destruction', 'the SCE-MI', 'This pointer', 'NULL', '4.3.3.5 Message Output Port Proxy Binding', 'SceMi::BindMessageOutPort', '(\nconst char', 'transactorName', ',\nconst char', 'SceMiEC', 'This call', 'the list', 'output ports', 'the parameter file', 'that', 'infrastructure linkage', 'whose names', 'the transactorName  and portName  argument', 'an object', 'class SceMiMessageOutPortProxy', 'the proxy interface', 'that port', 'the handle', 'the constructed object', 'the caller', 'that port', 'It', 'an error', 'no match', 'transactorName', 'These arguments', 'a specific message output port', 'a specific transactor', 'the hardware side', 'which', 'the caller', 'These names', 'the path names', 'page', 'the syntax', 'the HDL language', 'that', 'the hardware side bridge netlist', 'The binding argument', 'a pointer', 'an object', 'Receive', 'context', 'const SceMiMessageData', 'data', 'Close)(void', 'whose data members', 'Context\nThe application', 'this pointer', 'any purposes', 'it', 'Neither class', 'SceMi', 'class', 'Formal Functional Specification', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'this pointer', 'it', 'it', 'either \nthe IsReady', 'Close', 'callbacks', 'Receive', 'This', 'the function pointer', 'the receive callback', 'that', 'an output message', 'the port', 'This callback', 'every output port proxy', 'it', 'an error', 'this function pointer', 'a NULL', 'page', 'more information', 'callbacks process output messages', 'This', 'a termination callback function pointer', 'It', 'destruction', 'the SCE-MI', 'This pointer', 'NULL', '4.3.3.6 Service Loop\ntypedef int', 'SceMiServiceLoopHandler', 'void *context', 'bool', 'int\nSceMi::ServiceLoop', 'SceMiServiceLoopHandler', 'g', '=', 'NULL', 'NULL', '=', 'NULL', 'This', 'the main workhorse method', 'that', 'CPU processing time', 'the SCE-MI', 'threaded and multi-threaded environments', 'this method', 'the SCE-MI', 'an opportunity', 'all its port proxies', 'messages', 'messages', 'that', 'It', 'this call', 'the SCE-MI', 'any input', 'callbacks', 'that', 'The underlying transport mechanism', 'that', 'the port proxies', 'a relatively timely manner', 'messages', 'the input or output port proxies', 'these messages', 'a call', 'ServiceLoop', 'it', 'applications', 'this function', 'The return argument', 'the number', 'output messages', 'that', 'the last call', 'ServiceLoop', 'g', 'NULL', 'transfers', 'them', 'g', 'a loop', 'transfers', 'g', 'g', 'the loop', 'g', 'an indication', 'at least one message', 'the pending flag', 'The context  argument', 'g', 'the pointer', 'which', 'the context  \nargument', 'ServiceLoop', 'context\nContext argument', 'the g() function', 'the g() Function', 'Each Call', 'ServiceLoop', 'several different ways', 'the g() function', 'Some applications', 'a return', 'the', 'ServiceLoop', 'each \nmessage', 'The  ::ServiceLoop() call', 'a separate call', 'the  g', '()  Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94function', 'each message', 'fact', 'it', 'ServiceLoop', 'the application', 'message', 'the  g()  function', 'even if all g', 'bool', 'the application', 'a return', ':ServiceLoop', 'each processed message', 'this case', 'the  ::ServiceLoop', 'it', 'no message', '=', ':ServiceLoop', 'this case', 'No \nmessages', '1 message', 'the g() Function', ':ServiceLoop', 'Exactly 1 Message\nAn application', 'the g() function', 'ServiceLoop', 'a blocking mode', 'its \ndefault polling mode', 'The g() function', ':ServiceLoop', 'it', '1 message', 'the message', 'it', 'This', 'use', 'the pending  argument', 'the g() function', 'This argument', 'a message', 'it', 'this case', 'int g', 'bool', '=', 'What', 'this', 'it', 'a message', 'the first message', 'the  g', 'Block', ':ServiceLoop', 'At Least 1 Message', 'the application', ':ServiceLoop', 'at least 1 message', 'all the currently pending messages', 'Formal Functional Specification', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)To', 'this', 'the application', 'a haveProcessedAtLeast1Message  flag', 'int haveProcessedAtLeast1Message', 'ServiceLoop', 'the  g() function', "this flag's address", 'the context', 'haveProcessedAtLeast1Message', 'g', 'the  g() function', 'bool', 'int', '=', '=', 'no more messages', 'loop', 'least//', 'one previous message', 'the first message', 'haveProcessedAtLeast1Message', 'conclusion', 'precisely what type', 'operation', '::ServiceLoop', 'the  g() \nfunction', '4.3.4 class SceMiParameters  - Parameter Access', 'This class', 'a generic API', 'that', 'application code', 'page', 'It', 'the contents', 'the parameter file', 'that', 'infrastructure linkage', 'It', 'accessors', 'that', 'the reading', 'parameters', 'their values', 'All SCE-MI required parameters', 'their values', 'the infrastructure linker', 'the user supplied netlist', 'Implementation specific parameters', 'read-write', 'the implementation', 'All parameters', 'a \nSceMiParameters  object', 'that object', 'the SceMi::Init', 'the interface', 'page', 'Overriding \nparameters', 'no effect', '4.3.4.1 Parameter Set', 'the format', 'the parameter file', 'the set', 'parameters', 'the \nSCE-API', 'the methods', 'them', 'the specifications', 'this section', 'purposes', 'access', 'the parameter', 'a database', 'attributed objects', 'each object instance', 'a set', 'attributes', 'name/value pairs', 'zero or more instances', 'each object kind', 'The API', 'a simple accessor', 'the number', 'objects', 'a given kind', 'accessors', 'reading or overriding attribute values', 'specific objects', 'The objects', 'the database', 'the set', 'necessary interfacing components', 'that', 'the SCE-MI infrastructure', 'the application', 'example', 'a distinct object instance', 'each message port', 'a distinct object instance', 'each defined clock', 'the system', 'Attributes', 'each', 'the objects', 'the parameters', 'that', 'the dimensions', 'constitution', 'the interface components', 'a particular application', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', 'example', 'a system', 'that', '1 input port', '2 output ports', '2 distinct clocks', '5 objects', 'each port object', 'name', 'width attributes', 'each clock object', 'ratio', 'duty cycle attributes', 'These objects', 'their attributes', 'the interfacing requirements', 'that application', 'the SCE-MI infrastructure', 'The following table', 'predefined set', 'objects', 'attributes', 'the SCE-MI', 'Additional objects', 'attributes', 'implementations', 'example', 'a single, implementation specific object', 'the entire SCE-MI infrastructure facility', 'itself', 'The attributes', 'this singleton object', 'the set', 'implementation specific parameters', 'the user', 'more details', 'attribute meanings', 'page', 'simplicity', 'values', 'integer', 'string', 'values', 'More complex data types', 'the application code', 'string values', 'Each attribute definition', 'each object kind', 'a specific value type', '4.3.4.2 Parameter Set Semantics', 'the accessors', 'the \nSceMiParameters  class', 'the information', 'the above table', 'other implied parameters', 'the application', 'some', 'the implied parameters', 'they', 'Object Kind Attribute NameAttribute \nValue Type Meaning\nMessageInPort TransactorName String Name', 'the transactor', 'the message \ninput port', 'PortName String Name', 'the message input port', 'PortWidth Integer Width', 'the message input port', 'bits', 'MessageOutPort TransactorName String Name', 'the transactor', 'the message \noutput port', 'PortName String Name', 'the message output port', 'PortWidth Integer Width', 'the message output port', 'bits', 'PortPriority Integer Priority', 'the message output port', 'Clock ClockName String Name', 'the clock', 'RatioNumerator Integer Numerator', '(“fast” clock cycles', 'clock ratio', 'RatioDenominator Integer Denominator', '(“this” clock cycles', 'clock \nratio', 'Integer High cycle percentage', 'duty cycle', 'DutyLo Integer Low cycle percentage', 'duty cycle', 'Phase Integer Phase shift', 'percentage', 'duty cycle', 'ResetCycles Integer Number', 'controlled clock cycles', 'reset', 'ClockBinding TransactorName String Name', 'the transactor', 'that', 'the \ncontrol', 'this clock', 'ClockName String Name', 'the clock', 'this transactor', 'con-\ntrol', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', '(SCE-MI)\x7fClockBinding  objects', 'the total number', 'transactor - clock control macro combinations', 'the ClockBinding  objects', 'one', 'the number', 'distinct contributors', 'the control', 'a given clock', 'the number', 'distinct transactors', 'the system', '\x7fThe number', 'transactors', 'the system', 'the number', 'distinct \nTransactorName', 'the ClockBinding  objects', '\x7fThe number', 'controlled clocks', 'the number', 'Clock  objects', 'the \n::NumberOfObjects', ')  accessor', '\x7fThe number', 'input and output ports', 'the number', 'MessageInPort', 'MessageOutPort  objects', 'addition', 'the following semantics', 'the parameter set', '\x7fTransactor names', 'absolute hierarchical path names', 'the syntax', 'the HDL \nlanguage', 'the bridge netlist', 'names', 'relative hierarchical path names', 'the enclosing transactor', 'the syntax', 'the HDL language', 'that', 'the bridge netlist', '\x7fClock names', 'identifiers', 'path names', 'identifier naming syntax', 'the HDL language', 'that', 'the bridge netlist', '4.3.4.3 Constructor\nSceMiParameters::SceMiParameters', 'const char', 'SceMiEC', 'The constructor', 'an object', 'all the default values', 'parameters', 'them', 'any settings', 'it', 'the specified parameter file', 'All parameters', 'the \nuser', 'default values', 'parameters', 'This', 'the name', 'the file', 'the infrastructure linker', 'that', 'all the parameters', 'the user’s hardware side netlist', 'This name', 'either a full pathname', 'a file', 'the local directory', '4.3.4.4 Destructor\nSceMiParameters::~SceMiParameters', 'This', 'the destructor', 'the parameters', 'Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '944.3.4.5  Accessors\nunsigned int\nSceMiParameters::NumberOfObjects', 'const char', 'objectKind', 'SceMiEC', 'NULL', 'const', 'This accessor', 'the number', 'instances', 'objects', 'the specified objectKind  name', 'const char', 'unsigned int index', 'const char', '*ec', 'const char', '(\nconst char', 'unsigned int index', 'const char', 'NULL', 'These two accessors', 'an integer or string attribute value', 'const char', 'objectKind', 'unsigned int index', 'const char', 'int value', 'SceMiEC', 'void\nSceMiParameters::OverrideAttributeStringValue', 'const char', 'objectKind', 'unsigned int index', 'const char', 'const char', 'value', 'SceMiEC', 'These two accessors', 'an integer or string attribute value', 'It', 'an error', 'any', 'the object attributes', 'the table', 'section', 'page', 'any implementation specific attributes', 'read', 'The following argument descriptions', 'all the accessors', 'Name', 'the kind', 'object', 'which', 'an attribute value', 'It', 'an error', 'any', 'the accessors', 'index\nIndex', 'the instance', 'the object', 'which', 'an attribute value', 'It', 'an error', 'the number', 'the', ')  accessor', 'Formal Functional Specification', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', '(SCE-MI)attributeName\nName', 'the attribute', 'whose value', 'It', 'an error', 'the \nattributeName', 'the attributes', 'value', 'value', 'the attribute', 'Two overloaded \nvariants', 'each accessor', 'string values', 'integer values', 'Message Data', 'the vector', 'message data', 'that', 'a \nSceMiMessageInPortProxy', 'the software side', 'its associated SceMiMessageOutPort', 'the \nhardware side', 'a SceMiMessageOutPort', 'the hardware side', 'its associated \nSceMiMessageOutPortProxy', 'the software side', 'The message data payload', 'a fixed \nlength array', 'SceMiU32  data words', 'the bit vector', 'the hardware side message port', 'example', 'the message port', 'a width', '72 bits', 'the following diagram', 'the those bits', 'the data array', 'the \nSceMiMessageData  object', '4.3.5.1 Constructor\nSceMiMessageData::SceMiMessageData', 'const SceMiMessageInPortProxy', 'messageInPortProxy', 'SceMiEC', '*ec', 'NULL', 'a message data object', 'whose size', 'the width', 'the specified input port', 'The \nconstructed message data object', 'sends', 'that port', 'another', 'identical size', 'an error', '4.3.5.2 Destructor\nSceMiMessageData::~SceMiMessageData()\nDestruct', 'the object', 'free data array.31', '33,32', '65,64SceMiMessageData word', 'SceMiMessageData word', '1\nSceMiMessageData word', 'Out]Port', 'Message[] bits', 'Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '944.3.5.3 Accessors', 'unsigned int\nSceMiMessageData::WidthInBits', '() const', 'the width', 'the message', 'terms', 'number', 'bits', 'unsigned intSceMiMessageData::WidthInWords', ') const', 'the size', 'the data array', 'terms', 'number', 'SceMiU32  words', 'voidSceMiMessageData::Set', 'unsigned int i', 'SceMiU32 word', 'SceMiEC *ec = NULL', 'Set word element', 'i', 'array', 'word', '( unsigned int i', 'SceMiEC *ec = NULL', 'Set bit element', 'i', 'the message vector', 'bit', 'It', 'an error', '=', 'void\nSceMiMessageData::SetBitRange', 'unsigned int i', 'unsigned int range', 'SceMiU32 bits', 'SceMiEC *ec = NULL', 'Set range  bit elements', 'whose LSB', 'bit element', 'i', 'the message vector', 'the value', 'bits', 'It', 'an error', 'i+range', 'SceMiU32\nSceMiMessageData::Get', 'SceMiEC *ec = NULL', 'the word', 'slot', 'i', 'the array', 'It', 'an error', 'WidthInWords', 'intSceMiMessageData::GetBit', 'unsigned int i', 'SceMiEC *ec = NULL', 'const', 'the value', 'bit element', 'i', 'the message vector', 'It', 'an error', 'SceMiU32SceMiMessageData::GetBitRange', '( unsigned int i', 'unsigned int range', 'SceMiEC *ec = NULL', 'the value', 'range  bit elements', 'whose LSB', 'i', 'the message vector', 'It', 'an error', 'i+range', '=', 'The SCE-MI', 'a feature', 'cycle stamping', 'Each output message', 'the software side', 'the number', 'cycles', 'the 1/1 controlled clock', 'the beginning', 'emulation time', 'This', 'a convenient way', 'applications', 'track', 'elapsed cycles', 'their respective transactors', 'the simulation', 'The returned value', 'an absolute, 64-bit unsigned quantity', 'Formal Functional Specification', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', '(SCE-MI)4.3.6 class SceMiMessageInPortProxy', 'The class SceMiMessageInPortProxy', 'the application', 'a proxy interface', 'a transactor \nmessage input port', 'Input Messages\nvoid\nSceMiMessageInPortProxy::Send', '(\nconst SceMiMessageData', 'data', 'SceMiEC *ec', 'NULL', 'This method', 'a message', 'the message input channel', 'This message', 'the hardware side', 'a bit vector', 'the transactor', 'the SceMiMessageInPort  macro', '4.1.2', 'page', 'instance', 'this proxy', 'data\nMessage data object', 'the message', 'Replacing Port Binding\nvoid ReplaceBinding( \nconst SceMiMessageInPortBinding* binding,\nSceMiEC* ec', 'NULL', 'This method', 'the SceMiMessageInPortBinding  object', 'the \nSceMi::BindMessageInPortProxy', 'that', 'this port proxy object', '4.3.3.4', 'page', 'This', 'contexts', 'ready callback functions', 'the input message port proxy', 'binding\nNew callback and context information', 'this message input port proxy', '4.3.6.3 Accessors\nconst char', 'SceMiMessageInPortProxy::TransactorName', ') const', 'This method', 'the name', 'the transactor', 'that', 'the port', 'This', 'the absolute \nhierarchical path name', 'the transactor instance', 'the syntax', 'HDL language', 'that', 'the netlist', 'const char', 'SceMiMessageInPortProxy::PortName', ') const', 'This method', 'the port name', 'This', 'the path name', 'the SceMiMessageInPort  macro instance', 'the containing transactor', 'the syntax', 'HDL language', 'that', 'the netlist', 'unsigned\nSceMiMessageInPortProxy::PortWidth() const', 'This method', 'the port width', 'This', 'the value', 'the PortWidth  parameter', 'that', 'the \nassociated SceMiMessageInPort  instance', 'the hardware side', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '944.3.6.4 Destructor', 'no public destructor', 'this class', 'Destruction', 'all message input ports', 'the SceMi::ShutDown()  function', '4.3.7 class', 'The class MessageOutPortProxy', 'the application', 'a proxy interface', 'the transactor \nmessage output port', 'Output Messages', 'no methods', 'this object', 'messages', 'that', 'the output port \nproxy', 'that operation', 'the receive callbacks', 'callbacks', 'an output port proxy', 'it', 'the channel', 'page', 'The prototype', 'the receive callback', 'Receive', 'context', 'data', 'the receive callback', 'a pointer', 'a class SceMiMessageData  object', 'page', 'that', 'the content', 'the received message', 'It', 'the context pointer', 'The context pointer', 'a pointer', 'the object', 'the software model', 'that', 'the port proxy', 'Proper usage', 'this callback', 'the data', 'The reference', 'the \nSceMiMessageData', 'limited lifetime', 'the callback returns', 'scope', 'a SystemC context', 'the callback', 'some minor manipulation', 'the context object', 'a suspended thread resume', 'the main processing', 'the received transaction', 'SceMiEC', 'the call', 'This', 'an error', 'the  SceMi::ServiceLoop', 'which', 'the receive callback', 'the \ncallback', 'the first place', 'standard error handling procedures', 'page', 'the service loop function', 'itself', 'an error', 'the receive callback', 'implication', 'it', 'an application error', 'not an SCE-MI error', 'it', 'the responsibility', 'the application', 'the error', 'a flag', 'the context object', 'the callback', 'Port Binding\nvoid ReplaceBinding', ',\nSceMiEC', 'This method', 'the SceMiMessageOutPortBinding  object', 'that', 'this port proxy object', 'page', 'This', 'contexts', 'callback functions', 'the output message port proxy', 'binding\nNew callback and context information', 'this message output port proxy', 'Formal Functional Specification', '94 Functional Requirements Specification', 'SCE-MI)4.3.7.3 Accessors', 'SceMiMessageOutPortProxy::TransactorName', '() const', 'This method', 'the name', 'the transactor', 'that', 'the port', 'This', 'the absolute \nhierarchical path name', 'the transactor instance', 'the syntax', 'HDL language', 'that', 'the netlist', 'const char', 'SceMiMessageOutPortProxy::PortName', ') const', 'This method', 'the port name', 'This', 'the path name', 'the SceMiMessageOutPort  macro instance', 'the containing transactor', 'the syntax', 'HDL language', 'that', 'the netlist', 'unsigned\nSceMiMessageOutPortProxy::PortWidth', ') const', 'This method', 'the port width', 'This', 'the value', 'the PortWidth  parameter', 'that', 'the \nassociated SceMiMessageOutPort  instance', 'the hardware side', '4.3.7.4 Destructor', 'no public destructor', 'this class', 'Destruction', 'all message output ports', 'the SceMi::ShutDown()  function', '4.4 Software Side Interface - C API', 'The SCI-MI software side', 'an ANSI standard C API', 'All', 'the subsections', 'those', 'the C++ API', 'section', 'page', 'It', 'the C API', 'functions', 'that', 'wrap', 'methods', 'the C++ API', 'The prototypes', 'those functions', 'a minimum', 'explanatory text', 'full documentation', 'a function', 'its corresponding subsection', 'section', 'page 61.Formal Functional Specification\nFunctional Requirements Specification', 'SCE-MI', 'The C API', 'its own header file', 'the following minimum content', 'long long SceMiU64', 'SceMi', 'typedef', 'void SceMiParameters', 'typedef', 'typedef', 'SceMiMessageInPortProxy;typedef void', 'typedef int', 'ServiceLoopHandler', 'int', 'typedef enum', '{\nSceMiOK', '} SceMiErrorType', 'typedef struct', '{\nconst char', 'Culprit', 'const char', 'Message', 'SceMiErrorType', 'Type;int Id', '} SceMiEC', 'typedef', 'SceMiEC *ec', 'SceMiInfo', 'typedef struct', '{\nconst char', 'Culprit', 'const char', 'Message', 'Type;int I', '} SceMiIC', 'typedef', 'SceMiInfoHandler)(void *context', 'SceMiIC', 'ic', 'typedef struct', 'Context;void', '*IsReady)(void *context', 'Close)(void', '} SceMiMessageInPortBinding;typedef struct', 'Context', 'Receive', 'const SceMiMessageData', 'data', 'Close)(void', 'An application', 'either the C API header', 'the C++ API header', 'not both', 'ANSI C', 'default argument values', 'the last SceMiEC *ec argument', 'each function', 'a NULL.Formal Functional Specification', '94 Functional Requirements Specification', 'SCE-MI)4.4.2 Miscellaneous Interface Support Issues', 'SceMiErrorHandler errorHandler', 'Info Handling', 'SceMiInfoHandler infoHandler', '4.4.3 SceMi - SCE-MI Software Side Interface\n4.4.3.1 Version Discovery\nint\nSceMiVersion', 'const char', '4.4.3.2 Initialization\nSceMi *\nSceMiInit', 'int version', 'SceMiParameters', 'SceMiEC *ec', '4.4.3.3 Shutdown\nvoid\nSceMiShutdown', 'SceMi', 'SceMiEC *ec', '4.4.3.4 Message Input Port Proxy Binding\nSceMiMessageInPortProxy', 'SceMiBindMessageInPort', 'SceMi *sceMiHandle,\nconst char', 'transactorName', 'const char', 'const SceMiMessageInPortBinding *binding,\nSceMiEC *ec', '4.4.3.5 Message Output Port Proxy Binding\nSceMiMessageOutPortProxy *\nSceMiBindMessageOutPort', 'SceMi', 'const char', 'transactorName', 'const char', '4.4.3.6 Service Loop\nint\nSceMiServiceLoop(Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', 'g', 'void *context', 'SceMiEC *ec', 'SceMiParametersNew', '(\nconst char', 'SceMiEC *ec', 'This function', 'the handle', 'a parameters object', 'Formal Functional Specification', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)4.4.4.2 Destructor\nvoid\nSceMiParametersDelete', 'SceMiParameters', 'parametersHandle', '4.4.4.3  Accessors\nunsigned int\nSceMiParametersNumberOfObjects', 'SceMiParameters', 'parametersHandle', 'const char', 'objectKind', 'SceMiEC *ec', 'int\nSceMiParametersAttributeIntegerValue', 'SceMiParameters', 'parametersHandle', 'const char', 'objectKind', 'unsigned int index', 'const char', ',SceMiEC *ec', 'SceMiParametersAttributeStringValue', 'SceMiParameters', 'parametersHandle', 'const char', 'objectKind', 'unsigned int index', 'const char', 'SceMiEC *ec', 'void\nSceMiParametersOverrideAttributeIntegerValue', 'SceMiParameters', 'parametersHandle', 'const char', 'objectKind', 'unsigned int index', 'const char', 'SceMiEC *ec', 'void\nSceMiParametersOverrideAttributeStringValue', 'SceMiParameters', 'parametersHandle', 'const char', 'objectKind', 'unsigned int index', 'const char', 'const char', '*value', 'SceMiEC *ec', '4.4.5 SceMiMessageData - Message Data Object\n4.4.5.1 Constructor\nSceMiMessageData', 'SceMiMessageDataNew', 'const SceMiMessageInPortProxy', 'messageInPortProxyHandle', 'SceMiEC *ec', 'This function', 'the handle', 'a message data object', 'messages', 'the specified \ninput port proxy', 'Formal Functional Specification\nFunctional Requirements Specification', 'SCE-MI', '944.4.5.2 Destructor\nvoid\nSceMiMessageDataDelete', 'SceMiMessageData', 'messageDataHandle', '4.4.5.3 Accessors\nunsigned int\nSceMiMessageDataWidthInBits', '(\nconst SceMiMessageData', 'messageDataHandle', 'unsigned int\nSceMiMessageDataWidthInWords', 'const SceMiMessageData', 'messageDataHandle', 'void\nSceMiMessageDataSet', '(\nSceMiMessageData', 'messageDataHandle', 'i', 'SceMiU32 word', 'SceMiEC *ec', 'void\nSceMiMessageDataSetBit', 'SceMiMessageData', 'messageDataHandle', 'SceMiEC *ec', 'void\nSceMiMessageDataSetBitRange', 'SceMiMessageData', 'messageDataHandle', 'unsigned int i', 'unsigned int range', 'SceMiU32 bits', 'SceMiEC *ec', 'SceMiU32\nSceMiMessageDataGet', 'const SceMiMessageData', 'messageDataHandle', 'unsigned int', 'SceMiEC *ec', 'int\nSceMiMessageDataGetBit', 'const SceMiMessageData', 'messageDataHandle', 'unsigned int i', 'SceMiEC', '*ec', 'const SceMiMessageData', 'messageDataHandle', 'unsigned int i', 'unsigned int range', 'SceMiU64\nSceMiMessageDataCycleStamp', 'const SceMiMessageData', 'messageDataHandle', 'Formal Functional Specification', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)4.4.6 SceMiMessageInPortProxy', 'Sending Input Messages\nvoid\nSceMiMessageInPortProxySend', 'SceMiMessageInPortProxy', 'messageInPortProxyHandle', 'const SceMiMessageData', 'messageDataHandle', 'SceMiEC *ec', 'Port Binding\nvoid SceMiMessageInPortProxyReplaceBinding', 'const SceMiMessageInPortBinding* binding,\nSceMiEC* ec', '4.4.6.3 Accessors\nconst char', 'SceMiMessageInPortProxyTransactorName', 'const SceMiMessageInPortProxy', 'messageInPortProxyHandle', 'const char', 'SceMiMessageInPortProxyPortName', 'const SceMiMessageInPortProxy', 'messageInPortProxyHandle', 'SceMiMessageInPortProxyPortWidth(\nconst SceMiMessageInPortProxy', 'messageInPortProxyHandle', 'Port Binding', 'messageOutPortProxyHandle', 'SceMiMessageOutPortBinding', '* binding,\nSceMiEC* ec', '4.4.7.2 Accessors', 'SceMiMessageOutPortProxyTransactorName', 'const char', 'SceMiMessageOutPortProxyPortName', 'unsigned\nSceMiMessageOutPortProxyPortWidth', 'const SceMiMessageInPortProxy', 'messageOutPortProxyHandle', 'Formal Functional Specification\nFunctional Requirements Specification', 'SCE-MI', '94Appendix A', 'Glossary\nAbstraction Bridge\nA collection', 'abstraction gasket  components', 'that', 'a bus cycle', 'a purely untimed model', 'The idea', 'the untimed testbench models', 'the DUT', 'itself', 'Figure', 'page', 'fact', 'it', 'a disguised BCA model', 'Figure', 'page', 'Abstraction Gasket\nA special model', 'that', 'the level', 'abstraction', 'data', 'its input', 'output', 'example', 'an abstraction gasket', 'an untimed transaction', 'a series', 'cycle accurate events', 'it', 'a series', 'events', 'a single message', 'Examples', 'abstraction gaskets', 'CoWare or SystemC BCASH models', 'Ikos \ntransactors', 'definition', 'untimed model', 'Bridge Netlist\nThe bridge netlist', 'the top level', 'the user', 'netlist', 'components', 'the \nhardware side', 'a co-modeling process', 'The components', 'the bridge netlist', 'transactors', 'DUT', 'SceMiClockPort  macros', 'convention', 'the top level netlist module', 'the user', 'the infrastructure linker', 'Bridge', 'Verilog', 'a file', 'Bridge.v', 'Co', '-', 'Emulation\nA shorthand notation', 'co-emulation modeling', 'co', '-', 'modeling', 'definition', 'co', '-', 'modeling', 'Co', 'Modeling', 'it', 'broader meanings', 'this document', 'this document', 'co', '-', 'modeling', 'co', '-', 'modeling', 'contrast', 'a broader definition', 'co-\nmodeling', 'that', 'co', '-', 'modeling', 'co', '-emulation \nmodeling', 'modeling', 'the process', 'modeling', 'a mixture', 'software models', 'an untimed  level', 'abstraction', 'an abstraction bridge', 'hardware models', 'the RTL level', 'abstraction', 'an emulator', 'The following diagram', 'such a configuration', 'the SCE-MI', 'the abstraction bridge', 'Formal Functional Specification', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE', 'page', 'meanings', 'acronyms', 'Another illustration', 'Figure', 'page', '(cclock', 'The clock', 'that', 'the DUT', 'any transactor', 'operations', 'that', 'erroneous operation', 'the DUT', 'it', 'such operations', 'any transactor', 'controlled time', 'the operation', 'clocking', 'the DUT', 'The term cclock', 'this \ndocument', 'a synonym', 'controlled clock', 'Controlled Time\nTime', 'which', 'the controlled clock', 'the controlled clock', 'one or more transactors', 'Operations', 'uncontrolled time', 'controlled time', 'controlled clock  cycles', 'Co-Simulation\nExecution', 'software models', 'different levels', 'abstraction', 'that', 'abstraction gaskets', 'CoWare’s BCASH models', 'The following \ndiagram', 'such a configuration', 'section', 'page', 'meanings', 'acronyms', 'The key difference', 'co', '-', 'simulation', 'co', '-', 'emulation', 'software models', 'a traditional HDL simulator interface', 'a proprietary API', 'whereas the latter couples software models', 'an emulator', 'an optimized transaction oriented message passing interface', 'SCE-MI.ISSB\nF\nMBCASH\nRTCSCE-MIgate\nnetlistHardware\nEmulatorSoftware\nModelsAbstraction\nBridge Models\nISSB\nF\nMBCASH UTC BCASH RTC\nHDLC-algorithmFormal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94Cycle Stamping\nA process', 'which', 'messages', 'the number', 'elapsed counts', 'the fastest controlled clock', 'the hardware side', 'a co-modeled design', 'Don’t Care Duty Cycle\nA  posedge active don’t care duty cycle', 'a way', 'a duty cycle', 'the user', 'the posedge', 'the clock', 'the period', 'the negedge', 'relation', 'other cclocks', 'a functional simulation', 'such a case', 'the \nDutyHi  parameter', 'The DutyLo', 'an arbitrary number', 'units', 'that', 'the whole period', 'the Phase', 'a percentage', 'the period', '(i.e. DutyHi', 'page', 'more details', 'A  negedge', 'a way', 'a duty cycle', 'the user', 'the negedge', 'the clock', 'the period', 'the posedge', 'relation', 'other cclocks', 'a functional simulation', 'such a case', 'the \nDutyLo  parameter', 'The DutyHi', 'an arbitrary number', 'units', 'that', 'the whole period', 'the Phase', 'a percentage', 'the period', '(i.e. DutyHi', 'page', 'more details', 'DUT\nDevice', 'Design', 'Test', 'that', 'hardware', 'a software testbench', 'an abstraction bridge', 'the SCE-MI', 'DUT Proxy\nSoftware model', 'which', 'a “socket', 'that', 'an abstraction bridge', 'the rest', 'a software testbench', 'an untimed DUT model', 'the abstraction bridge', 'the SCE-MI', 'the job', 'the DUT proxy', 'the message port proxy interfaces', 'the message \nchannels', 'the interface', 'Figure', 'page', 'an illustration', 'DUT proxies', 'Hardware Model\nModel', 'a block', 'that', 'a structural representation', 'a result', 'synthesis', 'a gate netlist', 'an appropriate tool', 'that', 'the hardware side', 'a co-\nmodeling process', '(i.e., an emulator', 'other hardware simulation platform', 'It', 'real silicon', '(i.e., a CPU core or memory chip', 'an emulator or simulation accelerator', 'Hardware Side', 'definition', 'software side', 'model', 'testbench', 'SCE-MIHardware Emulator\nDUT\nCPU IP\nMEMcore', 'fileOutfileFormal Functional Specification', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', '(SCE-MI)Infrastructure Linkage Process', 'The process', 'that', 'a user description', 'the hardware', 'namely the source', 'bridge', 'netlist', 'that', 'the interconnect', 'the transactors', 'the DUT', 'the SCE-MI interface components', 'that netlist', 'a form', 'a co-modeling session', 'Part', 'this compile process', 'additional structure', 'the bridge netlist', 'that', 'the user', 'netlist', 'the SCE-MI infrastructure implementation components', 'Macros\nImplementation components', 'the hardware emulator vendor', 'the hardware side', 'the SCE-MI infrastructure', 'The required macros', 'this specification', 'the \nSceMiMessageInPort', 'SceMiMessageOutPort', 'SceMiClockControl', 'SceMiClockPort  macros', 'Message\nA unit', 'data', 'arbitrary size', 'abstraction', 'a channel', 'Messages', 'specific clocked events', 'many clocks', 'event activity', 'the most part', 'the term message', 'transaction', 'some contexts', 'transaction', 'infrastructure overhead content', 'addition', 'user payload data', 'a lower layer', 'the interface', 'the term message  denotes', 'Message Channel', 'A two ended conduit', 'messages', 'the software and hardware sides', 'an abstraction \nbridge', 'Message Port', 'The hardware side  end', 'a message channel', 'A message port', 'the means', 'which', 'access', 'messages', 'the channel', 'the software side', 'Message Port Proxy\nThe software side  end', 'a message channel', 'A message port proxy', 'the means', 'which', 'DUT proxies', 'other software models', 'access', 'messages', 'the channel', 'the hardware side', 'definition', 'posedge', 'Posedge', 'this', 'a Verilog specific term', 'that', 'the rising edge', 'a clock', 'it', 'this document', 'the same thing', 'the falling edge', 'a clock', 'Service Loop\nThis', 'the method', 'that', 'a means', 'a set', 'software models', 'a host workstation', 'access', 'the SCE-MI software side', 'any pending input or output messages', 'the channels', 'This method', 'the software', 'the co-modeling session', 'order', 'backup', 'messages', 'the possibility', 'system deadlock', 'multi-threaded environments', 'it', 'sense', 'the service loop call', 'continually running thread', 'Software Model\nModel', 'a block', 'hardware', 'software', 'that', 'the software side', 'a co-Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94modeling session', '(i.e., the host workstation', 'Such a model', 'an algorithm (C', 'C++', 'an ISS', 'a hardware model', 'that', 'an appropriate language environment', 'CoWare', 'SystemC', 'an HDL simulator', 'Software Side', 'This term', 'the portion', 'a user’s design', 'which', 'a co-modeling session', 'the host workstation', 'the portion', 'the emulator', 'which', 'the hardware side', 'The SCE-MI infrastructure', 'itself', 'software side', 'hardware side components', 'Structural Model\nA netlist', 'hardware models', 'other structural models', 'this definition', 'it', 'structural models', 'hierarchy', 'Transaction', 'definition', 'message', 'Transactor\nA form', 'abstraction gasket', 'The job', 'a transactor', 'an untimed transaction', 'a series', 'cycle accurate clocked events', 'a series', 'clocked events', 'a single message', 'messages', 'transactors', 'the ability', 'controlled time', 'message decomposition operations', 'clocked data', 'a DUT', 'messages', 'they', 'controlled time', 'message composition operations', 'new clocked data', 'a DUT', 'Uncontrolled Clock (uclock)\nFree running system clock', 'the SCE-MI infrastructure', 'transactor  modules', 'states', 'uncontrolled time', 'The term uclock', 'this document', 'a synonym', 'uncontrolled clock', 'Uncontrolled Reset', 'This', 'the system reset', 'the SCE-MI infrastructure', 'transactor modules', 'This signal', 'the beginning', 'simulated time', 'transitions', 'an arbitrary (implementation dependent) number', 'uclocks', 'It', 'a transactor', 'The controlled reset', 'the SCE-MI hardware side infrastructure', 'the very beginning', 'a co-modeling session', 'Uncontrolled Time\nTime', 'that', 'the uncontrolled clock', 'the controlled clock', 'controlled time', 'Untimed Model\nA block', 'that', 'the functional level', 'other models', 'the form', 'messages', 'An untimed model', 'no notion', 'a clock', 'its operation', 'messages', 'turn', 'operations', 'other untimed models', 'messages', 'Formal Functional Specification', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)Appendix B', 'Multiclock Hardware Side Interface Example', 'The following diagram', 'the top level structure', 'a simple multiclock', 'FIGURE', 'Multiclock', 'This design', 'the following points', 'ClockPort  instances', 'clocks', 'cclock4_1', 'no parameters', 'the SceMiClockPort  instance cclock', 'all default parameters', 'This', 'cclock', 'a ClockNum=1', 'a clock ratio', 'a don’t care duty cycle', 'TxRdyOutRxRdyOut\nMessageOut', 'ClkDiv2TxDUTd1\nUclkRst', 'ReadyForCclockCclockEnabled#1 c1', 'CclockNegEdgeEnabled\nSceMiClockControl\nUclockUreset', 'ReadyForCclockCclockEnabled#2 c2\nReadyForCclockNegEdge\nCclockNegEdgeEnabled‘1', '‘1’\nSceMiClockControl\nUclockUreset', 'ReadyForCclock\nCclockEnabled#3 c1', '[ ] DutInData [ ]DutInCtrl DutInCtrl', 'DutOutCtrlDutOutData', '[ ] DutOutData [ ]DutOutCtrl\nDutInData [ ] DutInData [ ]DutInCtrl DutInCtrl\nDutOutCtrlDutOutData', '[ ] DutOutData [ ]DutOutCtrlSceMiClockPort\nCclockCresetcclock\nSceMiClockPort\nCclockCreset#(2', '8) cclock4_1RxTransactoru2Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94phase shift', 'the controlled reset', 'it', 'an active duration', '8 controlled clock \ncycles', '\x7fThe cclock2_1  instance', 'SceMiClockPort', 'the first three parameters', 'the rest', 'their default values', 'This', 'the cclock2_1', 'a clock ratio', '(i.e., a \n“divide-by-2” clock', 'a duty cycle', '50%', 'a phase shift', 'an 8 clock cycle reset duration', '\x7fThe', 'instance', 'SceMiClockPort', 'a ClockNum=3', 'a clock ratio', '(i.e., a “divide-\nby-4” clock', 'a duty cycle', '75%', 'a phase shift', '30%', 'the clock period', 'an 8 clock cycle reset duration', '\x7fThe TxTransactor  transactor model', 'Bridge.u1', 'clocks', 'its SceMiClockControl  macro instances', 'ClockNum=1', 'a message input port', 'p1', 'that', 'a \nbit-width', '\x7fThe RxTransactor  transactor model', 'Bridge.u2', 'clock cclock4_1', 'its \nSceMiClockControl  macro instance', 'a message input port', 'p1', 'that', 'a \nbit-width', '128.Formal Functional Specification', '94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)The', 'some', 'the VHDL source code', 'ieee.std_logic_1164.all;library SceMi', 'SceMi.SceMiMacros.all', 'entity', 'Bridge', 'end', 'architecture', 'Structural', 'Bridge', 'TxTransactor', 'port', 'DutInCtrl', 'DutInData', 'std_logic_vector(31', 'DutOutCtrl', 'std_logic', 'std_logic_vector(31', 'end component TxTransactor', 'component', 'port', 'DutInCtrl', 'DutInData', 'std_logic_vector(31', 'downto', 'DutOutCtrl', 'out std_logic', 'Clk', 'Rst', 'ClkDiv2', 'component', 'component', 'RxTransactor', 'port', 'DutInCtrl', 'DutOutCtrl', 'std_logic', 'std_logic_vector(31', 'downto', 'end component RxTransactor', 'component RxDUT', 'port', 'DutInCtrl', 'DutInData', 'std_logic_vector(31', 'downto', 'DutOutCtrl', 'downto', 'Clk', 'Rst', 'end component', 'txDutInCtrl', 'signal txDutInData', 'txDutOutData', 'std_logic_vector(31', 'downto', 'signal rxDutInData', 'std_logic_vector(31', 'downto', 'signal cclock', 'creset', 'clkDivideBy2', 'clkDivideBy4 cresetDivideBy4', 'u1', 'TxTransactor port map', 'txDutInCtrl', 'txDutInData', 'txDutOutCtrl', 'TxDUT        port map', 'txDutInCtrl', 'txDutOutCtrl', 'txDutOutData', 'creset', 'clkDivideBy2', 'SceMiClockPort port map', 'cclock2_1', 'SceMiClockPort\n        generic map', 'port map', 'clkDivideBy2', 'u2', 'RxTransactor port map', 'txDutInCtrl', 'txDutOutCtrl', 'd2: RxDUT        port map', 'txDutInCtrl', 'txDutOutCtrl', 'txDutOutData', 'SceMiClockPort\n        generic map', 'port map', 'clkDivideBy2', 'end;Formal Functional Specification\nFunctional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI', '94library ieee', 'ieee.std_logic_1164.all;library SceMi', 'SceMi.SceMiMacros.all', 'entity TxTransactor', 'port', 'DutInCtrl', 'DutInData', 'std_logic_vector(31', 'downto', 'DutOutCtrl', 'std_logic', 'std_logic_vector(31', 'downto', 'end', 'architecture', 'Structural', 'TxTransactor', 'port', 'TxRdyIn', 'RxRdyIn', 'Message', 'std_logic(63', 'DutInCtrl', 'DutInData', 'std_logic_vector(31', 'downto', 'DutOutCtrl', 'DutOutData', 'std_logic_vector(31', 'downto', 'Uclk', 'Rst', 'ReadyForCclock', 'CclockEnabled', 'ReadyForCclockDiv2', 'CclockEnabledDiv2', 'end component TxTransactor', 'transmitReady', 'receiveReady', 'std_logic', 'signal message', 'std_logic_vector(63', 'signal uclock', 'std_logic', 'signal', 'readyForCclock', 't1', 'TxTransactorCore port map', 'receiveReady', 'message', 'DutInCtrl', 'DutInData, DutOutCtrl', 'DutOutData', 'readyForCclock', 'readyForCclockDiv2', 'SceMiMessageInputPort\n            generic map', '64 )            port map', 'transmitReady', 'receiveReady', 'message', 'c1', 'SceMiClockControl\n            port map', 'uclock', 'readyForCclock', 'SceMiClockControl\n            generic map', '2 )\n            port map', 'end;Formal Functional Specification', '94 of 94 Functional Requirements Specification', 'Standard Co-Emulation Modeling Interface', 'SCE-MI)Appendix C', 'VHDL', 'Package', 'The following package', 'SCE-MI macro component declarations', 'an application', 'It', 'this package', 'a library ‘SceMi', 'it', 'the application code', 'library SceMi', 'SceMi.SceMiMacros.all', 'the source code', 'the package', ':\nlibrary ieee;use ieee.std_logic_1164.all', 'package', 'PortWidth', 'ReceiveReady', 'std_logic', 'Message', 'out std_logic_vector', 'PortWidth-1', 'PortWidth', 'PortPriority', 'port', 'TransmitReady', 'ReceiveReady', 'Message', 'std_logic_vector', 'PortWidth-1', 'ClockNum', '=', 'RatioNumerator', '=', 'RatioDenominator', '=', 'DutyLo', '=', 'Phase', '=', 'ResetCycles', 'port', 'Cclock', '( ClockNum', 'port', 'Uclock', 'Ureset', 'std_logic', 'CclockEnabled', 'end component'], 'keywords': ['emulation modeling', 'emulation apis', 'emulators verification', 'standard emulation', 'model emulator', 'models emulator', 'emulation api', 'common emulation', 'emulator modeling', 'known emulation']}', 'RUN'), ('01-12-2002', '2'), ('CID', 'ERV')], ('CAD', '2', 'GPO', ('1'), ('2', 'RUN', 'EAGLE)], ('2.0', 'WALL AROUND THE WORLD', 'GPO', '1')], (((N, D)(COSMIC, 'ORG')))

We can also create a UML use case diagram for